version: '3.8'

services:
  fdb-server:
    image: foundationdb/foundationdb:7.3.2
    networks:
      - hostnet
    environment:
      FDB_CLUSTER_FILE_CONTENTS: '$FDB_CLUSTER_FILE_CONTENTS'
      FDB_NETWORKING_MODE: 'container'
      FDB_CLUSTER_FILE: '/etc/foundationdb/fdb.cluster'
    volumes:
      - "/etc/foundationdb:/etc/foundationdb"
      - "/etc/foundationdb/data:/var/fdb/data"
      - "/etc/foundationdb/logs:/var/fdb/logs"
    deploy:
      mode: global
      placement:
        constraints: [ node.role == manager ]


  WebAppAPI:
    image: hamdykhader/simplyblock:k8s-v1.0.1
    command: "python WebApp/app.py"
    deploy:
      endpoint_mode: dnsrr
      mode: global
      placement:
        constraints: [node.role == manager]
    volumes:
      - "/etc/foundationdb:/etc/foundationdb"
    environment:
      - FLASK_DEBUG=True
      - FLASK_ENV=production

  CLI:
    image: hamdykhader/simplyblock:k8s-v1.0.1
    command: "bash scripts/run_ssh.sh $CLI_SSH_PASS"
    deploy:
      mode: global
      placement:
        constraints: [node.role == manager]
    ports:
      - 2222:22
    volumes:
      - "/etc/foundationdb:/etc/foundationdb"

  NodeMonitor:
    image: hamdykhader/simplyblock:k8s-v1.0.1
    command: "python api/management/services/mgmt_node_monitor.py"
    deploy:
      placement:
        constraints: [node.role == manager]
    volumes:
      - "/etc/foundationdb:/etc/foundationdb"

  LVolStatsCollector:
    image: hamdykhader/simplyblock:k8s-v1.0.1
    command: "python api/management/services/lvol_stat_collector.py"
    deploy:
      placement:
        constraints: [node.role == manager]
    volumes:
      - "/etc/foundationdb:/etc/foundationdb"

  DeviceStatsCollector:
    image: hamdykhader/simplyblock:k8s-v1.0.1
    command: "python api/management/services/device_stat_collector.py"
    deploy:
      placement:
        constraints: [node.role == manager]
    volumes:
      - "/etc/foundationdb:/etc/foundationdb"

  PortStatsCollector:
    image: hamdykhader/simplyblock:k8s-v1.0.1
    command: "python api/management/services/port_stat_collector.py"
    networks:
      - hostnet
    deploy:
      mode: global
      placement:
        constraints: [node.role == worker]
    volumes:
      - "/etc/foundationdb:/etc/foundationdb"

  visualizer:
    image: dockersamples/visualizer:latest
    ports:
      - 8081:8080
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]


  HAProxy:
    image: haproxytech/haproxy-debian:latest
    deploy:
      mode: global
      placement:
        constraints: [node.role == manager]
    ports:
      - 80:80
      - 8404:8404
    volumes:
      - "$TD/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg"


#  SpdkApp:
#    privileged: true
#    image: hamdykhader/spdk:k8s
#    command: "/root/scripts/run_spdk"
#    deploy:
#      placement:
#        constraints: [node.role == worker]
#    volumes:
#      - "/sys:/sys"
#      - "/dev:/dev"
#      - "/var/tmp:/var/tmp"


  SpdkAppProxy:
    image: hamdykhader/spdk:k8s-v1.0.1
    command: "python /root/scripts/spdk_http_proxy.py"
    networks:
      - hostnet
    deploy:
      mode: global
      placement:
        constraints: [node.role == worker]
      restart_policy:
        condition: on-failure
        delay: 3s
        window: 15s
    volumes:
      - "/var/tmp:/var/tmp"
      - "/etc/foundationdb:/etc/foundationdb"


networks:
  hostnet:
    external: true
    name: host
