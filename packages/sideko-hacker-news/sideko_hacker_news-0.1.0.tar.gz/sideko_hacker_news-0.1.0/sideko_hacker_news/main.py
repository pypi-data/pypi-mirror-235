"""Generated by Sideko (sideko.dev)"""
import typing
import json
import requests

from .schemas import *

JSONType = typing.Union[str, int, float, bool, None, typing.Dict[str, typing.Any], typing.List[typing.Any]]

class RequestError(Exception):
    def __init__(self, status_code: int, method: str, url: str, message: str):
        super().__init__(f"received {status_code} from {method.upper()} {url}")
        self.status_code = status_code
        self.method = method
        self.url = url
        try:
            self.data = json.loads(message)
        except:
            self.data = message

class Client:
    def __init__(self,  base_url: typing.Optional[str] = None):
        url = base_url or "https://hacker-news.firebaseio.com/v0"
        self.base_url = url        
        self.session = requests.Session()

    def _cast_list(self, input_list, target_class):
        casted = []
        for el in input_list:
            if isinstance(el, list):
                casted.append(self._cast_list(el, target_class))
            else:
                casted.append(target_class.from_dict(el))
        return casted

    def _raise_exception(self, response: requests.models.Response) -> typing.Any:
        method = response.request.method or "unknown"
        raise RequestError(response.status_code, method, response.url, response.text)

    def _to_json_encodable(self, target: typing.Any) -> JSONType:
        if isinstance(target, list):
            return [self._to_json_encodable(el) for el in target]

        to_dict_method = getattr(target, "to_dict", None)
        if callable(to_dict_method):
            return target.to_dict()

        return target


    def get_ask_story_ids(self, *, print: typing.Optional[str] = None) -> typing.List[int]:
        """ List the latest Ask HN story IDs. Will return maximum 200 IDs. -  - *Documentation &amp; SDKs generated by Sideko from OpenAPI. Install and try the free beta SDK generator on our [Github](https://github.com/Sideko-Inc/sideko).* -  """
        endpoint = f"/askstories.json"
        url = f"{self.base_url}{endpoint}"

        params = {} #type: dict[str, typing.Any]
        if print is not None:
            params["print"] = print

        raw_response = self.session.get(url, params=params)
        
        response = raw_response.json() if raw_response.ok else self._raise_exception(raw_response)
        return response

    def get_best_story_ids(self, *, print: typing.Optional[str] = None) -> typing.List[int]:
        """ List the best hacker news story IDs. Will return maximum 500 IDs. -  - *Documentation &amp; SDKs generated by Sideko from OpenAPI. Install and try the free beta SDK generator on our [Github](https://github.com/Sideko-Inc/sideko).* -  """
        endpoint = f"/beststories.json"
        url = f"{self.base_url}{endpoint}"

        params = {} #type: dict[str, typing.Any]
        if print is not None:
            params["print"] = print

        raw_response = self.session.get(url, params=params)
        
        response = raw_response.json() if raw_response.ok else self._raise_exception(raw_response)
        return response

    def get_item(self, *, id: int, print: typing.Optional[str] = None) -> Item:
        """ Stories, Comments, Jobs, Ask HNs and even Polls are all considered items, with slightly different structures (see the examples). -  - *Documentation &amp; SDKs generated by Sideko from OpenAPI. Install and try the free beta SDK generator on our [Github](https://github.com/Sideko-Inc/sideko).* -  """
        endpoint = f"/item/{id}.json"
        url = f"{self.base_url}{endpoint}"

        params = {} #type: dict[str, typing.Any]
        if print is not None:
            params["print"] = print

        raw_response = self.session.get(url, params=params)
        
        response = raw_response.json() if raw_response.ok else self._raise_exception(raw_response)
        response = Item.from_dict(response)
        return response

    def get_job_story_ids(self, *, print: typing.Optional[str] = None) -> typing.List[int]:
        """ List the latest Job story IDs. Will return maximum 200 IDs. -  - *Documentation &amp; SDKs generated by Sideko from OpenAPI. Install and try the free beta SDK generator on our [Github](https://github.com/Sideko-Inc/sideko).* -  """
        endpoint = f"/jobstories.json"
        url = f"{self.base_url}{endpoint}"

        params = {} #type: dict[str, typing.Any]
        if print is not None:
            params["print"] = print

        raw_response = self.session.get(url, params=params)
        
        response = raw_response.json() if raw_response.ok else self._raise_exception(raw_response)
        return response

    def get_max_item_id(self, *, print: typing.Optional[str] = None) -> int:
        """ The current largest item ID. Walking backwards from here allows you to list all items avialable through the API. -  - *Documentation &amp; SDKs generated by Sideko from OpenAPI. Install and try the free beta SDK generator on our [Github](https://github.com/Sideko-Inc/sideko).* -  """
        endpoint = f"/maxitem.json"
        url = f"{self.base_url}{endpoint}"

        params = {} #type: dict[str, typing.Any]
        if print is not None:
            params["print"] = print

        raw_response = self.session.get(url, params=params)
        
        response = raw_response.json() if raw_response.ok else self._raise_exception(raw_response)
        return response

    def get_new_story_ids(self, *, print: typing.Optional[str] = None) -> typing.List[int]:
        """ List the top hacker news story IDs. Will return maximum 500 IDs. -  - *Documentation &amp; SDKs generated by Sideko from OpenAPI. Install and try the free beta SDK generator on our [Github](https://github.com/Sideko-Inc/sideko).* -  """
        endpoint = f"/newstories.json"
        url = f"{self.base_url}{endpoint}"

        params = {} #type: dict[str, typing.Any]
        if print is not None:
            params["print"] = print

        raw_response = self.session.get(url, params=params)
        
        response = raw_response.json() if raw_response.ok else self._raise_exception(raw_response)
        return response

    def get_show_story_ids(self, *, print: typing.Optional[str] = None) -> typing.List[int]:
        """ List the latest Show HN story IDs. Will return maximum 200 IDs. -  - *Documentation &amp; SDKs generated by Sideko from OpenAPI. Install and try the free beta SDK generator on our [Github](https://github.com/Sideko-Inc/sideko).* -  """
        endpoint = f"/showstories.json"
        url = f"{self.base_url}{endpoint}"

        params = {} #type: dict[str, typing.Any]
        if print is not None:
            params["print"] = print

        raw_response = self.session.get(url, params=params)
        
        response = raw_response.json() if raw_response.ok else self._raise_exception(raw_response)
        return response

    def get_top_story_ids(self, *, print: typing.Optional[str] = None) -> typing.List[int]:
        """ List the top hacker news story IDs. Will return maximum 500 IDs. -  - *Documentation &amp; SDKs generated by Sideko from OpenAPI. Install and try the free beta SDK generator on our [Github](https://github.com/Sideko-Inc/sideko).* -  """
        endpoint = f"/topstories.json"
        url = f"{self.base_url}{endpoint}"

        params = {} #type: dict[str, typing.Any]
        if print is not None:
            params["print"] = print

        raw_response = self.session.get(url, params=params)
        
        response = raw_response.json() if raw_response.ok else self._raise_exception(raw_response)
        return response

    def get_updates(self, *, print: typing.Optional[str] = None) -> GetUpdatesJSONResponse:
        """ List recently updated item IDs and profile IDs. -  - *Documentation &amp; SDKs generated by Sideko from OpenAPI. Install and try the free beta SDK generator on our [Github](https://github.com/Sideko-Inc/sideko).* -  """
        endpoint = f"/updates.json"
        url = f"{self.base_url}{endpoint}"

        params = {} #type: dict[str, typing.Any]
        if print is not None:
            params["print"] = print

        raw_response = self.session.get(url, params=params)
        
        response = raw_response.json() if raw_response.ok else self._raise_exception(raw_response)
        response = GetUpdatesJSONResponse.from_dict(response)
        return response

    def get_user(self, *, id: str, print: typing.Optional[str] = None) -> User:
        """ Retrieves user metadata given the user ID (HN username). -  - *Documentation &amp; SDKs generated by Sideko from OpenAPI. Install and try the free beta SDK generator on our [Github](https://github.com/Sideko-Inc/sideko).* -  """
        endpoint = f"/user/{id}.json"
        url = f"{self.base_url}{endpoint}"

        params = {} #type: dict[str, typing.Any]
        if print is not None:
            params["print"] = print

        raw_response = self.session.get(url, params=params)
        
        response = raw_response.json() if raw_response.ok else self._raise_exception(raw_response)
        response = User.from_dict(response)
        return response


