{"version":3,"sources":["StarRating.tsx","index.tsx"],"names":["withStreamlitConnection","props","args","label","maxValue","defaultValue","size","emoticons","read_only","dark_theme","resetLabel","resetButton","customCSS","useState","value","setValue","theme","DarkTheme","LightTheme","useEffect","Streamlit","setFrameHeight","dangerouslySetInnerHTML","__html","style","display","flexDirection","alignItems","onChange","setComponentValue","readOnly","numItems","onClick","kind","engine","Styletron","ReactDOM","render","StrictMode","StarRating","document","getElementById"],"mappings":"gQA2DeA,eAjDS,SAACC,GACrB,MAAmHA,EAAMC,KAAlHC,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAAUC,EAAY,EAAZA,aAAcC,EAAI,EAAJA,KAAMC,EAAS,EAATA,UAAWC,EAAS,EAATA,UAAWC,EAAU,EAAVA,WAAYC,EAAU,EAAVA,WAAYC,EAAW,EAAXA,YAAYC,EAAS,EAATA,UAEtG,EAA0BC,mBAASR,GAAa,mBAAzCS,EAAK,KAAEC,EAAQ,KAEhBC,EAAQP,EAAaQ,IAAYC,IAEvCC,qBAAU,kBAAMC,IAAUC,oBAO1B,OACI,oCACA,2BAAOC,wBAAyB,CAACC,OAAQX,KACzC,4BAAKT,GACL,kBAAC,IAAa,CAACa,MAAOA,GACtB,yBAAKQ,MAAO,CAAEC,QAAS,OAAQC,cAAe,SAAUC,WAAY,SACjEpB,EACC,kBAAC,IAAc,CACXqB,SAAU,YAAc,IAAZd,EAAK,EAALA,MAAYC,EAASD,GAAQM,IAAUS,kBAAkBf,IACrER,KAAMA,EACNQ,MAAOA,EACPgB,SAAUtB,IAGd,kBAAC,IAAU,CACPuB,SAAU3B,EACVwB,SAAU,YAAc,IAAZd,EAAK,EAALA,MAAYC,EAASD,GAAQM,IAAUS,kBAAkBf,IACrER,KAAMA,EACNQ,MAAOA,EACPgB,SAAUtB,KAGnBA,GAAaG,GACV,6BACE,kBAAC,IAAM,CAACqB,QA7BI,WAChBjB,EAAS,GACTK,IAAUS,kBAAkB,IA2BMvB,KAAK,UAAU2B,KAAK,aAChD,0BAAMX,wBAAyB,CAAEC,OAAQb,a,gBCxCjDwB,EAAS,IAAIC,IAGnBC,IAASC,OACP,kBAAC,IAAMC,WAAU,KACf,kBAAC,IAAiB,CAACxB,MAAOoB,GAEtB,kBAACK,EAAU,QAIjBC,SAASC,eAAe,W","file":"static/js/main.9ac02dd7.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  ComponentProps,\r\n  Streamlit,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\";\r\nimport { StarRating, EmoticonRating } from \"baseui/rating\";\r\nimport { ThemeProvider, LightTheme, DarkTheme } from \"baseui\";\r\nimport { Button } from 'baseui/button';\r\n\r\nconst RatingComponent = (props: ComponentProps) => {\r\n    const {label, maxValue, defaultValue, size, emoticons, read_only, dark_theme, resetLabel, resetButton,customCSS} = props.args;\r\n\r\n    const [value, setValue] = useState(defaultValue);\r\n\r\n    const theme = dark_theme ? DarkTheme : LightTheme;\r\n\r\n    useEffect(() => Streamlit.setFrameHeight());\r\n\r\n    const resetRating = () => {\r\n        setValue(0);\r\n        Streamlit.setComponentValue(0);\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <style dangerouslySetInnerHTML={{__html: customCSS}}></style>\r\n        <h3>{label}</h3>\r\n        <ThemeProvider theme={theme}>\r\n        <div style={{ display: 'flex', flexDirection: 'column', alignItems: \"left\" }}>\r\n          {emoticons ? \r\n            <EmoticonRating\r\n                onChange={({value}) => {setValue(value); Streamlit.setComponentValue(value);}}\r\n                size={size}\r\n                value={value}\r\n                readOnly={read_only}\r\n            /> \r\n            :\r\n            <StarRating\r\n                numItems={maxValue}\r\n                onChange={({value}) => {setValue(value); Streamlit.setComponentValue(value);}}\r\n                size={size}\r\n                value={value}\r\n                readOnly={read_only}\r\n            />\r\n          }\r\n     {!read_only && resetButton && \r\n          <div>\r\n            <Button onClick={resetRating} size=\"compact\" kind=\"secondary\">\r\n              <span dangerouslySetInnerHTML={{ __html: resetLabel }} />\r\n            </Button>\r\n          </div>}\r\n        </div>\r\n        </ThemeProvider>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default withStreamlitConnection(RatingComponent);\r\n","\r\nimport React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport StarRating from \"./StarRating\"\r\n\r\n// Lots of import to define a Styletron engine and load the light theme of baseui\r\nimport { Client as Styletron } from \"styletron-engine-atomic\"\r\nimport { Provider as StyletronProvider } from \"styletron-react\"\r\n\r\nconst engine = new Styletron()\r\n\r\n// Wrap your CustomSlider with the baseui them\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <StyletronProvider value={engine}>\r\n      {/* <ThemeProvider theme={LightTheme}> */}\r\n        <StarRating />\r\n      {/* </ThemeProvider> */}\r\n    </StyletronProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)"],"sourceRoot":""}