name: Python Package

on: [push]

permissions:
  contents: read

jobs:
  lint-ansible:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install ansible-lint

      - name: Lint with ansible-lint
        run: ansible-lint -v

  lint-python:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install pycodestyle

      - name: Lint with pycodestyle
        run: python -m pycodestyle molecule_qemu

  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -yq --no-install-recommends mkisofs qemu-system-x86 qemu-utils

      - name: Run test
        run: make test-platform-amd64

  build:
    runs-on: ubuntu-latest
    needs: [lint-ansible, lint-python, test]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: python -m pip install build --user

      - name: Build a binary wheel and a source tarball
        run: python -m build --sdist --wheel --outdir dist/ .

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: python-package
          path: 'dist/*'

  publish:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: python-package

      - name: Publish package
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages-dir: .

  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')

    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check if pre-release
        id: prerelease
        run: |
          echo "prerelease=$(if [[ "${{ github.ref }}" == *"rc"* ]]; then echo "true"; else echo "false"; fi)" >> "$GITHUB_OUTPUT"

      - uses: actions/download-artifact@v3
        with:
          name: python-package

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: ${{ steps.prerelease.outputs.prerelease }}
          generate_release_notes: true
          files: |
            *.whl
            *.tar.gz
