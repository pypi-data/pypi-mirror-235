#pragma once

#ifndef CUDART_PI_F
#define CUDART_PI_F 3.1415926f
#endif

// LeakyReLU
#define __SURO_FUNC_1(x, alpha) sg = 1.0;

// sigmoid
#define __SURO_FUNC_2(x, alpha)                                  \
    sg = 1.0 / (1.0 + expf(-alpha * x));                         \
    sg = (1.0 - sg) * sg * alpha;
// arctan
#define __SURO_FUNC_3(x, alpha)                                  \
    sg = alpha / 2 / (1 + powf(CUDART_PI_F / 2 * alpha * x, 2));



//

#define __surrogate_gradient_function_(no, x, alpha) __SURO_FUNC_ ## no(x, alpha)

#define __SURROGATE_GRADIENT_FUNCTION_(no, x, alpha) __SURO_FUNC_ ## no(x, alpha)

#define __SWITCH_ON_SURO_FUNC__(suro)                             \
    switch(suro) {                                               \
    case 1:                                                      \
    __surrogate_gradient_function_(1, over_th, alpha) break;     \
    case 2:                                                      \
    __surrogate_gradient_function_(2, over_th, alpha) break;     \
    case 3:                                                      \
    __surrogate_gradient_function_(3, over_th, alpha) break;     \
    }