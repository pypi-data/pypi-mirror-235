"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import plans as shared_plans
from datetime import datetime
from enum import Enum
from typing import Optional

class ListPlansStatusStatus(str, Enum):
    r"""The plan status to filter to ('active', 'archived', or 'draft')."""
    ACTIVE = 'active'
    ARCHIVED = 'archived'
    DRAFT = 'draft'



@dataclasses.dataclass
class ListPlansRequest:
    created_at_gt: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'created_at[gt]', 'style': 'form', 'explode': True }})
    created_at_gte: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'created_at[gte]', 'style': 'form', 'explode': True }})
    created_at_lt: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'created_at[lt]', 'style': 'form', 'explode': True }})
    created_at_lte: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'created_at[lte]', 'style': 'form', 'explode': True }})
    cursor: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'cursor', 'style': 'form', 'explode': True }})
    limit: Optional[int] = dataclasses.field(default=20, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    status: Optional[ListPlansStatusStatus] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'status', 'style': 'form', 'explode': True }})
    r"""The plan status to filter to ('active', 'archived', or 'draft')."""
    




@dataclasses.dataclass
class ListPlansResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    plans: Optional[shared_plans.Plans] = dataclasses.field(default=None)
    r"""OK"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    r"""Raw HTTP response; suitable for custom response parsing"""
    

