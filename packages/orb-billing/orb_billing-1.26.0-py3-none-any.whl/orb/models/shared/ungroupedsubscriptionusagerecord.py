"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import billablemetricsimple as shared_billablemetricsimple
from ..shared import usage as shared_usage
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from orb import utils

class UngroupedSubscriptionUsageRecordViewMode(str, Enum):
    PERIODIC = 'periodic'
    CUMULATIVE = 'cumulative'


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class UngroupedSubscriptionUsageRecord:
    billable_metric: shared_billablemetricsimple.BillableMetricSimple = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('billable_metric') }})
    usage: list[shared_usage.Usage] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('usage') }})
    view_mode: UngroupedSubscriptionUsageRecordViewMode = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('view_mode') }})
    

