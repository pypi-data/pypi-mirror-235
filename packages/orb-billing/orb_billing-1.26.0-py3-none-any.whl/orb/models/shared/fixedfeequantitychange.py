"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from datetime import date
from enum import Enum
from orb import utils
from typing import Optional, Union

class FixedFeeQuantityChangeChangeOption(str, Enum):
    r"""Determines when the change takes effect. Note that if `effective_date` is specified, this defaults to `effective_date`. Otherwise, this defaults to `immediate` unless it's explicitly set to `upcoming_invoice."""
    IMMEDIATE = 'immediate'
    UPCOMING_INVOICE = 'upcoming_invoice'
    EFFECTIVE_DATE = 'effective_date'



@dataclasses.dataclass
class FixedFeeQuantityChangeQuantity:
    pass


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class FixedFeeQuantityChange:
    price_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price_id') }})
    r"""Price for which the quantity should be updated. Must be a fixed fee."""
    quantity: Union[float, str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quantity') }})
    change_option: Optional[FixedFeeQuantityChangeChangeOption] = dataclasses.field(default=FixedFeeQuantityChangeChangeOption.IMMEDIATE, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('change_option'), 'exclude': lambda f: f is None }})
    r"""Determines when the change takes effect. Note that if `effective_date` is specified, this defaults to `effective_date`. Otherwise, this defaults to `immediate` unless it's explicitly set to `upcoming_invoice."""
    effective_date: Optional[date] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('effective_date'), 'encoder': utils.dateisoformat(True), 'decoder': utils.datefromisoformat }})
    r"""The date that the quantity change should take effect, localized to the customer's timezone. Ifthis parameter is not passed in, the quantity change is effective according to `change_option`."""
    

