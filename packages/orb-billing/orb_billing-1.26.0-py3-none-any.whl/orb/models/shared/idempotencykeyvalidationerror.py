"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from orb import utils
from typing import Any, Optional



@dataclasses.dataclass
class IdempotencyKeyValidationErrorHeaders:
    pass

class IdempotencyKeyValidationErrorStatus(int, Enum):
    FOUR_HUNDRED = 400

class IdempotencyKeyValidationErrorType(str, Enum):
    HTTPS_DOCS_WITHORB_COM_REFERENCE_ERROR_RESPONSES_NUMBER_400_REQUEST_VALIDATION_ERRORS = 'https://docs.withorb.com/reference/error-responses#400-request-validation-errors'


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class IdempotencyKeyValidationError:
    status: IdempotencyKeyValidationErrorStatus = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    type: IdempotencyKeyValidationErrorType = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    validation_errors: list[Any] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('validation_errors') }})
    detail: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})
    headers: Optional[IdempotencyKeyValidationErrorHeaders] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('headers') }})
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})
    

