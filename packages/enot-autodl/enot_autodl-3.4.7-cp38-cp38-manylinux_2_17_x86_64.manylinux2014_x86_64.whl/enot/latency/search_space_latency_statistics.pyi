from enot.models import SearchSpaceModel
from typing import List, Optional, Union

def min_latency(arg) -> float: ...
def max_latency(arg) -> float: ...
def mean_latency(arg) -> float: ...
def median_latency(arg, n: int = ...) -> float: ...
def current_latency(arg, arch: Optional[List[Union[List[int], int]]] = ...) -> float: ...
def best_arch_latency(search_space: SearchSpaceModel) -> float: ...
def sample_latencies(arg, n: int = ...) -> List[float]: ...
