{"version":3,"file":"static/js/Radio.ddf645d5.chunk.js","mappings":"sJAwDA,UApDA,SAAyBA,GACvB,IAAAC,EAA0BC,EAAAA,SAAc,GAAAC,OAAYH,EAAMI,QAAQC,QAAQC,GAAAC,EAAAA,EAAAA,GAAAN,EAAA,GAAnEI,EAAKC,EAAA,GAAEE,EAAQF,EAAA,GAEhBG,EAAWP,EAAAA,aACf,SAACG,GAAmB,IAADK,EACjBF,EAASH,GACM,QAAfK,EAAAV,EAAMW,iBAAS,IAAAD,GAAfA,EAAiBE,UAAUP,EAC7B,GAEA,IAGID,EAAUF,EAAAA,SACd,kBAAMF,EAAMI,QAAQA,QAAQS,KAAI,SAACC,GAAc,SAAAX,OAAQW,EAAM,GAAG,GAChE,CAACd,EAAMI,QAAQA,UAUjB,OAPAF,EAAAA,WAAgB,WACVF,EAAMI,QAAQC,QAAUA,GAC1BG,EAAS,GAADL,OAAIH,EAAMI,QAAQC,OAG9B,GAAG,CAACL,EAAMI,QAAQC,SAGhBU,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CAAAC,SAAA,CACDjB,EAAMI,QAAQc,QACbC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,QAAQC,WAAY,IAAKC,SAAUvB,EAAMI,QAAQmB,SAASN,SAChEjB,EAAMI,QAAQc,SAGnBC,EAAAA,EAAAA,KAACK,EAAAA,GAAU,CACTC,YAAazB,EAAMI,QAAQqB,YAC3BC,cAAejB,EACfJ,MAAOA,EACPkB,SAAUvB,EAAMI,QAAQmB,SAASN,SAEhCb,EAAQS,KAAI,SAACC,GACZ,OACEK,EAAAA,EAAAA,KAACQ,EAAAA,GAAK,CACJC,GAAE,GAAAzB,OAAKH,EAAM6B,cAAa,KAAA1B,OAAIW,GAE9BT,MAAOS,EAAOG,UAEdE,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAAAH,SAAEH,KAHFA,EAMX,QAIR,C","sources":["pages/Board/components/VisualizationElements/RadioVizElement.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { Box, Radio, RadioGroup, Text } from 'components/kit_v2';\n\nfunction RadioVizElement(props: any) {\n  const [value, setValue] = React.useState<string>(`${props.options.value}`);\n\n  const onChange = React.useCallback(\n    (value: string) => {\n      setValue(value);\n      props.callbacks?.on_change(value);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [],\n  );\n\n  const options = React.useMemo(\n    () => props.options.options.map((option: string) => `${option}`),\n    [props.options.options],\n  );\n\n  React.useEffect(() => {\n    if (props.options.value !== value) {\n      setValue(`${props.options.value}`);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.options.value]);\n\n  return (\n    <Box>\n      {props.options.label && (\n        <Text as='label' lineHeight={1.5} disabled={props.options.disabled}>\n          {props.options.label}\n        </Text>\n      )}\n      <RadioGroup\n        orientation={props.options.orientation}\n        onValueChange={onChange}\n        value={value}\n        disabled={props.options.disabled}\n      >\n        {options.map((option: string) => {\n          return (\n            <Radio\n              id={`${props.component_key}_${option}`}\n              key={option}\n              value={option}\n            >\n              <Text>{option}</Text>\n            </Radio>\n          );\n        })}\n      </RadioGroup>\n    </Box>\n  );\n}\nexport default RadioVizElement;\n"],"names":["props","_React$useState","React","concat","options","value","_React$useState2","_slicedToArray","setValue","onChange","_props$callbacks","callbacks","on_change","map","option","_jsxs","Box","children","label","_jsx","Text","as","lineHeight","disabled","RadioGroup","orientation","onValueChange","Radio","id","component_key"],"sourceRoot":""}