{"version":3,"file":"static/js/Explorers.c35fbf01.chunk.js","mappings":"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","sources":["pages/Explorers/Explorers.style.ts","utils/hexToRgbA.ts","components/StatisticsCard/StatisticsCard.tsx","components/StatisticsCard/index.ts","components/StatisticsBar/StatisticsBar.tsx","components/StatisticsBar/index.ts","pages/Dashboard/components/ProjectStatistics/ProjectStatistics.tsx","modules/core/utils/createResource.ts","pages/Dashboard/components/ProjectContributions/ProjectContributionsStore.ts","pages/Dashboard/components/ProjectStatistics/ProjectStatisticsStore.ts","pages/Dashboard/components/ProjectStatistics/useProjectStatistics.tsx","pages/Explorers/components/ExplorerCard/ExplorerCard.style.ts","pages/Explorers/components/ExplorerCard/ExplorerCard.tsx","pages/Explorers/components/ExplorerCard/index.tsx","pages/Explorers/index.tsx","pages/Explorers/useExplorers.tsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\n\nimport { Box } from 'components/kit_v2';\n\nimport { styled } from 'config/stitches';\nimport { LayoutContainer } from 'config/stitches/foundations/layout';\n\nconst ExplorersContentContainer = styled(LayoutContainer, {\n  $$space: '$space$15',\n  py: '$13',\n  height: 'calc(100vh - $$space)',\n  overflowY: 'auto',\n  overflow: 'auto',\n  display: 'flex',\n  fd: 'column',\n});\n\nconst ExplorerCardsWrapper = styled(Box, {\n  gap: '$13',\n  display: 'flex',\n  ai: 'center',\n  fw: 'wrap',\n  mt: '$9',\n});\n\nconst ExplorerBookmarkLink = styled(NavLink, {\n  display: 'flex',\n  textDecoration: 'none',\n});\n\nexport {\n  ExplorerCardsWrapper,\n  ExplorersContentContainer,\n  ExplorerBookmarkLink,\n};\n","function hexToRgbA(hex: string, opacity: number): string {\n  let hexCode = hex?.substring(1).split('');\n  if (hexCode.length === 3) {\n    hexCode = [\n      hexCode[0],\n      hexCode[0],\n      hexCode[1],\n      hexCode[1],\n      hexCode[2],\n      hexCode[2],\n    ];\n  }\n  const tmpHex = +('0x' + hexCode.join(''));\n  return `rgba(${[(tmpHex >> 16) & 255, (tmpHex >> 8) & 255, tmpHex & 255].join(\n    ',',\n  )},${opacity || 1})`;\n}\n\nexport default hexToRgbA;\n","import * as React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { Icon, Text } from 'components/kit';\n\nimport hexToRgbA from 'utils/hexToRgbA';\n\nimport { IStatisticsCardProps } from './index';\n\nimport './StatisticsCard.scss';\n\nfunction StatisticsCard({\n  label,\n  badge = { value: '' },\n  count,\n  icon,\n  iconBgColor = '#000000',\n  cardBgColor = hexToRgbA(iconBgColor, 0.1),\n  onMouseOver,\n  onMouseLeave,\n  navLink,\n  highlighted,\n  outlined = false,\n  isLoading = false,\n}: IStatisticsCardProps) {\n  const history = useHistory();\n  const onSafeMouseOver = React.useCallback(\n    (id: string) => {\n      if (typeof onMouseOver === 'function') {\n        onMouseOver(id, 'card');\n      }\n    },\n    [onMouseOver],\n  );\n  const styles = {\n    card: {\n      borderColor: outlined ? iconBgColor : 'transparent',\n      backgroundColor: highlighted ? iconBgColor : cardBgColor,\n    },\n    iconWrapper: {\n      backgroundColor: highlighted ? '#fff' : iconBgColor,\n    },\n    iconColor: highlighted ? iconBgColor : '#fff',\n    label: highlighted ? { color: '#fff' } : {},\n    count: highlighted ? { color: '#fff' } : {},\n  };\n  return (\n    <div\n      onClick={() => navLink && history.push(navLink)}\n      onMouseLeave={onMouseLeave}\n      onMouseOver={() => onSafeMouseOver(label)}\n      className={classNames('StatisticsCard', { highlighted })}\n      style={styles.card}\n    >\n      {badge?.value && (\n        <Text\n          component='p'\n          className='StatisticsCard__badge'\n          weight={600}\n          size={8}\n          style={badge.style}\n        >\n          {badge.value}\n        </Text>\n      )}\n      {icon && (\n        <div className='StatisticsCard__iconWrapper' style={styles.iconWrapper}>\n          <Icon name={icon} color={styles.iconColor} />\n        </div>\n      )}\n      <div className='StatisticsCard__info'>\n        <Text\n          className='StatisticsCard__info__label'\n          size={10}\n          weight={600}\n          style={styles.label}\n        >\n          {label}\n        </Text>\n        <Text\n          className='StatisticsCard__info__count'\n          size={16}\n          weight={600}\n          style={styles.count}\n        >\n          <span>{isLoading ? '--' : count}</span>\n        </Text>\n      </div>\n    </div>\n  );\n}\n\nStatisticsCard.displayName = 'StatisticsCard';\n\nexport default React.memo(StatisticsCard);\n","import StatisticsCard from './StatisticsCard';\n\nexport * from './StatisticsCard.d';\n\nexport default StatisticsCard;\n","import * as React from 'react';\nimport classNames from 'classnames';\n\nimport { Tooltip } from '@material-ui/core';\n\nimport { IBarStyle, IStatisticsBarProps } from '.';\n\nimport './StatisticsBar.scss';\n\nfunction StatisticsBar({\n  data = [],\n  width = '100%',\n  height = 8,\n  onMouseOver,\n  onMouseLeave,\n}: IStatisticsBarProps) {\n  const onSafeMouseOver = React.useCallback(\n    (id: string) => {\n      if (typeof onMouseOver === 'function') {\n        onMouseOver(id, 'bar');\n      }\n    },\n    [onMouseOver],\n  );\n  const barStyles = React.useMemo(() => {\n    const styles: IBarStyle[] = [];\n    for (let i = 0; i < data.length; i++) {\n      const item = data[i];\n      const prevItemLeftPos = styles[i - 1]?.left || 0;\n      const prevItemPercent = data[i - 1]?.percent || 0;\n      const style = {\n        width: `${item.percent.toFixed(2)}%`,\n        left: i === 0 ? 0 : prevItemLeftPos + prevItemPercent,\n        backgroundColor: item.color,\n      };\n      styles.push(style);\n    }\n    return styles;\n  }, [data]);\n  return (\n    <div className='StatisticsBar' style={{ width, height }}>\n      {Object.values(data).map(\n        ({ percent, color, label = '', highlighted }, i) =>\n          percent ? (\n            <Tooltip key={`${label}-${color}`} title={label}>\n              <div\n                className={classNames('StatisticsBar__item', { highlighted })}\n                style={{ ...barStyles[i], left: barStyles[i].left + '%' }}\n                onMouseLeave={onMouseLeave}\n                onMouseOver={() => onSafeMouseOver(label)}\n              />\n            </Tooltip>\n          ) : null,\n      )}\n    </div>\n  );\n}\n\nStatisticsBar.displayName = 'StatisticsBar';\n\nexport default React.memo(StatisticsBar);\n","import StatisticsBar from './StatisticsBar';\n\nexport * from './StatisticsBar.d';\n\nexport default StatisticsBar;\n","import * as React from 'react';\n\nimport { Text } from 'components/kit';\nimport StatisticsCard from 'components/StatisticsCard';\nimport StatisticsBar from 'components/StatisticsBar';\n\nimport { useProjectStatistics } from '.';\n\nimport './ProjectStatistics.scss';\n\nfunction ProjectStatistics() {\n  const {\n    projectParamsStore,\n    projectContributionsStore,\n    statisticsBarData,\n    runsCountingMap,\n    hoveredState,\n    totalRunsCount,\n    statisticsMap,\n    onMouseOver,\n    onMouseLeave,\n  } = useProjectStatistics();\n\n  return (\n    <div className='ProjectStatistics'>\n      <Text\n        className='ProjectStatistics__totalRuns'\n        component='p'\n        tint={100}\n        weight={700}\n        size={14}\n      >\n        Total runs: {totalRunsCount}\n      </Text>\n      <div className='ProjectStatistics__cards'>\n        {Object.values(runsCountingMap).map(\n          ({ label, icon, count, iconBgColor, navLink }) => (\n            <StatisticsCard\n              key={label}\n              label={label}\n              icon={icon}\n              count={count}\n              navLink={navLink}\n              iconBgColor={iconBgColor}\n              onMouseOver={onMouseOver}\n              onMouseLeave={onMouseLeave}\n              highlighted={!!navLink && hoveredState.id === label}\n              isLoading={projectContributionsStore.loading}\n            />\n          ),\n        )}\n      </div>\n      <Text\n        className='ProjectStatistics__trackedSequences'\n        component='p'\n        tint={100}\n        weight={700}\n        size={14}\n      >\n        Tracked sequences\n      </Text>\n      <div className='ProjectStatistics__cards'>\n        {Object.values(statisticsMap).map(\n          ({ label, icon, count, iconBgColor, navLink, badge }) => (\n            <StatisticsCard\n              key={label}\n              badge={badge}\n              label={label}\n              icon={icon}\n              count={count}\n              navLink={navLink}\n              iconBgColor={iconBgColor}\n              onMouseOver={onMouseOver}\n              onMouseLeave={onMouseLeave}\n              highlighted={\n                !!navLink &&\n                hoveredState.source === 'card' &&\n                hoveredState.id === label\n              }\n              outlined={hoveredState.id === label}\n              isLoading={projectParamsStore.loading}\n            />\n          ),\n        )}\n      </div>\n      <div className='ProjectStatistics__bar'>\n        <StatisticsBar\n          data={statisticsBarData}\n          onMouseOver={onMouseOver}\n          onMouseLeave={onMouseLeave}\n        />\n      </div>\n    </div>\n  );\n}\n\nProjectStatistics.displayName = 'ProjectStatistics';\n\nexport default React.memo(ProjectStatistics);\n","import { RequestOptions } from 'https';\nimport create from 'zustand';\n\nexport interface IResourceState<T> {\n  data: T | null;\n  loading: boolean;\n  error: any;\n}\n\nconst defaultState = {\n  data: null,\n  loading: true,\n  error: null,\n};\n\nfunction createResource<T, GetterArgs = RequestOptions | any>(getter: any) {\n  const state = create<IResourceState<T>>(() => defaultState);\n\n  async function fetchData(args?: GetterArgs) {\n    state.setState({ loading: true });\n    const data = await getter(args);\n    state.setState({ data, loading: false });\n  }\n  function destroy() {\n    state.destroy();\n    state.setState(defaultState, true);\n  }\n  return { fetchData, state, destroy };\n}\n\nexport default createResource;\n","import {\n  getProjectContributions,\n  GetProjectContributionsResult,\n} from 'modules/core/api/projectApi';\nimport createResource from 'modules/core/utils/createResource';\n\nfunction projectContributionsEngine() {\n  const { fetchData, state, destroy } =\n    createResource<GetProjectContributionsResult>(getProjectContributions);\n  return {\n    fetchProjectContributions: fetchData,\n    projectContributionsState: state,\n    destroy,\n  };\n}\n\nexport default projectContributionsEngine();\n","import createResource from 'modules/core/utils/createResource';\nimport {\n  getProjectsInfo,\n  GetProjectsInfoResult,\n} from 'modules/core/api/projectApi';\n\nimport { SequenceType } from 'types/core/enums';\n\nfunction projectStatisticsEngine() {\n  const { fetchData, state, destroy } = createResource<GetProjectsInfoResult>(\n    async () => {\n      const data = await getProjectsInfo({\n        sequence: [\n          SequenceType.Metric,\n          SequenceType.Image,\n          SequenceType.Figure,\n          SequenceType.Text,\n          SequenceType.Audio,\n          SequenceType.Distribution,\n        ],\n        params: false,\n      });\n      return data.sequences;\n    },\n  );\n  return { fetchProjectParams: fetchData, projectParamsState: state, destroy };\n}\n\nexport default projectStatisticsEngine();\n","import * as React from 'react';\n\nimport routes from 'routes/routes';\n\nimport { SequenceType } from 'types/core/enums';\n\nimport { encode } from 'utils/encoder/encoder';\n\nimport projectContributionsEngine from '../ProjectContributions/ProjectContributionsStore';\n\nimport { IProjectStatistic } from './ProjectStatistics.d';\nimport projectStatisticsEngine from './ProjectStatisticsStore';\n\nconst statisticsInitialMap: Record<string, IProjectStatistic> = {\n  [SequenceType.Metric]: {\n    label: 'Metrics',\n    count: 0,\n    icon: 'metrics',\n    iconBgColor: '#7A4CE0',\n    navLink: routes.METRICS_EXPLORER.path,\n  },\n  // systemMetrics: {\n  //   label: 'Sys. metrics',\n  //   count: 0,\n  //   icon: 'metrics',\n  //   iconBgColor: '#AF4EAB',\n  //   navLink: `${routes.METRICS.path}?select=${encode({\n  //     advancedQuery: \"metric.name.startswith('__system__') == True\",\n  //     advancedMode: true,\n  //   })}`,\n  // },\n  [SequenceType.Figure]: {\n    label: 'Figures',\n    icon: 'figures',\n    count: 0,\n    iconBgColor: '#18AB6D',\n    navLink: routes.FIGURES_EXPLORER.path,\n  },\n  [SequenceType.Image]: {\n    label: 'Images',\n    icon: 'images',\n    count: 0,\n    iconBgColor: '#F17922',\n    navLink: routes.IMAGES_EXPLORER.path,\n  },\n  [SequenceType.Audio]: {\n    label: 'Audios',\n    icon: 'audios',\n    count: 0,\n    iconBgColor: '#FCB500',\n    navLink: routes.AUDIOS_EXPLORER.path,\n    badge: {\n      value: 'New',\n      style: { backgroundColor: '#1473e6', color: '#fff' },\n    },\n  },\n  [SequenceType.Text]: {\n    label: 'Texts',\n    icon: 'text',\n    count: 0,\n    iconBgColor: '#E149A0',\n    navLink: routes.TEXT_EXPLORER.path,\n    badge: {\n      value: 'New',\n      style: { backgroundColor: '#1473e6', color: '#fff' },\n    },\n  },\n  [SequenceType.Distribution]: {\n    label: 'Distributions',\n    icon: 'distributions',\n    count: 0,\n    iconBgColor: '#0394B4',\n    navLink: '',\n    badge: {\n      value: 'Explorer coming soon',\n    },\n  },\n};\n\nconst runsCountingInitialMap: Record<'archived' | 'runs', IProjectStatistic> = {\n  runs: {\n    label: 'runs',\n    icon: 'runs',\n    count: 0,\n    iconBgColor: '#1473E6',\n    // navLink: routes.RUNS.path,\n  },\n  archived: {\n    label: 'archived',\n    icon: 'archive',\n    count: 0,\n    iconBgColor: '#606986',\n    navLink: `/runs?select=${encode({ query: 'run.archived == True' })}`,\n  },\n};\n\nfunction useProjectStatistics() {\n  const [hoveredState, setHoveredState] = React.useState({\n    source: '',\n    id: '',\n  });\n  const { current: projectStatsEngine } = React.useRef(projectStatisticsEngine);\n  const projectParamsStore = projectStatsEngine.projectParamsState(\n    (state) => state,\n  );\n  const { current: contributionsEngine } = React.useRef(\n    projectContributionsEngine,\n  );\n  const projectContributionsStore =\n    contributionsEngine.projectContributionsState((state) => state);\n\n  React.useEffect(() => {\n    if (!projectParamsStore.data) {\n      projectStatsEngine.fetchProjectParams();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [projectStatsEngine]);\n\n  const { statisticsMap, totalTrackedSequencesCount } = React.useMemo(() => {\n    const statistics = { ...statisticsInitialMap };\n    let totalTrackedSequencesCount = 0;\n\n    for (let [seqName, seqData] of Object.entries(\n      projectParamsStore.data || {},\n    )) {\n      let systemMetricsCount = 0;\n      let sequenceItemsCount = 0;\n      for (let [itemKey, itemData] of Object.entries(seqData)) {\n        if (itemKey.startsWith('__system__')) {\n          // @ts-ignore\n          systemMetricsCount += itemData.length;\n        } else {\n          // @ts-ignore\n          sequenceItemsCount += itemData.length;\n        }\n      }\n      totalTrackedSequencesCount += sequenceItemsCount;\n      statistics[seqName].count = sequenceItemsCount;\n      if (systemMetricsCount) {\n        totalTrackedSequencesCount += systemMetricsCount;\n        statistics.systemMetrics.count = systemMetricsCount;\n      }\n    }\n    return { statisticsMap: statistics, totalTrackedSequencesCount };\n  }, [projectParamsStore]);\n\n  const { totalRunsCount, archivedRuns } = React.useMemo(\n    () => ({\n      totalRunsCount: projectContributionsStore.data?.num_runs || 0,\n      archivedRuns: projectContributionsStore.data?.num_archived_runs || 0,\n    }),\n    [projectContributionsStore],\n  );\n  const statisticsBarData = React.useMemo(\n    () =>\n      Object.values(statisticsMap).map(\n        ({ label, iconBgColor = '#000', count }) => ({\n          highlighted: hoveredState.id === label,\n          label,\n          color: iconBgColor,\n          percent:\n            totalTrackedSequencesCount === 0\n              ? 0\n              : (count / totalTrackedSequencesCount) * 100,\n        }),\n      ),\n    [statisticsMap, totalTrackedSequencesCount, hoveredState],\n  );\n\n  const runsCountingMap = React.useMemo(\n    () => ({\n      runs: {\n        ...runsCountingInitialMap.runs,\n        count: totalRunsCount - archivedRuns,\n      },\n      archived: {\n        ...runsCountingInitialMap.archived,\n        count: archivedRuns,\n      },\n    }),\n    [archivedRuns, totalRunsCount],\n  );\n  const onMouseOver = React.useCallback((id = '', source = '') => {\n    setHoveredState({ source, id });\n  }, []);\n  const onMouseLeave = React.useCallback(() => {\n    setHoveredState({ source: '', id: '' });\n  }, []);\n\n  return {\n    projectParamsStore,\n    projectContributionsStore,\n    statisticsBarData,\n    runsCountingMap,\n    totalRunsCount,\n    hoveredState,\n    statisticsMap,\n    onMouseOver,\n    onMouseLeave,\n  };\n}\n\nexport default useProjectStatistics;\n","import { NavLink } from 'react-router-dom';\n\nimport { Text } from 'components/kit_v2';\n\nimport { styled } from 'config/stitches';\n\nconst ExplorerCardContainer = styled(NavLink, {\n  width: '426px',\n  minWidth: '426px',\n  height: '118px',\n  borderRadius: 3,\n  p: '$13 $13 0',\n  textDecoration: 'none',\n  position: 'relative',\n  transition: 'all 0.18s ease-out',\n  '&:hover': {\n    '.card-title': {\n      textDecoration: 'underline',\n    },\n  },\n});\n\nconst ExplorerCardBadge = styled(Text, {\n  position: 'absolute',\n  top: '-$5',\n  right: '-$4',\n  textAlign: 'center',\n  whiteSpace: 'nowrap',\n  padding: '$1 $3',\n  br: '3px',\n  backgroundColor: 'white',\n  bs: 'inset 0 1px 2px 0 #00000029',\n  userSelect: 'none',\n});\n\nexport { ExplorerCardContainer, ExplorerCardBadge };\n","import React from 'react';\n\nimport { Icon } from 'components/kit';\nimport { Box, Text } from 'components/kit_v2';\nimport { IconName } from 'components/kit/Icon';\n\nimport { RouteStatusEnum } from 'routes/routes';\n\nimport hexToRgbA from 'utils/hexToRgbA';\n\nimport { ExplorerCardBadge, ExplorerCardContainer } from './ExplorerCard.style';\nimport { IExplorerCardProps } from './ExplorerCard.d';\n\n/**\n * @description ExplorerCard component\n * @returns {React.FunctionComponentElement<React.ReactNode>}\n */\nfunction ExplorerCard({\n  displayName,\n  icon,\n  count,\n  color,\n  description,\n  path,\n  status,\n  isLoading,\n}: IExplorerCardProps): React.FunctionComponentElement<React.ReactNode> {\n  return (\n    <ExplorerCardContainer\n      to={path}\n      css={{\n        backgroundColor: `${hexToRgbA(color!, 0.1)}`,\n        '&:hover': {\n          bs: `0 0 0 1px inset ${color}`,\n        },\n      }}\n    >\n      {status && (\n        <ExplorerCardBadge\n          css={\n            status === RouteStatusEnum.NEW\n              ? { backgroundColor: '$primary100', color: '#fff' }\n              : {}\n          }\n          weight='$3'\n          size='8px'\n        >\n          {status === RouteStatusEnum.COMING_SOON\n            ? 'Explorer coming soon'\n            : 'New'}\n        </ExplorerCardBadge>\n      )}\n      <Box display='flex' ai='center' mb='$5'>\n        {icon && (\n          <Box\n            display='flex'\n            ai='center'\n            jc='center'\n            css={{ size: '$7', br: '$pill', background: `${color}` }}\n          >\n            <Icon color='white' name={icon as IconName} />\n          </Box>\n        )}\n        <Text className='card-title' css={{ ml: '$5' }} size='$6' weight='$3'>\n          {displayName} {isLoading ? null : count ? `(${count})` : null}\n        </Text>\n      </Box>\n      <Text as='p'>{description || ''}</Text>\n    </ExplorerCardContainer>\n  );\n}\n\nexport default React.memo(ExplorerCard);\n","import ExplorerCard from './ExplorerCard';\n\nexport * from './ExplorerCard.d';\nexport default ExplorerCard;\n","import React from 'react';\n\nimport { Box, Text } from 'components/kit_v2';\nimport Breadcrumb from 'components/kit_v2/Breadcrumb';\n\nimport { PathEnum } from 'config/enums/routesEnum';\nimport { TopBar } from 'config/stitches/foundations/layout';\n\nimport { getItem } from 'utils/storage';\n\nimport {\n  ExplorerCardsWrapper,\n  ExplorersContentContainer,\n} from './Explorers.style';\nimport useExplorers from './useExplorers';\nimport ExplorerCard from './components/ExplorerCard';\n\n/**\n * Explorers page\n * @returns {React.FunctionComponentElement<React.ReactNode>}\n */\nfunction Explorers(): React.FunctionComponentElement<React.ReactNode> {\n  const { explorers, isLoading } = useExplorers();\n  function getPathFromStorage(route: PathEnum): PathEnum | string {\n    const path = getItem(`${route.split('/')[2]}Url`) ?? '';\n    if (path !== '' && path.startsWith(route)) {\n      return path;\n    }\n    return route;\n  }\n\n  return (\n    <Box display='flex' fd='column'>\n      <TopBar jc='space-between'>\n        <Breadcrumb />\n      </TopBar>\n      <ExplorersContentContainer>\n        <Box display='flex' fd='column'>\n          <Box>\n            <Text css={{ mb: '$5' }} weight='$3' as='h3' size='$6'>\n              Explore Executions of AI Systems\n            </Text>\n            <ExplorerCardsWrapper>\n              {Object.values(explorers.promptExplorers).map(\n                (item, index: number) => (\n                  <ExplorerCard\n                    {...item}\n                    isLoading={isLoading}\n                    path={getPathFromStorage(item.path as PathEnum) as PathEnum}\n                    key={index}\n                  />\n                ),\n              )}\n            </ExplorerCardsWrapper>\n          </Box>\n          <Box mt='$17'>\n            <Text css={{ mb: '$5' }} weight='$3' as='h3' size='$6'>\n              Explore Training Runs\n            </Text>\n            <ExplorerCardsWrapper>\n              {Object.values(explorers.trainingsExplorers).map(\n                (item, index: number) => (\n                  <ExplorerCard\n                    {...item}\n                    isLoading={isLoading}\n                    path={getPathFromStorage(item.path as PathEnum) as PathEnum}\n                    key={index}\n                  />\n                ),\n              )}\n            </ExplorerCardsWrapper>\n          </Box>\n        </Box>\n      </ExplorersContentContainer>\n    </Box>\n  );\n}\n\nexport default Explorers;\n","import React from 'react';\n\nimport { ExplorersCatsEnum } from 'config/enums/explorersCatsEnum';\nimport { ANALYTICS_EVENT_KEYS_MAP } from 'config/analytics/analyticsKeysMap';\n\nimport { useProjectStatistics } from 'pages/Dashboard/components/ProjectStatistics';\n\nimport { explorersRoutes } from 'routes/routes';\n\nimport * as analytics from 'services/analytics';\n\nimport { IExplorerCardProps } from './components/ExplorerCard';\n\nexport default function useExplorers() {\n  const { statisticsMap, projectParamsStore } = useProjectStatistics();\n\n  React.useEffect(() => {\n    analytics.pageView(ANALYTICS_EVENT_KEYS_MAP.explorers.pageView);\n  }, []);\n  const explorers = React.useMemo(() => {\n    const trainingsExplorersRoutes: { [key: string]: IExplorerCardProps } = {};\n    const promptsExplorersRoutes: { [key: string]: IExplorerCardProps } = {};\n    Object.keys(explorersRoutes).forEach((key) => {\n      const route = explorersRoutes[key];\n      const count =\n        Object.values(statisticsMap).find((item) => item.navLink === route.path)\n          ?.count || 0;\n      if (route.category === ExplorersCatsEnum.Trainings) {\n        trainingsExplorersRoutes[key] = {\n          ...route,\n          count,\n        };\n      }\n      if (route.category === ExplorersCatsEnum.Prompts) {\n        promptsExplorersRoutes[key] = {\n          ...route,\n          count,\n        };\n      }\n      // trainingsExplorersRoutes.METRICS_EXPLORER.count =\n      //   trainingsExplorersRoutes.METRICS.count;\n    });\n    return {\n      trainingsExplorers: trainingsExplorersRoutes,\n      promptExplorers: promptsExplorersRoutes,\n    };\n  }, [statisticsMap]);\n  return {\n    explorers,\n    isLoading: projectParamsStore.loading,\n  };\n}\n"],"names":["ExplorersContentContainer","styled","LayoutContainer","$$space","py","height","overflowY","overflow","display","fd","ExplorerCardsWrapper","Box","gap","ai","fw","mt","NavLink","textDecoration","hex","opacity","hexCode","substring","split","length","tmpHex","join","concat","StatisticsCard","_ref","label","_ref$badge","badge","value","count","icon","_ref$iconBgColor","iconBgColor","_ref$cardBgColor","cardBgColor","hexToRgbA","onMouseOver","onMouseLeave","navLink","highlighted","_ref$outlined","outlined","_ref$isLoading","isLoading","history","useHistory","onSafeMouseOver","React","id","styles","card","borderColor","backgroundColor","iconWrapper","iconColor","color","_jsxs","onClick","push","className","classNames","style","children","_jsx","Text","component","weight","size","Icon","name","displayName","StatisticsBar","_ref$data","data","_ref$width","width","_ref$height","barStyles","i","_styles","_data","item","prevItemLeftPos","left","prevItemPercent","percent","toFixed","Object","values","map","_ref2","_ref2$label","Tooltip","title","_objectSpread","ProjectStatistics","_useProjectStatistics","useProjectStatistics","projectParamsStore","projectContributionsStore","statisticsBarData","runsCountingMap","hoveredState","totalRunsCount","statisticsMap","tint","loading","source","defaultState","error","getter","state","create","_fetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","args","wrap","_context","prev","next","setState","sent","stop","apply","arguments","fetchData","_x","destroy","_createResource","createResource","getProjectContributions","fetchProjectContributions","projectContributionsState","getProjectsInfo","sequence","SequenceType","Metric","Image","Figure","Audio","Distribution","params","abrupt","sequences","fetchProjectParams","projectParamsState","statisticsInitialMap","_statisticsInitialMap","_defineProperty","routes","METRICS_EXPLORER","path","FIGURES_EXPLORER","IMAGES_EXPLORER","AUDIOS_EXPLORER","TEXT_EXPLORER","runsCountingInitialMap","runs","archived","encode","query","_React$useState","_React$useState2","_slicedToArray","setHoveredState","projectStatsEngine","projectStatisticsEngine","current","projectContributionsEngine","_React$useMemo","statistics","totalTrackedSequencesCount","_i","_Object$entries","entries","_Object$entries$_i","seqName","seqData","systemMetricsCount","sequenceItemsCount","_i2","_Object$entries2","_Object$entries2$_i","itemKey","itemData","startsWith","systemMetrics","_React$useMemo2","_projectContributions","_projectContributions2","num_runs","archivedRuns","num_archived_runs","undefined","ExplorerCardContainer","minWidth","borderRadius","p","position","transition","ExplorerCardBadge","top","right","textAlign","whiteSpace","padding","br","bs","userSelect","ExplorerCard","description","status","to","css","RouteStatusEnum","NEW","COMING_SOON","mb","jc","background","ml","as","_useExplorers","analytics","ANALYTICS_EVENT_KEYS_MAP","explorers","pageView","trainingsExplorersRoutes","promptsExplorersRoutes","keys","explorersRoutes","forEach","key","_Object$values$find","route","find","category","ExplorersCatsEnum","Trainings","Prompts","trainingsExplorers","promptExplorers","useExplorers","getPathFromStorage","_getItem","getItem","TopBar","Breadcrumb","index","_createElement"],"sourceRoot":""}