{"version":3,"file":"static/js/TextArea.f1369385.chunk.js","mappings":"uLA+BA,UAzBA,SAA4BA,GAC1B,IAAAC,EAAkCD,EAAME,QAAhCC,EAAKF,EAALE,MAAUC,GAAWC,EAAAA,EAAAA,GAAAJ,EAAAK,GACvBC,EAAWC,EAAAA,aAAkB,SAAAC,GAAiB,IAADC,EAAbC,EAAMF,EAANE,OACrB,QAAfD,EAAAV,EAAMY,iBAAS,IAAAF,GAAfA,EAAiBG,UAAUF,EAAOG,MAEpC,GAAG,IAEGC,EAAKP,EAAAA,QAAcQ,EAAAA,EAAY,IACrC,OACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CAAAC,SAAA,CACDhB,IACCiB,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CACHC,GAAG,QACHC,QAASR,EACTS,WAAY,IACZC,SAAUzB,EAAME,QAAQuB,SAASN,SAEhChB,KAGLiB,EAAAA,EAAAA,KAACM,EAAAA,IAAQC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKvB,GAAW,IAAEG,SAAUA,OAG3C,C","sources":["pages/Board/components/VisualizationElements/TextAreaVizElement.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { Box, Text, Textarea } from 'components/kit_v2';\n\nimport generateId from 'utils/generateId';\n\nfunction TextAreaVizElement(props: any) {\n  const { label, ...restOptions } = props.options;\n  const onChange = React.useCallback(({ target }) => {\n    props.callbacks?.on_change(target.value);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const id = React.useMemo(generateId, []);\n  return (\n    <Box>\n      {label && (\n        <Text\n          as='label'\n          htmlFor={id}\n          lineHeight={1.5}\n          disabled={props.options.disabled}\n        >\n          {label}\n        </Text>\n      )}\n      <Textarea {...restOptions} onChange={onChange} />\n    </Box>\n  );\n}\n\nexport default TextAreaVizElement;\n"],"names":["props","_props$options","options","label","restOptions","_objectWithoutProperties","_excluded","onChange","React","_ref","_props$callbacks","target","callbacks","on_change","value","id","generateId","_jsxs","Box","children","_jsx","Text","as","htmlFor","lineHeight","disabled","Textarea","_objectSpread"],"sourceRoot":""}