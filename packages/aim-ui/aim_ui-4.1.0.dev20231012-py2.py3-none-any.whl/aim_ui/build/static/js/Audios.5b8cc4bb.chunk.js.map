{"version":3,"file":"static/js/Audios.5b8cc4bb.chunk.js","mappings":"wLA0CA,ICvCA,EDIA,SAAkBA,GAChB,IAAAC,GAWIC,EAAAA,EAAAA,IAAgBF,GAVlBG,EAAQF,EAARE,SACAC,EAAIH,EAAJG,KACAC,EAAYJ,EAAZI,aACAC,EAAaL,EAAbK,cACAC,EAAMN,EAANM,OACAC,EAAUP,EAAVO,WACAC,EAAUR,EAAVQ,WACAC,EAAST,EAATS,UACAC,EAAWV,EAAXU,YACAC,EAAOX,EAAPW,QAGF,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAa,CAAAC,UACZF,EAAAA,EAAAA,KAAA,OAAKG,MAAOhB,EAAMgB,MAAMD,UACtBF,EAAAA,EAAAA,KAACI,EAAAA,GAAW,CACVd,SAAUA,EACVe,IAAKd,EAAKc,IACVC,QAAS,kBAAMd,GAAa,EAAM,EAClCe,UAAW,kBAAMd,GAAc,EAAM,EACrCC,OAAQA,EACRc,QAAS,kBAAMhB,GAAa,EAAM,EAClCG,WAAYA,EACZC,WAAYA,EACZC,UAAWA,EACXC,YAAaA,EACbC,QAASA,OAKnB,C,8HEAA,MAlCA,SAAoBZ,GAClB,IAAMI,EAAOJ,EAAMI,KAAKkB,KAAI,SAACC,GAAU,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAClCD,GACAA,EAAMnB,MACNmB,EAAME,QACNF,EAAMG,OAAM,IAOjB,OACEb,EAAAA,EAAAA,KAAA,OAAKc,UAAU,aAAaX,MAAO,CAAEY,OAAQ,OAAQC,SAAU,QAASd,SACrEX,EAAKkB,KAAI,SAACQ,GAAS,OAClBjB,EAAAA,EAAAA,KAACkB,EAAAA,EAAQ,CAEPC,SAAUF,EAAKG,MAAM7B,KACrB8B,OAAQJ,EAAKI,OACbtB,QAASkB,EAAKlB,QACduB,KAAML,EAAKK,KACXC,QAASN,EAAKM,QACdC,KAAMP,EAAKO,KACXC,MAAOR,EAAKQ,MACZC,OAAQ,CACNC,OAAQC,EAAAA,EAAcD,OACtBE,QAASD,EAAAA,EAAcC,UAlBlB,SAACZ,GAAS,IAAAa,EAAA,SAAAC,OAChB,OAAJd,QAAI,IAAJA,GAAe,QAAXa,EAAJb,EAAMe,iBAAS,IAAAF,OAAX,EAAJA,EAAiBG,KAAI,KAAAF,OAAId,EAAKK,KAAI,KAAAS,OAAIG,KAAKC,UAAUlB,EAAKM,SAAQ,KAAAQ,OACnEd,EAAKO,KAAI,KAAAO,OACPd,EAAKQ,MAAK,CAKHW,CAAOnB,GAYZ,KAIV,ECjCA,MAHA,SAA0B9B,GACxB,OAAOa,EAAAA,EAAAA,KAACqC,EAAU,CAAC9C,KAAMJ,EAAMI,MACjC,C","sources":["components/AudioBox/AudioBox.tsx","components/AudioBox/index.ts","pages/Board/components/AudiosList.tsx","pages/Board/components/VisualizationElements/AudiosVizElement.tsx"],"sourcesContent":["import React from 'react';\nimport { useAudioBlobURI } from 'hooks';\n\nimport ErrorBoundary from 'components/ErrorBoundary';\nimport { AudioPlayer } from 'components/kit_v2';\n\nimport { AudioBoxProps } from './';\nfunction AudioBox(props: AudioBoxProps) {\n  const {\n    audioRef,\n    data,\n    setIsPlaying,\n    setProcessing,\n    onPlay,\n    onDownload,\n    processing,\n    isPlaying,\n    readyToPlay,\n    caption,\n  } = useAudioBlobURI(props);\n\n  return (\n    <ErrorBoundary>\n      <div style={props.style}>\n        <AudioPlayer\n          audioRef={audioRef}\n          src={data.src}\n          onEnded={() => setIsPlaying(false)}\n          onCanPlay={() => setProcessing(false)}\n          onPlay={onPlay}\n          onPause={() => setIsPlaying(false)}\n          onDownload={onDownload}\n          processing={processing}\n          isPlaying={isPlaying}\n          readyToPlay={readyToPlay}\n          caption={caption}\n        />\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nexport default AudioBox;\n","import AudioBox from './AudioBox';\n\nexport * from './AudioBox.d';\nexport default AudioBox;\n","import * as React from 'react';\n\nimport AudioBox from 'components/AudioBox';\n\nimport pyodideEngine from 'services/pyodide/store';\n\nfunction AudiosList(props: any) {\n  const data = props.data.map((audio: any) => ({\n    ...audio,\n    ...audio.data,\n    ...audio.audios,\n    ...audio.record,\n  }));\n\n  const boxKey = (item: any) =>\n    `${item?.container?.hash}_${item.name}_${JSON.stringify(item.context)}_${\n      item.step\n    }_${item.index}`;\n  return (\n    <div className='AudiosList' style={{ height: '100%', overflow: 'auto' }}>\n      {data.map((item: any) => (\n        <AudioBox\n          key={boxKey(item)}\n          blobData={item.blobs.data}\n          format={item.format}\n          caption={item.caption}\n          name={item.name}\n          context={item.context}\n          step={item.step}\n          index={item.index}\n          engine={{\n            events: pyodideEngine.events,\n            blobURI: pyodideEngine.blobURI,\n          }}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default AudiosList;\n","import AudiosList from '../AudiosList';\n\nfunction AudiosVizElement(props: any) {\n  return <AudiosList data={props.data} />;\n}\nexport default AudiosVizElement;\n"],"names":["props","_useAudioBlobURI","useAudioBlobURI","audioRef","data","setIsPlaying","setProcessing","onPlay","onDownload","processing","isPlaying","readyToPlay","caption","_jsx","ErrorBoundary","children","style","AudioPlayer","src","onEnded","onCanPlay","onPause","map","audio","_objectSpread","audios","record","className","height","overflow","item","AudioBox","blobData","blobs","format","name","context","step","index","engine","events","pyodideEngine","blobURI","_item$container","concat","container","hash","JSON","stringify","boxKey","AudiosList"],"sourceRoot":""}