{"version":3,"file":"static/js/Checkbox.7aeee8d5.chunk.js","mappings":"2KAMA,SAASA,EACPC,GAEA,IAAAC,EAA8BC,EAAAA,SAAeF,EAAMG,QAAQC,OAAMC,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAA1DM,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAE1BH,EAAAA,WAAgB,WACVF,EAAMG,QAAQC,QAAUG,GAC1BC,EAAWR,EAAMG,QAAQC,MAG7B,GAAG,CAACJ,EAAMG,QAAQC,QAElB,IAAMK,EAAWP,EAAAA,aAAkB,SAACK,GAAa,IAADG,EAC9CF,EAAWD,GACI,QAAfG,EAAAV,EAAMW,iBAAS,IAAAD,GAAfA,EAAiBE,UAAUL,EAE7B,GAAG,IAEGM,EAAKX,EAAAA,QAAcY,EAAAA,EAAY,IACrC,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CAAAC,UACFF,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CAACE,QAAQ,OAAOC,GAAG,SAAQF,UAC7BF,EAAAA,EAAAA,KAACK,EAAAA,IAAQC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACHrB,EAAMG,SAAO,IACjBU,GAAIA,EACJN,QAASA,EACTe,gBAAiBb,QAK3B,CAEAV,EAAmBwB,YAAc,qBACjC,W","sources":["pages/Board/components/VisualizationElements/CheckboxVizElement.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { Box, Checkbox } from 'components/kit_v2';\n\nimport generateId from 'utils/generateId';\n\nfunction CheckboxVizElement(\n  props: any,\n): React.FunctionComponentElement<React.ReactNode> {\n  const [checked, setChecked] = React.useState(props.options.value);\n\n  React.useEffect(() => {\n    if (props.options.value !== checked) {\n      setChecked(props.options.value);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.options.value]);\n\n  const onChange = React.useCallback((checked) => {\n    setChecked(checked);\n    props.callbacks?.on_change(checked);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const id = React.useMemo(generateId, []);\n  return (\n    <Box>\n      <Box display='flex' ai='center'>\n        <Checkbox\n          {...props.options}\n          id={id}\n          checked={checked}\n          onCheckedChange={onChange}\n        />\n      </Box>\n    </Box>\n  );\n}\n\nCheckboxVizElement.displayName = 'CheckboxVizElement';\nexport default CheckboxVizElement;\n"],"names":["CheckboxVizElement","props","_React$useState","React","options","value","_React$useState2","_slicedToArray","checked","setChecked","onChange","_props$callbacks","callbacks","on_change","id","generateId","_jsx","Box","children","display","ai","Checkbox","_objectSpread","onCheckedChange","displayName"],"sourceRoot":""}