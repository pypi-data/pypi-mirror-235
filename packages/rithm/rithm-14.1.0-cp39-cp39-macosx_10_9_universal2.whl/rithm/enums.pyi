from __future__ import annotations

import typing_extensions as _te


class Endianness:
    BIG: Endianness = ...
    LITTLE: Endianness = ...

    @property
    def value(self) -> int:
        ...

    def __new__(cls, value: int, /) -> _te.Self:
        ...

    def __repr__(self) -> str:
        ...


class TieBreaking:
    AWAY_FROM_ZERO: TieBreaking = ...
    TO_EVEN: TieBreaking = ...
    TO_ODD: TieBreaking = ...
    TOWARD_ZERO: TieBreaking = ...

    @property
    def value(self) -> int:
        ...

    def __new__(cls, value: int, /) -> _te.Self:
        ...

    def __repr__(self) -> str:
        ...
