Metadata-Version: 2.1
Name: python-huffman
Version: 0.1.3
Summary: huffman encode and decode
Home-page: https://github.com/synodriver/pyhuffman
Author: synodriver
Author-email: diguohuangjiajinweijun@gmail.com
License: GPLv3
Keywords: huffman,encode,decode
Classifier: Development Status :: 5 - Production/Stable
Classifier: Operating System :: OS Independent
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Topic :: Security :: Cryptography
Classifier: Programming Language :: C
Classifier: Programming Language :: Cython
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Requires-Dist: cffi >=1.0.0

<h1 align="center"><i>✨ pyhuffman ✨ </i></h1>

<h3 align="center">The python binding for <a href="https://github.com/synodriver/huffman">huffman</a> </h3>



[![pypi](https://img.shields.io/pypi/v/python-huffman.svg)](https://pypi.org/project/python-huffman/)
![python](https://img.shields.io/pypi/pyversions/python-huffman)
![implementation](https://img.shields.io/pypi/implementation/python-huffman)
![wheel](https://img.shields.io/pypi/wheel/python-huffman)
![license](https://img.shields.io/github/license/synodriver/pyhuffman.svg)
![action](https://img.shields.io/github/workflow/status/synodriver/pyhuffman/build%20wheel)

### 公开函数
```python
from typing import IO, Union
from pathlib import Path

InputType = Union[str, bytes, Path, IO]

def encode_file(in_: InputType, out_: InputType) -> int: ...
def decode_file(in_: InputType, out_: InputType) -> int: ...
def encode(data: bytes) -> bytes: ...
def decode(data: bytes) -> bytes: ...
```

### 环境变量
```HFM_USE_CFFI```强制使用cffi后端
