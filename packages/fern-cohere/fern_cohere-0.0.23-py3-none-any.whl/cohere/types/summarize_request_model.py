# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class SummarizeRequestModel(str, enum.Enum):
    """
    The identifier of the model to generate the summary with. Currently available models are `command` (default), `command-nightly` (experimental), `command-light`, and `command-light-nightly` (experimental). Smaller, "light" models are faster, while larger models will perform better.
    """

    COMMAND = "command"
    COMMAND_LIGHT = "command-light"

    def visit(self, command: typing.Callable[[], T_Result], command_light: typing.Callable[[], T_Result]) -> T_Result:
        if self is SummarizeRequestModel.COMMAND:
            return command()
        if self is SummarizeRequestModel.COMMAND_LIGHT:
            return command_light()
