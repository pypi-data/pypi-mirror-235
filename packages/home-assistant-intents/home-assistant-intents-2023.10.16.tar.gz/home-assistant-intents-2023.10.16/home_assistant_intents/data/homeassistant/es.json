{
  "language": "es",
  "intents": {
    "HassTurnOff": {
      "data": [
        {
          "sentences": [
            "<apaga> [todos] [el|los] (ventilador[es]|abanico[s]) <area>"
          ],
          "slots": {
            "domain": "fan",
            "name": "all"
          },
          "response": "fans_area"
        },
        {
          "sentences": [
            "<apaga> todos los (ventiladores|abanicos)"
          ],
          "response": "light_all",
          "slots": {
            "domain": "fan",
            "area": "all",
            "name": "all"
          }
        },
        {
          "sentences": [
            "<apaga> <name>"
          ],
          "excludes_context": {
            "domain": [
              "binary_sensor",
              "cover",
              "lock",
              "scene",
              "script",
              "sensor"
            ]
          }
        },
        {
          "sentences": [
            "<apaga> [[el|la|los|las] (luz|luces|(interruptor[es]|llave[s] de [la luz]))] [de|del] <name>"
          ],
          "requires_context": {
            "domain": "light"
          }
        },
        {
          "sentences": [
            "<apaga> [(la|las)] (luz | luces) <area>",
            "<apaga> todas las luces <area>"
          ],
          "slots": {
            "domain": "light",
            "name": "all"
          },
          "response": "lights_area"
        },
        {
          "sentences": [
            "<apaga> todas las luces"
          ],
          "response": "light_all",
          "slots": {
            "domain": "light",
            "area": "all",
            "name": "all"
          }
        },
        {
          "sentences": [
            "<cierra> <name> [<area>]"
          ],
          "requires_context": {
            "domain": "cover"
          },
          "response": "cover"
        },
        {
          "sentences": [
            "<cierra> <puerta> [(del|de|de la)] (garaje|cochera)"
          ],
          "slots": {
            "device_class": "garage",
            "domain": "cover"
          },
          "response": "cover_device_class"
        },
        {
          "sentences": [
            "<cierra> [ el | la | los | las ] {cover_classes:device_class} [<area>]"
          ],
          "slots": {
            "domain": "cover"
          },
          "response": "cover_device_class"
        },
        {
          "sentences": [
            "abrir [(cerradura|cerrojo|candado|llave|cierre|puerta) [de]] <name>[ <area>]",
            "quitar (cerradura|cerrojo|candado|llave|cierre) [de] <name>[ <area>]"
          ],
          "requires_context": {
            "domain": "lock"
          },
          "response": "lock"
        },
        {
          "sentences": [
            "abrir [todas|todos] [los|las] (cierres|cerraduras|cerrojos|candados|llaves|puertas) [de puerta[s]] <area>",
            "quitar [todas|todos] [los|las] (cierres|cerraduras|cerrojos|candados|llaves) [de puerta[s]] <area>"
          ],
          "slots": {
            "domain": "lock",
            "name": "all"
          },
          "response": "lock"
        }
      ]
    },
    "HassTurnOn": {
      "data": [
        {
          "sentences": [
            "<enciende> [escena|escenario] <name>"
          ],
          "requires_context": {
            "domain": "scene"
          },
          "slots": {
            "domain": "scene"
          },
          "response": "scene"
        },
        {
          "sentences": [
            "<enciende> [[(el|la|los|las)] (luz|luces|(interruptor[es]|llave[s] de [la luz]))] [de|del] <name>"
          ],
          "requires_context": {
            "domain": "light"
          }
        },
        {
          "sentences": [
            "<enciende> ([la] luz | [las] luces) <area>",
            "<enciende> todas las luces <area>"
          ],
          "slots": {
            "domain": "light"
          },
          "response": "lights_area"
        },
        {
          "sentences": [
            "<abre> <name> [<area>]"
          ],
          "requires_context": {
            "domain": "cover"
          },
          "response": "cover"
        },
        {
          "sentences": [
            "<abre> <puerta> [(del|de|de la)] (garaje|cochera)"
          ],
          "slots": {
            "domain": "cover",
            "device_class": "garage"
          },
          "response": "cover_device_class"
        },
        {
          "sentences": [
            "<abre> [el | la | los | las] {cover_classes:device_class} <area>"
          ],
          "slots": {
            "domain": "cover"
          },
          "response": "cover_device_class"
        },
        {
          "sentences": [
            "<enciende> [todos] [los|el] (ventilador[es]|abanico[s]) <area>"
          ],
          "slots": {
            "domain": "fan",
            "name": "all"
          },
          "response": "fans_area"
        },
        {
          "sentences": [
            "cerrar con (llave|cerrojo|pestillo|cerradura|candado|cierre) <name> [ <area>]",
            "echar (la llave|el cerrojo|el pestillo|la cerradura|el candado|el cierre) en <name> [ <area>]"
          ],
          "requires_context": {
            "domain": "lock"
          },
          "response": "lock"
        },
        {
          "sentences": [
            "cerrar con (llave|cerrojo|pestillo|cerradura|candado|cierre) [tod(o|a)s] [los|las] [cerraduras|cerrojos|pestillos|puertas] <area>",
            "echar (la llave|el cerrojo|el pestillo|la cerradura|el candado|el cierre ) en [tod(o|a)s] [los|las] [cerraduras|cerrojos|pestillos|puertas] <area>",
            "echar [tod(o|a)s] [los|las] (llaves|cerrojos|pestillos|cerraduras|candados|cierres) <area>"
          ],
          "slots": {
            "domain": "lock",
            "name": "all"
          },
          "response": "lock"
        },
        {
          "sentences": [
            "<ejecuta> [script] <name>"
          ],
          "requires_context": {
            "domain": "script"
          },
          "slots": {
            "domain": "script"
          },
          "response": "script"
        },
        {
          "sentences": [
            "<enciende> <name>"
          ],
          "excludes_context": {
            "domain": [
              "binary_sensor",
              "cover",
              "lock",
              "scene",
              "script",
              "sensor"
            ]
          }
        }
      ]
    },
    "HassGetState": {
      "data": [
        {
          "sentences": [
            "está[n] [la[s] batería[s] [de[l | la | los | las ]]] <name> {bs_battery_states:state}[ <area>]",
            "está[n] {bs_battery_states:state} [la[s] batería[s] [de[l | la | los | las ]]] <name>[ <area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "battery"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "battery"
          }
        },
        {
          "sentences": [
            "(está[n]|existe[n]|hay) alguna[s] batería[s] {bs_battery_states:state}[ <area>]",
            "(está[n]|existe[n]|hay) {bs_battery_states:state} alguna[s] batería[s][ <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "battery"
          }
        },
        {
          "sentences": [
            "están todas las baterías {bs_battery_states:state}[ <area>]",
            "están {bs_battery_states:state} todas las baterías[ <area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "battery"
          }
        },
        {
          "sentences": [
            "(qué|cual[es]) batería[s] (está[n]|hay) {bs_battery_states:state}[ <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "battery"
          }
        },
        {
          "sentences": [
            "cuántas baterías (están|hay|existen) {bs_battery_states:state}[ <area>]",
            "cuántas baterías {bs_battery_states:state} hay[ <area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "battery"
          }
        },
        {
          "sentences": [
            "está[n] [la[s] batería[s]] <name> {bs_battery_charging_states:state}[ <area>]",
            "está[n] {bs_battery_charging_states:state} [la[s] batería[s]] <name>[ <area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "battery_charging"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "battery_charging"
          }
        },
        {
          "sentences": [
            "(está[n]|hay|existe[n]) alguna[s] batería[s] {bs_battery_charging_states:state}[ <area>]",
            "[se ](está[n]|hay) {bs_battery_charging_states:state} alguna[s] batería[s][ <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "battery_charging"
          }
        },
        {
          "sentences": [
            "están todas las baterías {bs_battery_charging_states:state}[ <area>]",
            "[se ]están {bs_battery_charging_states:state} todas las baterías[ <area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "battery_charging"
          }
        },
        {
          "sentences": [
            "(qué|cual[es]) batería[s] [se ](está[n]|hay) {bs_battery_charging_states:state}[ <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "battery_charging"
          }
        },
        {
          "sentences": [
            "cuántas baterías [se ](están|hay) {bs_battery_charging_states:state}[ <area>]",
            "cuántas baterías {bs_battery_charging_states:state} hay[ <area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "battery_charging"
          }
        },
        {
          "sentences": [
            "está[n] <name> {bs_carbon_monoxide_states:state}[ <area>]",
            "está[n] {bs_carbon_monoxide_states:state} <name>[ <area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "carbon_monoxide"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "carbon_monoxide"
          }
        },
        {
          "sentences": [
            "(está[n]|existe[n]|hay) [algún|algunos] sensor[es] de monóxido[ de carbono] {bs_carbon_monoxide_states:state}[ <area>]",
            "(está[n]|existe[n]|hay) {bs_carbon_monoxide_states:state} [algún|algunos] sensor[es] de monóxido[ de carbono][ <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "carbon_monoxide"
          }
        },
        {
          "sentences": [
            "(hay|se detecta) [algo de] monóxido de carbono <area>"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "carbon_monoxide",
            "state": "on"
          }
        },
        {
          "sentences": [
            "están todos los sensores de monóxido[ de carbono] {bs_carbon_monoxide_states:state}[ <area>]",
            "están todos los sensores de monóxido[ de carbono][ <area>] {bs_carbon_monoxide_states:state}",
            "están {bs_carbon_monoxide_states:state} todos los sensores de monóxido[ de carbono][ <area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "carbon_monoxide"
          }
        },
        {
          "sentences": [
            "(qué|cual[es]) sensor[es] de monóxido[ de carbono] (hay|está[n]) {bs_carbon_monoxide_states:state}[ <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "carbon_monoxide"
          }
        },
        {
          "sentences": [
            "(qué|cual[es]) sensor[es] detecta[n] monóxido[ de carbono][ <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "carbon_monoxide",
            "state": "on"
          }
        },
        {
          "sentences": [
            "cuántos sensores de monóxido de carbono (hay|están) {bs_carbon_monoxide_states:state}[ <area>]",
            "cuántos sensores de monóxido de carbono {bs_carbon_monoxide_states:state} (hay|están)[ <area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "carbon_monoxide"
          }
        },
        {
          "sentences": [
            "está[n] <name> {bs_cold_states:state}[ <area>]",
            "está[n] {bs_cold_states:state} <name>[ <area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "cold"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "cold"
          }
        },
        {
          "sentences": [
            "se detecta frío[ <area>]",
            "(está|hay) (algo|algún sensor) frío[ <area>]",
            "(está|hay) frío (algo|algún sensor)[ <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "cold",
            "state": "on"
          }
        },
        {
          "sentences": [
            "(qué|cual[es]) [sensor[es]] (hay|está[n]) frío[s][ <area>]",
            "(qué|cual[es]) [sensor[es]] detecta[n] frío[ <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "cold",
            "state": "on"
          }
        },
        {
          "sentences": [
            "cuánt(a|o)s (sensores|cosas) (están|detectan|hay) frí(a|o)s[ <area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "cold",
            "state": "on"
          }
        },
        {
          "sentences": [
            "está[n] <name> {bs_connectivity_states:state}[ <area>]",
            "está[n] {bs_connectivity_states:state} <name>[ <area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "connectivity"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "connectivity"
          }
        },
        {
          "sentences": [
            "(está[n]|hay) ([algún[os] ]dispositivo[s]|algo) {bs_connectivity_states:state}[ <area>]",
            "(está[n]|hay) {bs_connectivity_states:state} ([algún[os] ]dispositivo[s]|algo)[ <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "connectivity"
          }
        },
        {
          "sentences": [
            "está[n] todo[s los dispositivos] {bs_connectivity_states:state}[ <area>]",
            "está[n] {bs_connectivity_states:state} todo[s los dispositivos][ <area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "connectivity"
          }
        },
        {
          "sentences": [
            "(qué|cual[es]) [dispositivo[s]] (está[n]|hay) {bs_connectivity_states:state}[ <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "connectivity"
          }
        },
        {
          "sentences": [
            "cuántos dispositivos (está[n]|hay) {bs_connectivity_states:state}[ <area>]",
            "cuántos dispositivos {bs_connectivity_states:state} (existe[n]|hay)[ <area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "connectivity"
          }
        },
        {
          "sentences": [
            "está <name> {bs_door_states:state}[ <area>]",
            "está {bs_door_states:state} <name>[ <area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "door"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "door"
          }
        },
        {
          "sentences": [
            "está <name> {bs_garage_door_states:state}[ <area>]",
            "está {bs_garage_door_states:state} <name>[ <area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "garage_door"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "garage_door"
          }
        },
        {
          "sentences": [
            "está [el sensor] <name> {bs_gas_states:state}[ <area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "gas"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "gas"
          }
        },
        {
          "sentences": [
            "(está|existe[n]|hay) [algún[os] ](sensor|detector)[es] de gas {bs_carbon_monoxide_states:state}[ <area>]",
            "(está|existe[n]|hay) {bs_carbon_monoxide_states:state} [algún[os] ](sensor|detector)[es] de gas[ <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "gas"
          }
        },
        {
          "sentences": [
            "(hay|se detecta) gas <area>"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "gas",
            "state": "on"
          }
        },
        {
          "sentences": [
            "están todos los (sensores|detectores) de gas {bs_gas_states:state}[ <area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "gas"
          }
        },
        {
          "sentences": [
            "(qué|cual[es]) (sensor|detector)[es] de gas (hay|está[n]) {bs_gas_states:state}[ <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "gas"
          }
        },
        {
          "sentences": [
            "cuántos sensores de gas (hay|está[n]|existe[n]) {bs_gas_states:state}[ <area>]",
            "cuántos sensores de gas {bs_gas_states:state} (hay|está[n]|existe[n])[ <area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "gas"
          }
        },
        {
          "sentences": [
            "(qué|cual[es]) sensor[es] detecta[n] gas[ <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "gas",
            "state": "on"
          }
        },
        {
          "sentences": [
            "está[n] <name> {bs_heat_states:state}[ <area>]",
            "está[n] {bs_heat_states:state} <name>[ <area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "heat"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "heat"
          }
        },
        {
          "sentences": [
            "se detecta calor[ <area>]",
            "(está|hay) (algo|algún sensor) caliente[ <area>]",
            "(está|hay) caliente (algo|algún sensor)[ <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "heat",
            "state": "on"
          }
        },
        {
          "sentences": [
            "(qué|cual[es]) [sensor[es] ](hay|está[n]) caliente[s][ <area>]",
            "(qué|cual[es]) sensor[es] detecta[n] calor[ <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "heat",
            "state": "on"
          }
        },
        {
          "sentences": [
            "cuánt(a|o)s (sensores|cosas) (hay|están) calientes[ <area>]",
            "cuántos sensores detectan calor[ <area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "heat",
            "state": "on"
          }
        },
        {
          "sentences": [
            "está[n] <name> {bs_light_states:state}[ <area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "light"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "light"
          }
        },
        {
          "sentences": [
            "(está[n]|hay) alg(ún|una)[s] sensor de (luz|luces) {bs_light_states:state}[ <area>]",
            "(está[n]|hay) {bs_light_states:state} alg(ún|una)[s] sensor de (luz|luces)[ <area>]",
            "(está[n]|hay) alg(ún|una)[s] sensor de (luz|luces) <area> {bs_light_states:state}"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "light"
          }
        },
        {
          "sentences": [
            "(hay|se detecta) luz[ <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "light",
            "state": "on"
          }
        },
        {
          "sentences": [
            "están todos los sensores de luz {bs_light_states:state}[ <area>]",
            "están {bs_light_states:state} todos los sensores de luz[ <area>]",
            "están todos los sensores de luz <area> {bs_light_states:state}"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "light"
          }
        },
        {
          "sentences": [
            "(qué|cual[es]) sensores de luz (está[n]|hay) {bs_light_states:state}[ <area>]",
            "(qué|cual[es]) sensores de luz (está[n]|hay) <area> {bs_light_states:state}",
            "(qué|cual[es]) sensores de luz <area> (está[n]|hay) {bs_light_states:state}",
            "(qué|cual[es]) sensores de luz {bs_light_states:state} (está[n]|hay)[ <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "light"
          }
        },
        {
          "sentences": [
            "cuántos sensores de luz (están|hay) {bs_light_states:state}[ <area>]",
            "cuántos sensores de luz {bs_light_states:state} (están|hay)[ <area>]",
            "cuántos sensores de luz (están|hay) <area> {bs_light_states:state}",
            "cuántos sensores de luz [ <area>](están|hay) {bs_light_states:state}",
            "[<area> ]cuántos sensores de luz (están|hay) {bs_light_states:state}",
            "[<area> ]cuántos sensores de luz {bs_light_states:state} (están|hay)"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "light"
          }
        },
        {
          "sentences": [
            "está[n] <name> {bs_lock_states:state}[ <area>]",
            "está[n] {bs_lock_states:state} <name>[ <area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "lock"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "lock"
          }
        },
        {
          "sentences": [
            "está <name> {bs_moisture_states:state}[ <area>]",
            "está {bs_moisture_states:state} <name>[ <area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "moisture"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "moisture"
          }
        },
        {
          "sentences": [
            "(hay|está[n]) algún[os] sensor[es] de ([fuga de ]agua|humedad|inundación) {bs_moisture_states:state}[ <area>]",
            "está el (suelo|sensor de (humedad|inundación|agua)) {bs_moisture_states:state}[ <area>]",
            "(hay|está[n]) {bs_moisture_states:state} algún[os] sensor[es] de ([fuga de ]agua|humedad|inundación)[ <area>]",
            "está {bs_moisture_states:state} el (suelo|sensor de (humedad|inundación|agua))[ <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "moisture"
          }
        },
        {
          "sentences": [
            "se detecta [alguna] (inundación|fuga [de agua])[ <area>]",
            "hay [alguna] (inundación|fuga [de agua]) [detectada][ <area>]",
            "está <area> (mojad|inundad|humed)[o|a]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "moisture",
            "state": "on"
          }
        },
        {
          "sentences": [
            "están todos los sensores de ([fuga de ]agua|humedad|inundación) {bs_moisture_states:state}[ <area>]",
            "están {bs_moisture_states:state} todos los sensores de ([fuga de ]agua|humedad|inundación)[ <area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "moisture"
          }
        },
        {
          "sentences": [
            "(qué|cual[es]) sensores de ([fuga de ]agua|humedad|inundación) (hay|está[n]) {bs_moisture_states:state}[ <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "moisture"
          }
        },
        {
          "sentences": [
            "cuántos sensores de ([fuga de ]agua|humedad|inundación) (hay|está[n]) {bs_moisture_states:state}[ <area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "moisture"
          }
        },
        {
          "sentences": [
            "está[n] <name> {bs_motion_states:state}[ <area>]",
            "está[n] <name> <area> {bs_motion_states:state}",
            "está[n] {bs_motion_states:state} <name>[ <area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "motion"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "motion"
          }
        },
        {
          "sentences": [
            "(hay|está[n]) [algún[os]|los|el] sensor[es] de movimiento {bs_motion_states:state}[ <area>]",
            "(hay|está[n]) [algún[os]|los|el] sensor[es] de movimiento[ <area>] {bs_motion_states:state}",
            "(hay|está[n]) {bs_motion_states:state} [algún[os]|los|el] sensor[es] de movimiento[ <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "motion"
          }
        },
        {
          "sentences": [
            "se (ha detectado|detecta) [algún] movimiento[ <area>]",
            "hay [algún] movimiento[ <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "motion",
            "state": "on"
          }
        },
        {
          "sentences": [
            "están todos los sensores de movimiento {bs_motion_states:state}[ <area>]",
            "están {bs_motion_states:state} todos los sensores de movimiento[ <area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "motion"
          }
        },
        {
          "sentences": [
            "(qué|cual[es]) sensor[es] de movimiento (hay|está[n]) {bs_motion_states:state}[ <area>]",
            "(qué|cual[es]) sensor[es] de movimiento {bs_motion_states:state} (hay|está[n])[ <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "motion"
          }
        },
        {
          "sentences": [
            "cuántos sensores de movimiento (están|hay) {bs_motion_states:state}[ <area>]",
            "cuántos sensores de movimiento {bs_motion_states:state} (están|hay)[ <area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "motion"
          }
        },
        {
          "sentences": [
            "está[n] <name> {bs_occupancy_states:state}[ <area>]",
            "está[n] {bs_occupancy_states:state} <name>[ <area>]",
            "está[n] <name> <area> {bs_occupancy_states:state}"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "occupancy"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "occupancy"
          }
        },
        {
          "sentences": [
            "(está[n]|hay) algún[os] sensor[es] de (ocupación|presencia) {bs_occupancy_states:state}[ <area>]",
            "(está[n]|hay) {bs_occupancy_states:state} algún[os] sensor[es] de (ocupación|presencia)[ <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "occupancy"
          }
        },
        {
          "sentences": [
            "(hay|se detecta) [alguna] (presencia|ocupación)[ <area>]",
            "está <area> ocupad(o|a)"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "occupancy",
            "state": "on"
          }
        },
        {
          "sentences": [
            "están todos los sensores de (ocupación|presencia) {bs_occupancy_states:state}[ <area>]",
            "están {bs_occupancy_states:state} todos los sensores de (ocupación|presencia)[ <area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "occupancy"
          }
        },
        {
          "sentences": [
            "(qué|cual[es]) sensor[es] de (ocupación|presencia) (hay|está[n]) {bs_occupancy_states:state}[ <area>]",
            "(qué|cual[es]) sensor[es] de (ocupación|presencia) {bs_occupancy_states:state} (hay|está[n])[ <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "occupancy"
          }
        },
        {
          "sentences": [
            "cuántos sensores de (presencia|ocupación) (están|hay) {bs_occupancy_states:state}[ <area>]",
            "cuántos sensores de (presencia|ocupación) {bs_occupancy_states:state} (están|hay)[ <area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "occupancy"
          }
        },
        {
          "sentences": [
            "está <name> {bs_opening_states:state}[ <area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "opening"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "opening"
          }
        },
        {
          "sentences": [
            "(está[n]|hay) alguna (abertura|apertura) {bs_opening_states:state}[ <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "opening"
          }
        },
        {
          "sentences": [
            "están todas las (aberturas|aperturas) {bs_opening_states:state}[ <area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "opening"
          }
        },
        {
          "sentences": [
            "(qué|cual[es]) (aberturas|aperturas) (hay|está[n]) {bs_opening_states:state}[ <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "opening"
          }
        },
        {
          "sentences": [
            "cuántas (aberturas|aperturas) (hay|está[n]) {bs_opening_states:state}[ <area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "opening"
          }
        },
        {
          "sentences": [
            "(está[n]) <name> {bs_plug_states:state}[ <area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "plug"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "plug"
          }
        },
        {
          "sentences": [
            "(hay|está[n]) ([algún[os]] dispositivo[s]|algo) {bs_plug_states:state}[ <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "plug"
          }
        },
        {
          "sentences": [
            "está[n] todo[s los dispositivos] {bs_plug_states:state}[ <area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "plug"
          }
        },
        {
          "sentences": [
            "(qué|cual[es]) [dispositivo[s]] (hay|está[n]) {bs_plug_states:state}[ <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "plug"
          }
        },
        {
          "sentences": [
            "cuánt(a|o)s (dispositivos|cosas) (está[n]|hay) {bs_plug_states:state}[ <area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "plug"
          }
        },
        {
          "sentences": [
            "está[n] <name> {bs_power_states:state}[ <area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "power"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "power"
          }
        },
        {
          "sentences": [
            "(hay|está[n]) (algo|(algún|algunos) dispositivo[s]) {bs_power_states:state}[ <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "power"
          }
        },
        {
          "sentences": [
            "está[n] todo[s los dispositivos] {bs_power_states:state}[ <area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "power"
          }
        },
        {
          "sentences": [
            "(qué|cual[es]) [dispositivo[s]] (está[n]|hay) {bs_power_states:state}[ <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "power"
          }
        },
        {
          "sentences": [
            "cuánt(o|a)s (cosas|dispositivos) (están|hay) {bs_power_states:state}[ <area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "power"
          }
        },
        {
          "sentences": [
            "está[n] <name> {bs_presence_states:state}[ <area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "presence"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "presence"
          }
        },
        {
          "sentences": [
            "(está[n]|hay) (algo|(algún|algunos) dispositivo[s]) {bs_presence_states:state}[ <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "presence"
          }
        },
        {
          "sentences": [
            "están todo[s los dispositivos] {bs_presence_states:state}[ <area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "presence"
          }
        },
        {
          "sentences": [
            "(qué|cual[es]) (cosa[s]|dispositivo[s]) (está[n]|hay) {bs_presence_states:state}[ <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "presence"
          }
        },
        {
          "sentences": [
            "cuánt(o|a)s (cosas|dispositivos) (hay|está[n]) {bs_presence_states:state}[ <area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "presence"
          }
        },
        {
          "sentences": [
            "(hay|existe[n]|se ha detectado) [(algún|algunos)] problema[s] (en|con) <name>[ <area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "problem"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "problem",
            "state": "on"
          }
        },
        {
          "sentences": [
            "está[n] <name> {bs_running_states:state}[ <area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "running"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "running"
          }
        },
        {
          "sentences": [
            "(está[n]|hay) (algo|(algún|algunos) dispositivo[s]) {bs_running_states:state}[ <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "running"
          }
        },
        {
          "sentences": [
            "(está[n]|hay) todo[s los dispositivos] {bs_running_states:state}[ <area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "running"
          }
        },
        {
          "sentences": [
            "(qué|cual[es]) (cosa[s]|dispositivo[s]) (hay|está[n]) {bs_running_states:state}[ <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "running"
          }
        },
        {
          "sentences": [
            "cuánt(o|a)s (cosas|dispositivos) (hay|está[n]) {bs_running_states:state}[ <area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "running"
          }
        },
        {
          "sentences": [
            "está[n] <name> {bs_safety_states:state}[ <area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "safety"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "safety"
          }
        },
        {
          "sentences": [
            "está[n] <name> {bs_smoke_states:state}[ <area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "smoke"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "smoke"
          }
        },
        {
          "sentences": [
            "(hay|está[n]) [algún|algunos] (sensor|detector)[es] de humo[s] {bs_smoke_states:state}[ <area>]",
            "(hay|está[n]) {bs_smoke_states:state} [algún|algunos] (sensor|detector)[es] de humo[s][ <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "smoke"
          }
        },
        {
          "sentences": [
            "(hay|se detecta) humo <area>"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "smoke",
            "state": "on"
          }
        },
        {
          "sentences": [
            "están todos los (sensor|detector)es de humo[s] {bs_smoke_states:state}[ <area>]",
            "están {bs_smoke_states:state} todos los (sensor|detector)es de humo[s][ <area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "smoke"
          }
        },
        {
          "sentences": [
            "(qué|cual[es]) (detector|sensor)[es] de humo[s] (hay|está[n]) {bs_smoke_states:state}[ <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "smoke"
          }
        },
        {
          "sentences": [
            "cuántos (detector|sensor)es de humo (hay|están) {bs_smoke_states:state}[ <area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "smoke"
          }
        },
        {
          "sentences": [
            "está[n] <name> {bs_sound_states:state}[ <area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "sound"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "sound"
          }
        },
        {
          "sentences": [
            "(hay|está[n]) algún[os] sensor[es] de sonido {bs_sound_states:state}[ <area>]",
            "(hay|está[n]) {bs_sound_states:state} algún[os] sensor[es] de sonido[ <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "sound"
          }
        },
        {
          "sentences": [
            "(hay|se detecta) [algún] ruido <area>"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "sound",
            "state": "on"
          }
        },
        {
          "sentences": [
            "están todos los sensores de (sonido|ruido) {bs_sound_states:state}[ <area>]",
            "están{bs_sound_states:state} todos los sensores de (sonido|ruido)[ <area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "sound"
          }
        },
        {
          "sentences": [
            "(qué|cual[es]) sensor[es] de (ruido|sonido) (hay|está[n]) {bs_sound_states:state}[ <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "sound"
          }
        },
        {
          "sentences": [
            "cuántos sensores de (ruido|sonido) (hay|están) {bs_sound_states:state}[ <area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "sound"
          }
        },
        {
          "sentences": [
            "está[n] <name> {bs_tamper_states:state}[ <area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "tamper"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "tamper"
          }
        },
        {
          "sentences": [
            "(está[n]|es|son) <name> {bs_update_states:state}[ <area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "update"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "update"
          }
        },
        {
          "sentences": [
            "hay alguna actualización[ de (software|firmware)][ disponible][ <area>]",
            "se puede actualizar [(software|firmware) (en|de)] (algo|algún dispositivo)[ <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "update",
            "state": "on"
          }
        },
        {
          "sentences": [
            "(qué|cual[es]) actualizaci(ón|ones) [de (software|firmware)] hay[ disponible[s]][ <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "update",
            "state": "on"
          }
        },
        {
          "sentences": [
            "cuántas actualizaciones [de (software|firmware)] hay [disponibles][ <area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "binary_sensor",
            "device_class": "update",
            "state": "on"
          }
        },
        {
          "sentences": [
            "está[n] <name> {bs_vibration_states:state}[ <area>]",
            "está[n] {bs_vibration_states:state} <name>[ <area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "vibration"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "vibration"
          }
        },
        {
          "sentences": [
            "(vibra algo|hay algo vibrando)[ <area>]"
          ],
          "response": "any",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "vibration"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "vibration",
            "state": "on"
          }
        },
        {
          "sentences": [
            "está[n] <name> {bs_window_states:state}[ <area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "binary_sensor",
            "device_class": "window"
          },
          "slots": {
            "domain": "binary_sensor",
            "device_class": "window"
          }
        },
        {
          "sentences": [
            "<dime> cuál es [el estado [actual] de] <name> [<area>] <ahora>",
            "<dime> qué estado [actual] tiene <name> [<area>] <ahora>",
            "<dime> cómo está <name> [<area>] <ahora>"
          ],
          "response": "one",
          "excludes_context": {
            "domain": [
              "scene",
              "script"
            ]
          }
        },
        {
          "sentences": [
            "<dime_si> está <name> {on_off_states:state}[ <area>] <ahora>",
            "<dime_si> está <name> [<area> ]{on_off_states:state} <ahora>"
          ],
          "response": "one_yesno",
          "excludes_context": {
            "domain": [
              "cover"
            ]
          }
        },
        {
          "sentences": [
            "<dime_si> (hay|está) (algún|alguna) {on_off_domains:domain} {on_off_states:state}[ <area>] <ahora>",
            "<dime_si> (hay|está) (algún|alguna) {on_off_domains:domain} [<area> ]{on_off_states:state} <ahora>",
            "<dime_si> (hay|están) (algunos|algunas) {on_off_domains:domain} ({on_off_states:state}[ <area>]|[<area> ]{on_off_states:state}) <ahora>"
          ],
          "response": "any"
        },
        {
          "sentences": [
            "<dime_si> están (todos|todas) (los|las) {on_off_domains:domain} {on_off_states:state}[ <area>] <ahora>",
            "<dime_si> están (todos|todas) (los|las) {on_off_domains:domain} [<area> ]{on_off_states:state} <ahora>"
          ],
          "response": "all"
        },
        {
          "sentences": [
            "<dime> (qué|cual|cuales) {on_off_domains:domain} (está|están|hay) {on_off_states:state}[ <area>] <ahora>"
          ],
          "response": "which"
        },
        {
          "sentences": [
            "<dime> (cuántos|cuántas) {on_off_domains:domain} (están|hay) {on_off_states:state}[ <area>] <ahora>"
          ],
          "response": "how_many"
        },
        {
          "sentences": [
            "está <name> {cover_states:state} [<area>]",
            "está <name> [<area>] {cover_states:state}"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "cover"
          },
          "slots": {
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "hay [(algún|alguna|algunos|algunas)] {cover_classes:device_class} {cover_states:state}[ <area>]",
            "está (algún|alguna) {cover_classes:device_class} ({cover_states:state}[ <area>]|[<area> ]{cover_states:state})",
            "están (algúnos|algunas) {cover_classes:device_class} ({cover_states:state}[ <area>]|[<area> ]{cover_states:state})"
          ],
          "response": "any",
          "slots": {
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "están (todos|todas) [las|los] {cover_classes:device_class} {cover_states:state}[ <area>]",
            "están (todos|todas) [las|los] {cover_classes:device_class} [<area> ]{cover_states:state}"
          ],
          "response": "all",
          "slots": {
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "(qué|cuál|cuáles) {cover_classes:device_class} (está|están|hay) {cover_states:state}[ <area>]",
            "(qué|cuál|cuáles) {cover_classes:device_class} [<area> ](está|están|hay) {cover_states:state}"
          ],
          "response": "which",
          "slots": {
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "(cuántos|cuántas) {cover_classes:device_class} (están|hay) {cover_states:state} [<area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "está[n] <name> {lock_states:state}[ <area>]",
            "está[n] {lock_states:state} <name>[ <area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "lock"
          },
          "slots": {
            "domain": "lock"
          }
        },
        {
          "sentences": [
            "(está[n]|hay) alg(ún|una)[s] (cierre|cerradura|pestillo|puerta)[s] {lock_states:state}[ <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "lock"
          }
        },
        {
          "sentences": [
            "están todas l(o|a)s (cierres|cerraduras|pestillos|puertas) {lock_states:state}[ <area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "lock"
          }
        },
        {
          "sentences": [
            "(qué|cual[es]) puerta[s] está[n] {lock_states:state}[ <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "lock"
          }
        },
        {
          "sentences": [
            "cuánt(o|a)s (puertas|cierres|cerraduras|pestillos) (están|hay) {lock_states:state}[ <area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "lock"
          }
        }
      ]
    }
  },
  "responses": {
    "errors": {
      "no_intent": "Lo siento, no he entendido",
      "no_area": "No existe ningún área llamada {{ area }}",
      "no_domain": "No hay ningún elemento de tipo {{ domain }} en el área {{ area }}",
      "no_device_class": "No hay ningún elemento de clase {{ device_class }} en el área {{ area }}",
      "no_entity": "No existe ningún dispositivo o entidad llamado {{ entity }}",
      "handle_error": "Se ha producido un error inesperado al procesar la instrucción"
    },
    "intents": {
      "HassGetState": {
        "one": "El estado del dispositivo {{ slots.name | capitalize }} es {{ state.state_with_unit }}\n",
        "one_yesno": "{% if query.matched %}\n  Sí\n{% else %}\n  No, su estado es {{ state.state_with_unit }}\n{% endif %}\n",
        "any": "{% if query.matched %}\n  {% set match = query.matched | map(attribute=\"name\") | sort | list %}\n  {% if match | length > 4 %}\n    Sí, {{ match[:3] | join(\", \") }} y otros {{ (match | length - 3) }} dispositivos más\n  {%- else -%}\n    {% if match | length == 1 %}\n      Sí, el dispositivo {{ match|first }}\n    {% else %}\n      Sí,\n      {% for name in match -%}\n        {% if not loop.first and not loop.last %}, {% elif loop.last and not loop.first %} y {% endif -%}\n        {{ name }}\n      {%- endfor -%}\n    {% endif %}\n  {% endif %}\n{% else %}\n  No\n{% endif %}\n",
        "all": "{% if not query.unmatched: %}\n  Sí\n{% else %}\n  {% set no_match = query.unmatched | map(attribute=\"name\") | sort | list %}\n  {% if no_match | length > 4 %}\n    No, ni {{ no_match[:3] | join(\", ni \") }} ni otros {{ (no_match | length - 3) }} dispositivos lo están\n  {% else %}\n    {% if no_match | length == 1 %}\n      No, el dispositivo {{ no_match|first }} no\n    {%- else -%}\n      No, ni\n      {% for name in no_match -%}\n        {% if not loop.first and not loop.last %}, ni {% elif loop.last and not loop.first %} ni {% endif -%}\n        {{ name }}\n      {%- endfor %}\n      lo están\n    {% endif %}\n  {% endif %}\n{% endif %}\n",
        "which": "{% if not query.matched %}\n  Ningún dispositivo\n{% else: %}\n  {% set match = query.matched | map(attribute=\"name\") | sort | list %}\n  {% if match | length > 4 %}\n    {{ match[:3] | join(\", \") }} y otros {{ (match | length - 3) }} dispositivos más\n  {% else %}\n    {%- for name in match -%}\n      {% if not loop.first and not loop.last %}, {% elif loop.last and not loop.first %} y {% endif -%}\n      {{ name }}\n    {%- endfor -%}\n  {% endif %}\n{% endif %}\n",
        "how_many": "{{ query.matched | length }}\n"
      },
      "HassTurnOff": {
        "default": "Dispositivo desconectado",
        "lights_area": "Luces apagadas",
        "fans_area": "Ventiladores apagados",
        "cover": "Cierre completado",
        "light_all": "Todas las luces apagadas",
        "cover_device_class": "Cierre completado",
        "lock": "Apertura completada"
      },
      "HassTurnOn": {
        "default": "Dispositivos activados",
        "lights_area": "Luces encendidas",
        "fans_area": "Ventiladores encendidos",
        "cover": "Apertura completada",
        "cover_device_class": "Apertura completada",
        "scene": "Escena activada",
        "script": "Script iniciado",
        "lock": "Cierre completado"
      }
    }
  },
  "lists": {
    "color": {
      "values": [
        {
          "in": "blanco",
          "out": "white"
        },
        {
          "in": "negro",
          "out": "black"
        },
        {
          "in": "rojo",
          "out": "red"
        },
        {
          "in": "(naranja|anaranjado)",
          "out": "orange"
        },
        {
          "in": "amarillo",
          "out": "yellow"
        },
        {
          "in": "verde",
          "out": "green"
        },
        {
          "in": "azul",
          "out": "blue"
        },
        {
          "in": "(lila|morado|púrpura)",
          "out": "purple"
        },
        {
          "in": "marrón",
          "out": "brown"
        },
        {
          "in": "(rosa|rosado)",
          "out": "pink"
        }
      ]
    },
    "brightness": {
      "range": {
        "type": "percentage",
        "from": 0,
        "to": 100
      }
    },
    "temperature": {
      "range": {
        "type": "temperature",
        "from": 0,
        "to": 100
      }
    },
    "temperature_unit": {
      "values": [
        "celsius",
        {
          "in": "c",
          "out": "celsius"
        },
        {
          "in": "centígrados",
          "out": "celsius"
        },
        "fahrenheit",
        {
          "in": "f",
          "out": "fahrenheit"
        }
      ]
    },
    "brightness_level": {
      "values": [
        {
          "in": "(máxim(o|a)|más alt(a|o)|tope)",
          "out": 100
        },
        {
          "in": "(mímim(o|a)|más baj(o|a))",
          "out": 1
        }
      ]
    },
    "on_off_states": {
      "values": [
        {
          "in": "(encendid|prendid|conectad)(o|a)[s]",
          "out": "on"
        },
        {
          "in": "(apagad|desconectad)(o|a)[s]",
          "out": "off"
        }
      ]
    },
    "on_off_domains": {
      "values": [
        {
          "in": "(luz|luces)",
          "out": "light"
        },
        {
          "in": "(ventilador[es]|abanico[s])",
          "out": "fan"
        },
        {
          "in": "(interruptor[es]|conmutador[es]|llave[s])",
          "out": "switch"
        }
      ]
    },
    "cover_states": {
      "values": [
        {
          "in": "abiert(o|a)[s]",
          "out": "open"
        },
        {
          "in": "cerrad(o|a)[s]",
          "out": "closed"
        },
        {
          "in": "abriéndose",
          "out": "opening"
        },
        {
          "in": "cerrándose",
          "out": "closing"
        }
      ]
    },
    "cover_classes": {
      "values": [
        {
          "in": "toldo[s]",
          "out": "awning"
        },
        {
          "in": "persiana[s]",
          "out": "blind"
        },
        {
          "in": "cortina[s]",
          "out": "curtain"
        },
        {
          "in": "puerta[s]",
          "out": "door"
        },
        {
          "in": "(puerta[s]|cancela[s]|portón|portones) de garaje",
          "out": "garage"
        },
        {
          "in": "verja[s]|cancela[s]|portón|portones",
          "out": "gate"
        },
        {
          "in": "estor[es]",
          "out": "shade"
        },
        {
          "in": "(contraventana[s]|veneciana[s])",
          "out": "shutter"
        },
        {
          "in": "ventana[s]",
          "out": "window"
        }
      ]
    },
    "lock_states": {
      "values": [
        {
          "in": "(cerrad(o|a)[s] [con (llave|pestillo|cerrojo|cerradura)]|echad(o|a)[s])",
          "out": "locked"
        },
        {
          "in": "abiert(o|a)[s]",
          "out": "unlocked"
        }
      ]
    },
    "bs_battery_states": {
      "values": [
        {
          "in": "baj(o|a)[s]",
          "out": "on"
        },
        {
          "in": "normal",
          "out": "off"
        }
      ]
    },
    "bs_battery_charging_states": {
      "values": [
        {
          "in": "cargando|cargándose|en carga",
          "out": "on"
        },
        {
          "in": "no (cargando|cargándose|en carga)",
          "out": "off"
        }
      ]
    },
    "bs_carbon_monoxide_states": {
      "values": [
        {
          "in": "(detectad|activ)(o|a)[s]",
          "out": "on"
        },
        {
          "in": "(despejad|no detectad)(o|a)[s]",
          "out": "off"
        }
      ]
    },
    "bs_cold_states": {
      "values": [
        {
          "in": "frí(o|a)[s]",
          "out": "on"
        },
        {
          "in": "normal",
          "out": "off"
        }
      ]
    },
    "bs_connectivity_states": {
      "values": [
        {
          "in": "conectad(o|a)[s]",
          "out": "on"
        },
        {
          "in": "desconectad(o|a)[s]",
          "out": "off"
        }
      ]
    },
    "bs_door_states": {
      "values": [
        {
          "in": "abiert(o|a)[s]",
          "out": "on"
        },
        {
          "in": "cerrad(o|a)[s]",
          "out": "off"
        }
      ]
    },
    "bs_garage_door_states": {
      "values": [
        {
          "in": "abiert(o|a)[s]",
          "out": "on"
        },
        {
          "in": "cerrad(o|a)[s]",
          "out": "off"
        }
      ]
    },
    "bs_gas_states": {
      "values": [
        {
          "in": "(detectad|activ[ad])(o|a)[s]",
          "out": "on"
        },
        {
          "in": "(despejad|no detectad|inactiv)(o|a)[s]",
          "out": "off"
        }
      ]
    },
    "bs_heat_states": {
      "values": [
        {
          "in": "caliente",
          "out": "on"
        },
        {
          "in": "normal",
          "out": "off"
        }
      ]
    },
    "bs_light_states": {
      "values": [
        {
          "in": "(activ|encendid|detectad)(o|a)[s]",
          "out": "on"
        },
        {
          "in": "((inactiv|apagad)(o|a)[s]|sin luz)",
          "out": "off"
        }
      ]
    },
    "bs_lock_states": {
      "values": [
        {
          "in": "abiert(o|a)[s]",
          "out": "on"
        },
        {
          "in": "cerrad(o|a)[s] [con (llave|cerrojo|pestillo|cerradura)]",
          "out": "off"
        }
      ]
    },
    "bs_moisture_states": {
      "values": [
        {
          "in": "(húmed|mojad|inundad|activ)(o|a)[s]",
          "out": "on"
        },
        {
          "in": "sec(o|a)[s]",
          "out": "off"
        }
      ]
    },
    "bs_motion_states": {
      "values": [
        {
          "in": "(activ[ad]|detectad)(o|a)[s]",
          "out": "on"
        },
        {
          "in": "(inactiv|despejad)(o|a)[s]",
          "out": "off"
        }
      ]
    },
    "bs_occupancy_states": {
      "values": [
        {
          "in": "(detectad|activ[ad]|ocupad)(o|a)[s]",
          "out": "on"
        },
        {
          "in": "(inactiv|despejad)(o|a)[s]",
          "out": "off"
        }
      ]
    },
    "bs_opening_states": {
      "values": [
        {
          "in": "abiert(o|a)[s]",
          "out": "on"
        },
        {
          "in": "cerrad(o|a)[s]",
          "out": "off"
        }
      ]
    },
    "bs_plug_states": {
      "values": [
        {
          "in": "enchufad(o|a)[s]",
          "out": "on"
        },
        {
          "in": "desenchufad(o|a)[s]",
          "out": "off"
        }
      ]
    },
    "bs_power_states": {
      "values": [
        {
          "in": "(alimentad|conectad|encendid|activ)(o|a)[s]",
          "out": "on"
        },
        {
          "in": "(desconectad|apagad|inactiv)(o|a)[s]",
          "out": "off"
        }
      ]
    },
    "bs_presence_states": {
      "values": [
        {
          "in": "(en casa|presente)",
          "out": "on"
        },
        {
          "in": "(fuera|no presente)",
          "out": "off"
        }
      ]
    },
    "bs_problem_states": {
      "values": [
        {
          "in": "detectad(o|a)[s]",
          "out": "on"
        },
        {
          "in": "correcto|ok",
          "out": "off"
        }
      ]
    },
    "bs_running_states": {
      "values": [
        {
          "in": "ejecutándose|en ejecución|en marcha|funcionando",
          "out": "on"
        },
        {
          "in": "no ejecutándose|parad(o|a)[s]|detenid(o|a)[s]",
          "out": "off"
        }
      ]
    },
    "bs_safety_states": {
      "values": [
        {
          "in": "insegur(o|a)[s]",
          "out": "on"
        },
        {
          "in": "segur(o|a)[s]",
          "out": "off"
        }
      ]
    },
    "bs_smoke_states": {
      "values": [
        {
          "in": "(activ|detectad)(o|a)[s]",
          "out": "on"
        },
        {
          "in": "(inactiv|despejad)(o|a)[s]",
          "out": "off"
        }
      ]
    },
    "bs_sound_states": {
      "values": [
        {
          "in": "(activ|detectad|disparad)(o|a)[s]",
          "out": "on"
        },
        {
          "in": "(inactiv|despejad)(o|a)[s]",
          "out": "off"
        }
      ]
    },
    "bs_tamper_states": {
      "values": [
        {
          "in": "(detectad|manipulad)(o|a)[s]",
          "out": "on"
        },
        {
          "in": "despejad(o|a)[s]",
          "out": "off"
        }
      ]
    },
    "bs_update_states": {
      "values": [
        {
          "in": "actualizable[s]|con actualización disponible",
          "out": "on"
        },
        {
          "in": "actualizad(o|a)[s]",
          "out": "off"
        }
      ]
    },
    "bs_vibration_states": {
      "values": [
        {
          "in": "(activ|detectad)(o|a)[s]|vibrando",
          "out": "on"
        },
        {
          "in": "(inactiv|despejad)(o|a)[s]",
          "out": "off"
        }
      ]
    },
    "bs_window_states": {
      "values": [
        {
          "in": "abiert(o|a)[s]",
          "out": "on"
        },
        {
          "in": "cerrad(o|a)[s]",
          "out": "closed"
        }
      ]
    },
    "shopping_list_item": {
      "wildcard": true
    }
  },
  "expansion_rules": {
    "abre": "(abre|abra|abrir|abrí|sube|suba|subir|subí)",
    "añadir": "(añade|añada|añadir|añadí|pon|ponga|poner|poné)",
    "apaga": "(apaga|apague|apagar|apagá|desconecta|desconecte|desconectar|desconectá|desactiva|desactive|desactivar|desactivá)",
    "area": "[en|en el|en la|la|de la|del|de|el] {area}",
    "brightness": "{brightness}[ ][%|porciento|por ciento]",
    "cierra": "(cierra|cierre|cerrar|cerrá|baja|baje|bajar|bajá)",
    "enciende": "(enciende|encienda|encender|encendé|conecta|conecte|conectar|conectá|activa|active|activar|activá|prende|prenda|prender|prendé)",
    "ejecuta": "(<enciende>|ejecuta|ejecute|ejecutar|ejecutá|activa|active|activar|activá|inicia|inicie|iniciar|iniciá)",
    "establece": "(pon|ponga|poner|poné|establece|establezca|establecer|establecé|ajusta|ajuste|ajustar|ajustá|configura|configure|configurar|configurá)",
    "establece_sube_baja": "(pon|ponga|poner|poné|establece|establezca|establecer|establecé|ajusta|ajuste|ajustar|ajustá|configura|configure|configurar|configurá|sube|suba|subir|subí|baja|baje|bajar|bajá)",
    "name": "[el|la|los|las] {name}",
    "puerta": "[el|la] (puerta|portón|cancela|verja|reja|compuerta|portillo)",
    "temp": "[el|la] (temperatura|calor|grados)",
    "temperature": "{temperature}[ ][grados][ ][{temperature_unit}]",
    "dime": "[sabes|sabé|dime|decirme|indicar]",
    "dime_si": "[(sabes|sabé|dime|decirme|indicar) si]",
    "ahora": "[ahora [mismo]|actualmente|en este momento]"
  },
  "skip_words": [
    "por favor",
    "porfa",
    "gracias",
    "podrías",
    "podría",
    "puedes",
    "podés",
    "te importaría",
    "te importa",
    "le importa",
    "le importaría",
    "te animas a",
    "te animás a"
  ]
}