//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * This is an open API that holds specific endpoints as a base for Pieces Context Systems
 * The point of this API is to allow us to organize and Auto Generate Code Specific for Connected Applications - this will allow for stateful context abstraction & less code within the Core Connector
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Classification,
    ClassificationFromJSON,
    ClassificationFromJSONTyped,
    ClassificationToJSON,
    EmbeddedModelSchema,
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
} from './';

/**
 * Metadata of a format reclassification event
 * @export
 * @interface TrackedAssetEventFormatReclassificationMetadata
 */
export interface TrackedAssetEventFormatReclassificationMetadata {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof TrackedAssetEventFormatReclassificationMetadata
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {Classification}
     * @memberof TrackedAssetEventFormatReclassificationMetadata
     */
    previous?: Classification;
    /**
     * 
     * @type {Classification}
     * @memberof TrackedAssetEventFormatReclassificationMetadata
     */
    current?: Classification;
}

export function TrackedAssetEventFormatReclassificationMetadataFromJSON(json: any): TrackedAssetEventFormatReclassificationMetadata {
    return TrackedAssetEventFormatReclassificationMetadataFromJSONTyped(json, false);
}

export function TrackedAssetEventFormatReclassificationMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrackedAssetEventFormatReclassificationMetadata {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'schema': !exists(json, 'schema') ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'previous': !exists(json, 'previous') ? undefined : ClassificationFromJSON(json['previous']),
        'current': !exists(json, 'current') ? undefined : ClassificationFromJSON(json['current']),
    };
}

export function TrackedAssetEventFormatReclassificationMetadataToJSON(value?: TrackedAssetEventFormatReclassificationMetadata | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'schema': EmbeddedModelSchemaToJSON(value.schema),
        'previous': ClassificationToJSON(value.previous),
        'current': ClassificationToJSON(value.current),
    };
}


