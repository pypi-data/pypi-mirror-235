//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * This is an open API that holds specific endpoints as a base for Pieces Context Systems
 * The point of this API is to allow us to organize and Auto Generate Code Specific for Connected Applications - this will allow for stateful context abstraction & less code within the Core Connector
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EmbeddedModelSchema,
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    MechanismEnum,
    MechanismEnumFromJSON,
    MechanismEnumFromJSONTyped,
    MechanismEnumToJSON,
} from './';

/**
 * This is similar to an SeededWebsite, where this is the minimum information of a website, but this can get added to a seededAsset,  where you may not yet have an asset id.
 * @export
 * @interface SeededAssetWebsite
 */
export interface SeededAssetWebsite {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof SeededAssetWebsite
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {string}
     * @memberof SeededAssetWebsite
     */
    url: string;
    /**
     * 
     * @type {string}
     * @memberof SeededAssetWebsite
     */
    name: string;
    /**
     * 
     * @type {MechanismEnum}
     * @memberof SeededAssetWebsite
     */
    mechanism?: MechanismEnum;
}

export function SeededAssetWebsiteFromJSON(json: any): SeededAssetWebsite {
    return SeededAssetWebsiteFromJSONTyped(json, false);
}

export function SeededAssetWebsiteFromJSONTyped(json: any, ignoreDiscriminator: boolean): SeededAssetWebsite {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'schema': !exists(json, 'schema') ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'url': json['url'],
        'name': json['name'],
        'mechanism': !exists(json, 'mechanism') ? undefined : MechanismEnumFromJSON(json['mechanism']),
    };
}

export function SeededAssetWebsiteToJSON(value?: SeededAssetWebsite | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'schema': EmbeddedModelSchemaToJSON(value.schema),
        'url': value.url,
        'name': value.name,
        'mechanism': MechanismEnumToJSON(value.mechanism),
    };
}


