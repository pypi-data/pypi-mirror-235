//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Runtime Common Library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * A Reference configuration. References must refer to a keystore that also exists in the parent environment.
 * @export
 * @interface ApigeeReference
 */
export interface ApigeeReference {
    /**
     * Optional. A human-readable description of this reference.
     * @type {string}
     * @memberof ApigeeReference
     */
    description?: string;
    /**
     * Required. The resource id of this reference. Values must match the regular expression [\w\s\-.]+.
     * @type {string}
     * @memberof ApigeeReference
     */
    name?: string;
    /**
     * Required. The id of the resource to which this reference refers. Must be the id of a resource that exists in the parent environment and is of the given resource_type.
     * @type {string}
     * @memberof ApigeeReference
     */
    refers?: string;
    /**
     * The type of resource referred to by this reference. Valid values are 'KeyStore' or 'TrustStore'.
     * @type {string}
     * @memberof ApigeeReference
     */
    resourceType?: string;
}

export function ApigeeReferenceFromJSON(json: any): ApigeeReference {
    return ApigeeReferenceFromJSONTyped(json, false);
}

export function ApigeeReferenceFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApigeeReference {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'description': !exists(json, 'description') ? undefined : json['description'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'refers': !exists(json, 'refers') ? undefined : json['refers'],
        'resourceType': !exists(json, 'resourceType') ? undefined : json['resourceType'],
    };
}

export function ApigeeReferenceToJSON(value?: ApigeeReference | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'description': value.description,
        'name': value.name,
        'refers': value.refers,
        'resourceType': value.resourceType,
    };
}


