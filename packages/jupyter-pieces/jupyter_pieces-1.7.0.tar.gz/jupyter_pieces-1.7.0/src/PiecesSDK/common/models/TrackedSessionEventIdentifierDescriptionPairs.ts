//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Runtime Common Library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EmbeddedModelSchema,
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
} from './';

/**
 * These are all of the available event types that are permitted in an object pair notation.
 * @export
 * @interface TrackedSessionEventIdentifierDescriptionPairs
 */
export interface TrackedSessionEventIdentifierDescriptionPairs {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof TrackedSessionEventIdentifierDescriptionPairs
     */
    schema?: EmbeddedModelSchema;
    /**
     * The key value pair for an application being opened.
     * @type {string}
     * @memberof TrackedSessionEventIdentifierDescriptionPairs
     */
    sessionInitialized?: TrackedSessionEventIdentifierDescriptionPairsSessionInitializedEnum;
    /**
     * There was a successful connection locally
     * @type {string}
     * @memberof TrackedSessionEventIdentifierDescriptionPairs
     */
    sessionLocalConnectionSucceeded?: TrackedSessionEventIdentifierDescriptionPairsSessionLocalConnectionSucceededEnum;
    /**
     * There was a failed connection locally
     * @type {string}
     * @memberof TrackedSessionEventIdentifierDescriptionPairs
     */
    sessionLocalConnectionFailed?: TrackedSessionEventIdentifierDescriptionPairsSessionLocalConnectionFailedEnum;
    /**
     * If the current application is in the background or not, could also be minimized.
     * @type {string}
     * @memberof TrackedSessionEventIdentifierDescriptionPairs
     */
    sessionInactive?: TrackedSessionEventIdentifierDescriptionPairsSessionInactiveEnum;
    /**
     * If the application has been brought to the forground.
     * @type {string}
     * @memberof TrackedSessionEventIdentifierDescriptionPairs
     */
    sessionActive?: TrackedSessionEventIdentifierDescriptionPairsSessionActiveEnum;
    /**
     * If the user has closed the application, thus ending the session.
     * @type {string}
     * @memberof TrackedSessionEventIdentifierDescriptionPairs
     */
    sessionTerminated?: TrackedSessionEventIdentifierDescriptionPairsSessionTerminatedEnum;
    /**
     * A user has signed into this session with a an external account
     * @type {string}
     * @memberof TrackedSessionEventIdentifierDescriptionPairs
     */
    sessionAuthenticatedWithSignIn?: TrackedSessionEventIdentifierDescriptionPairsSessionAuthenticatedWithSignInEnum;
    /**
     * A user has signed out of this session
     * @type {string}
     * @memberof TrackedSessionEventIdentifierDescriptionPairs
     */
    sessionUnauthenticatedWithSignOut?: TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithSignOutEnum;
    /**
     * A user did not sign into the session with a dismissal
     * @type {string}
     * @memberof TrackedSessionEventIdentifierDescriptionPairs
     */
    sessionUnauthenticatedWithDismiss?: TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithDismissEnum;
    /**
     * A user did not sign into the session with a reminder
     * @type {string}
     * @memberof TrackedSessionEventIdentifierDescriptionPairs
     */
    sessionUnauthenticatedWithRemind?: TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithRemindEnum;
    /**
     * Onboarding has been initialized for this session
     * @type {string}
     * @memberof TrackedSessionEventIdentifierDescriptionPairs
     */
    sessionOnboardingInitialized?: TrackedSessionEventIdentifierDescriptionPairsSessionOnboardingInitializedEnum;
    /**
     * Onboarding has been completed for this session
     * @type {string}
     * @memberof TrackedSessionEventIdentifierDescriptionPairs
     */
    sessionOnboardingCompleted?: TrackedSessionEventIdentifierDescriptionPairsSessionOnboardingCompletedEnum;
}

/**
* @export
* @enum {string}
*/
export enum TrackedSessionEventIdentifierDescriptionPairsSessionInitializedEnum {
    ASessionHasBeenInitializedAndTheApplicationHasBeenOpened = 'a_session_has_been_initialized_and_the_application_has_been_opened'
}/**
* @export
* @enum {string}
*/
export enum TrackedSessionEventIdentifierDescriptionPairsSessionLocalConnectionSucceededEnum {
    OneOrMoreApplicationsHasSuccessfullyConnected = 'one_or_more_applications_has_successfully_connected'
}/**
* @export
* @enum {string}
*/
export enum TrackedSessionEventIdentifierDescriptionPairsSessionLocalConnectionFailedEnum {
    OneOrMoreApplicationsHasFailedToConnectLocally = 'one_or_more_applications_has_failed_to_connect_locally'
}/**
* @export
* @enum {string}
*/
export enum TrackedSessionEventIdentifierDescriptionPairsSessionInactiveEnum {
    ASessionIsInactiveBecauseTheApplicationIsNotInTheForeground = 'a_session_is_inactive_because_the_application_is_not_in_the_foreground'
}/**
* @export
* @enum {string}
*/
export enum TrackedSessionEventIdentifierDescriptionPairsSessionActiveEnum {
    ASessionIsActiveBecauseTheApplicationIsInTheForeground = 'a_session_is_active_because_the_application_is_in_the_foreground'
}/**
* @export
* @enum {string}
*/
export enum TrackedSessionEventIdentifierDescriptionPairsSessionTerminatedEnum {
    ASessionHasBeenEndedAndTheApplicationHasBeenClosed = 'a_session_has_been_ended_and_the_application_has_been_closed'
}/**
* @export
* @enum {string}
*/
export enum TrackedSessionEventIdentifierDescriptionPairsSessionAuthenticatedWithSignInEnum {
    AUserHasSignedIntoThisSessionWithAAnExternalAccount = 'a_user_has_signed_into_this_session_with_a_an_external_account'
}/**
* @export
* @enum {string}
*/
export enum TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithSignOutEnum {
    AUserHasSignedOutOfThisSession = 'a_user_has_signed_out_of_this_session'
}/**
* @export
* @enum {string}
*/
export enum TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithDismissEnum {
    AUserDidNotSignIntoTheSessionWithADismissal = 'a_user_did_not_sign_into_the_session_with_a_dismissal'
}/**
* @export
* @enum {string}
*/
export enum TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithRemindEnum {
    AUserDidNotSignIntoTheSessionWithAReminder = 'a_user_did_not_sign_into_the_session_with_a_reminder'
}/**
* @export
* @enum {string}
*/
export enum TrackedSessionEventIdentifierDescriptionPairsSessionOnboardingInitializedEnum {
    OnboardingHasBeenInitializedForThisSession = 'onboarding_has_been_initialized_for_this_session'
}/**
* @export
* @enum {string}
*/
export enum TrackedSessionEventIdentifierDescriptionPairsSessionOnboardingCompletedEnum {
    OnboardingHasBeenCompletedForThisSession = 'onboarding_has_been_completed_for_this_session'
}

export function TrackedSessionEventIdentifierDescriptionPairsFromJSON(json: any): TrackedSessionEventIdentifierDescriptionPairs {
    return TrackedSessionEventIdentifierDescriptionPairsFromJSONTyped(json, false);
}

export function TrackedSessionEventIdentifierDescriptionPairsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrackedSessionEventIdentifierDescriptionPairs {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'schema': !exists(json, 'schema') ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'sessionInitialized': !exists(json, 'session_initialized') ? undefined : json['session_initialized'],
        'sessionLocalConnectionSucceeded': !exists(json, 'session_local_connection_succeeded') ? undefined : json['session_local_connection_succeeded'],
        'sessionLocalConnectionFailed': !exists(json, 'session_local_connection_failed') ? undefined : json['session_local_connection_failed'],
        'sessionInactive': !exists(json, 'session_inactive') ? undefined : json['session_inactive'],
        'sessionActive': !exists(json, 'session_active') ? undefined : json['session_active'],
        'sessionTerminated': !exists(json, 'session_terminated') ? undefined : json['session_terminated'],
        'sessionAuthenticatedWithSignIn': !exists(json, 'session_authenticated_with_sign_in') ? undefined : json['session_authenticated_with_sign_in'],
        'sessionUnauthenticatedWithSignOut': !exists(json, 'session_unauthenticated_with_sign_out') ? undefined : json['session_unauthenticated_with_sign_out'],
        'sessionUnauthenticatedWithDismiss': !exists(json, 'session_unauthenticated_with_dismiss') ? undefined : json['session_unauthenticated_with_dismiss'],
        'sessionUnauthenticatedWithRemind': !exists(json, 'session_unauthenticated_with_remind') ? undefined : json['session_unauthenticated_with_remind'],
        'sessionOnboardingInitialized': !exists(json, 'session_onboarding_initialized') ? undefined : json['session_onboarding_initialized'],
        'sessionOnboardingCompleted': !exists(json, 'session_onboarding_completed') ? undefined : json['session_onboarding_completed'],
    };
}

export function TrackedSessionEventIdentifierDescriptionPairsToJSON(value?: TrackedSessionEventIdentifierDescriptionPairs | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'schema': EmbeddedModelSchemaToJSON(value.schema),
        'session_initialized': value.sessionInitialized,
        'session_local_connection_succeeded': value.sessionLocalConnectionSucceeded,
        'session_local_connection_failed': value.sessionLocalConnectionFailed,
        'session_inactive': value.sessionInactive,
        'session_active': value.sessionActive,
        'session_terminated': value.sessionTerminated,
        'session_authenticated_with_sign_in': value.sessionAuthenticatedWithSignIn,
        'session_unauthenticated_with_sign_out': value.sessionUnauthenticatedWithSignOut,
        'session_unauthenticated_with_dismiss': value.sessionUnauthenticatedWithDismiss,
        'session_unauthenticated_with_remind': value.sessionUnauthenticatedWithRemind,
        'session_onboarding_initialized': value.sessionOnboardingInitialized,
        'session_onboarding_completed': value.sessionOnboardingCompleted,
    };
}


