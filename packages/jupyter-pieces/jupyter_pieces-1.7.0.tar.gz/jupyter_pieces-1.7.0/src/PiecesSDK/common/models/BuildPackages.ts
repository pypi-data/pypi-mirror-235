//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Runtime Common Library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EmbeddedModelSchema,
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
} from './';

/**
 * 
 * @export
 * @interface BuildPackages
 */
export interface BuildPackages {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof BuildPackages
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {string}
     * @memberof BuildPackages
     */
    object?: string;
    /**
     * 
     * @type {string}
     * @memberof BuildPackages
     */
    url?: string;
    /**
     * 
     * @type {number}
     * @memberof BuildPackages
     */
    size?: number;
    /**
     * 
     * @type {string}
     * @memberof BuildPackages
     */
    hash?: string;
    /**
     * 
     * @type {string}
     * @memberof BuildPackages
     */
    updated?: string;
    /**
     * 
     * @type {string}
     * @memberof BuildPackages
     */
    latest?: string;
}

export function BuildPackagesFromJSON(json: any): BuildPackages {
    return BuildPackagesFromJSONTyped(json, false);
}

export function BuildPackagesFromJSONTyped(json: any, ignoreDiscriminator: boolean): BuildPackages {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'schema': !exists(json, 'schema') ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'object': !exists(json, 'object') ? undefined : json['object'],
        'url': !exists(json, 'url') ? undefined : json['url'],
        'size': !exists(json, 'size') ? undefined : json['size'],
        'hash': !exists(json, 'hash') ? undefined : json['hash'],
        'updated': !exists(json, 'updated') ? undefined : json['updated'],
        'latest': !exists(json, 'latest') ? undefined : json['latest'],
    };
}

export function BuildPackagesToJSON(value?: BuildPackages | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'schema': EmbeddedModelSchemaToJSON(value.schema),
        'object': value.object,
        'url': value.url,
        'size': value.size,
        'hash': value.hash,
        'updated': value.updated,
        'latest': value.latest,
    };
}


