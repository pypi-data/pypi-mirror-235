//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Runtime Common Library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TLPCodeSnippetizerSnippet,
    TLPCodeSnippetizerSnippetFromJSON,
    TLPCodeSnippetizerSnippetFromJSONTyped,
    TLPCodeSnippetizerSnippetToJSON,
} from './';

/**
 * This is the value that is returned from the snippitizer found within the ml_facade.
 * the iterable is an array of snippets that we were able to extract.
 * @export
 * @interface TLPCodeSnippetizerReturnable
 */
export interface TLPCodeSnippetizerReturnable {
    /**
     * 
     * @type {Array<TLPCodeSnippetizerSnippet>}
     * @memberof TLPCodeSnippetizerReturnable
     */
    iterable: Array<TLPCodeSnippetizerSnippet>;
    /**
     * the amount of time it took to run in ms.
     * @type {number}
     * @memberof TLPCodeSnippetizerReturnable
     */
    duration: number;
    /**
     * because of an issue with texttiling we sometimes have to run the last found snippet again (up to a maximum number of runs). runs is the number of times it actually ran
     * @type {number}
     * @memberof TLPCodeSnippetizerReturnable
     */
    runs: number;
}

export function TLPCodeSnippetizerReturnableFromJSON(json: any): TLPCodeSnippetizerReturnable {
    return TLPCodeSnippetizerReturnableFromJSONTyped(json, false);
}

export function TLPCodeSnippetizerReturnableFromJSONTyped(json: any, ignoreDiscriminator: boolean): TLPCodeSnippetizerReturnable {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'iterable': ((json['iterable'] as Array<any>).map(TLPCodeSnippetizerSnippetFromJSON)),
        'duration': json['duration'],
        'runs': json['runs'],
    };
}

export function TLPCodeSnippetizerReturnableToJSON(value?: TLPCodeSnippetizerReturnable | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'iterable': ((value.iterable as Array<any>).map(TLPCodeSnippetizerSnippetToJSON)),
        'duration': value.duration,
        'runs': value.runs,
    };
}


