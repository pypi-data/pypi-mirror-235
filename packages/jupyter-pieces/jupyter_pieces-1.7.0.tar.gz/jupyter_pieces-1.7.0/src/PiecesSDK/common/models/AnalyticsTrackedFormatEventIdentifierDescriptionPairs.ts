//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Runtime Common Library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * This is a model that allows us to send send over super specific format related events such as copied, deleted, downloaded, etc
 * @export
 * @interface AnalyticsTrackedFormatEventIdentifierDescriptionPairs
 */
export interface AnalyticsTrackedFormatEventIdentifierDescriptionPairs {
    /**
     * The key value pair for an asset being created.
     * @type {string}
     * @memberof AnalyticsTrackedFormatEventIdentifierDescriptionPairs
     */
    formatCreated?: AnalyticsTrackedFormatEventIdentifierDescriptionPairsFormatCreatedEnum;
    /**
     * If a format was copied entirely
     * @type {string}
     * @memberof AnalyticsTrackedFormatEventIdentifierDescriptionPairs
     */
    formatCopied?: AnalyticsTrackedFormatEventIdentifierDescriptionPairsFormatCopiedEnum;
    /**
     * If a format was copied partially
     * @type {string}
     * @memberof AnalyticsTrackedFormatEventIdentifierDescriptionPairs
     */
    formatPartiallyCopied?: AnalyticsTrackedFormatEventIdentifierDescriptionPairsFormatPartiallyCopiedEnum;
    /**
     * If a format was downloaded
     * @type {string}
     * @memberof AnalyticsTrackedFormatEventIdentifierDescriptionPairs
     */
    formatDownloaded?: AnalyticsTrackedFormatEventIdentifierDescriptionPairsFormatDownloadedEnum;
    /**
     * If an format was deleted
     * @type {string}
     * @memberof AnalyticsTrackedFormatEventIdentifierDescriptionPairs
     */
    formatDeleted?: AnalyticsTrackedFormatEventIdentifierDescriptionPairsFormatDeletedEnum;
    /**
     * If a generic classification was changed on a format
     * @type {string}
     * @memberof AnalyticsTrackedFormatEventIdentifierDescriptionPairs
     */
    formatGenericClassificationUpdated?: AnalyticsTrackedFormatEventIdentifierDescriptionPairsFormatGenericClassificationUpdatedEnum;
    /**
     * If a specific classification was changed on a format
     * @type {string}
     * @memberof AnalyticsTrackedFormatEventIdentifierDescriptionPairs
     */
    formatSpecificClassificationUpdated?: AnalyticsTrackedFormatEventIdentifierDescriptionPairsFormatSpecificClassificationUpdatedEnum;
    /**
     * a format was edited
     * @type {string}
     * @memberof AnalyticsTrackedFormatEventIdentifierDescriptionPairs
     */
    formatUpdated?: AnalyticsTrackedFormatEventIdentifierDescriptionPairsFormatUpdatedEnum;
    /**
     * a format was inserted
     * @type {string}
     * @memberof AnalyticsTrackedFormatEventIdentifierDescriptionPairs
     */
    formatInserted?: AnalyticsTrackedFormatEventIdentifierDescriptionPairsFormatInsertedEnum;
}

/**
* @export
* @enum {string}
*/
export enum AnalyticsTrackedFormatEventIdentifierDescriptionPairsFormatCreatedEnum {
    AFormatWasCreated = 'a_format_was_created'
}/**
* @export
* @enum {string}
*/
export enum AnalyticsTrackedFormatEventIdentifierDescriptionPairsFormatCopiedEnum {
    IfAFormatWasEntirelyCopied = 'if_a_format_was_entirely_copied'
}/**
* @export
* @enum {string}
*/
export enum AnalyticsTrackedFormatEventIdentifierDescriptionPairsFormatPartiallyCopiedEnum {
    IfAFormatWasPartiallyCopied = 'if_a_format_was_partially_copied'
}/**
* @export
* @enum {string}
*/
export enum AnalyticsTrackedFormatEventIdentifierDescriptionPairsFormatDownloadedEnum {
    IfAFormatWasDownloaded = 'if_a_format_was_downloaded'
}/**
* @export
* @enum {string}
*/
export enum AnalyticsTrackedFormatEventIdentifierDescriptionPairsFormatDeletedEnum {
    IfAFormatWasDeleted = 'if_a_format_was_deleted'
}/**
* @export
* @enum {string}
*/
export enum AnalyticsTrackedFormatEventIdentifierDescriptionPairsFormatGenericClassificationUpdatedEnum {
    IfAGenericClassificationWasChangedOnAFormat = 'if_a_generic_classification_was_changed_on_a_format'
}/**
* @export
* @enum {string}
*/
export enum AnalyticsTrackedFormatEventIdentifierDescriptionPairsFormatSpecificClassificationUpdatedEnum {
    IfASpecificClassificationWasChangedOnAFormat = 'if_a_specific_classification_was_changed_on_a_format'
}/**
* @export
* @enum {string}
*/
export enum AnalyticsTrackedFormatEventIdentifierDescriptionPairsFormatUpdatedEnum {
    AFormatWasUpdated = 'a_format_was_updated'
}/**
* @export
* @enum {string}
*/
export enum AnalyticsTrackedFormatEventIdentifierDescriptionPairsFormatInsertedEnum {
    AFormatWasInserted = 'a_format_was_inserted'
}

export function AnalyticsTrackedFormatEventIdentifierDescriptionPairsFromJSON(json: any): AnalyticsTrackedFormatEventIdentifierDescriptionPairs {
    return AnalyticsTrackedFormatEventIdentifierDescriptionPairsFromJSONTyped(json, false);
}

export function AnalyticsTrackedFormatEventIdentifierDescriptionPairsFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnalyticsTrackedFormatEventIdentifierDescriptionPairs {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'formatCreated': !exists(json, 'format_created') ? undefined : json['format_created'],
        'formatCopied': !exists(json, 'format_copied') ? undefined : json['format_copied'],
        'formatPartiallyCopied': !exists(json, 'format_partially_copied') ? undefined : json['format_partially_copied'],
        'formatDownloaded': !exists(json, 'format_downloaded') ? undefined : json['format_downloaded'],
        'formatDeleted': !exists(json, 'format_deleted') ? undefined : json['format_deleted'],
        'formatGenericClassificationUpdated': !exists(json, 'format_generic_classification_updated') ? undefined : json['format_generic_classification_updated'],
        'formatSpecificClassificationUpdated': !exists(json, 'format_specific_classification_updated') ? undefined : json['format_specific_classification_updated'],
        'formatUpdated': !exists(json, 'format_updated') ? undefined : json['format_updated'],
        'formatInserted': !exists(json, 'format_inserted') ? undefined : json['format_inserted'],
    };
}

export function AnalyticsTrackedFormatEventIdentifierDescriptionPairsToJSON(value?: AnalyticsTrackedFormatEventIdentifierDescriptionPairs | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'format_created': value.formatCreated,
        'format_copied': value.formatCopied,
        'format_partially_copied': value.formatPartiallyCopied,
        'format_downloaded': value.formatDownloaded,
        'format_deleted': value.formatDeleted,
        'format_generic_classification_updated': value.formatGenericClassificationUpdated,
        'format_specific_classification_updated': value.formatSpecificClassificationUpdated,
        'format_updated': value.formatUpdated,
        'format_inserted': value.formatInserted,
    };
}


