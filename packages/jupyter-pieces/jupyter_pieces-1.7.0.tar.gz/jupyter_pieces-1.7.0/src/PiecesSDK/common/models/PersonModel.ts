//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Runtime Common Library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    GroupedTimestamp,
    GroupedTimestampFromJSON,
    GroupedTimestampFromJSONTyped,
    GroupedTimestampToJSON,
    ReferencedAnnotation,
    ReferencedAnnotationFromJSON,
    ReferencedAnnotationFromJSONTyped,
    ReferencedAnnotationToJSON,
    ReferencedAsset,
    ReferencedAssetFromJSON,
    ReferencedAssetFromJSONTyped,
    ReferencedAssetToJSON,
    ReferencedModel,
    ReferencedModelFromJSON,
    ReferencedModelFromJSONTyped,
    ReferencedModelToJSON,
} from './';

/**
 * This is a PersonSpecific Model. and will let us know for all the assets that get attached to the person if, this person was attached via a model or just attached automatically.
 * 
 * explanation here are the reason why a Person was attached to an asset.
 * @export
 * @interface PersonModel
 */
export interface PersonModel {
    /**
     * 
     * @type {ReferencedAsset}
     * @memberof PersonModel
     */
    asset?: ReferencedAsset;
    /**
     * 
     * @type {ReferencedModel}
     * @memberof PersonModel
     */
    model?: ReferencedModel;
    /**
     * 
     * @type {GroupedTimestamp}
     * @memberof PersonModel
     */
    deleted?: GroupedTimestamp;
    /**
     * 
     * @type {ReferencedAnnotation}
     * @memberof PersonModel
     */
    explanation?: ReferencedAnnotation;
}

export function PersonModelFromJSON(json: any): PersonModel {
    return PersonModelFromJSONTyped(json, false);
}

export function PersonModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): PersonModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'asset': !exists(json, 'asset') ? undefined : ReferencedAssetFromJSON(json['asset']),
        'model': !exists(json, 'model') ? undefined : ReferencedModelFromJSON(json['model']),
        'deleted': !exists(json, 'deleted') ? undefined : GroupedTimestampFromJSON(json['deleted']),
        'explanation': !exists(json, 'explanation') ? undefined : ReferencedAnnotationFromJSON(json['explanation']),
    };
}

export function PersonModelToJSON(value?: PersonModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'asset': ReferencedAssetToJSON(value.asset),
        'model': ReferencedModelToJSON(value.model),
        'deleted': GroupedTimestampToJSON(value.deleted),
        'explanation': ReferencedAnnotationToJSON(value.explanation),
    };
}


