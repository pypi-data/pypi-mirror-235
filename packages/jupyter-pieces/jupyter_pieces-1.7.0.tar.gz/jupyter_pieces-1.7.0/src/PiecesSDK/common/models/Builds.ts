//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Runtime Common Library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EmbeddedModelSchema,
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    ReleasePackages,
    ReleasePackagesFromJSON,
    ReleasePackagesFromJSONTyped,
    ReleasePackagesToJSON,
} from './';

/**
 * 
 * @export
 * @interface Builds
 */
export interface Builds {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof Builds
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {string}
     * @memberof Builds
     */
    item?: string;
    /**
     * 
     * @type {string}
     * @memberof Builds
     */
    number?: string;
    /**
     * 
     * @type {string}
     * @memberof Builds
     */
    tag?: string;
    /**
     * 
     * @type {string}
     * @memberof Builds
     */
    channel?: string;
    /**
     * 
     * @type {string}
     * @memberof Builds
     */
    changelog?: string;
    /**
     * 
     * @type {ReleasePackages}
     * @memberof Builds
     */
    packages?: ReleasePackages;
}

export function BuildsFromJSON(json: any): Builds {
    return BuildsFromJSONTyped(json, false);
}

export function BuildsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Builds {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'schema': !exists(json, 'schema') ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'item': !exists(json, 'item') ? undefined : json['item'],
        'number': !exists(json, 'number') ? undefined : json['number'],
        'tag': !exists(json, 'tag') ? undefined : json['tag'],
        'channel': !exists(json, 'channel') ? undefined : json['channel'],
        'changelog': !exists(json, 'changelog') ? undefined : json['changelog'],
        'packages': !exists(json, 'packages') ? undefined : ReleasePackagesFromJSON(json['packages']),
    };
}

export function BuildsToJSON(value?: Builds | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'schema': EmbeddedModelSchemaToJSON(value.schema),
        'item': value.item,
        'number': value.number,
        'tag': value.tag,
        'channel': value.channel,
        'changelog': value.changelog,
        'packages': ReleasePackagesToJSON(value.packages),
    };
}


