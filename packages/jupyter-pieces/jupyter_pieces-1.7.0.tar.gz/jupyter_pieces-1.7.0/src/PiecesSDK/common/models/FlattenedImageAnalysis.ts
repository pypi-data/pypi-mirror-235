//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Runtime Common Library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EmbeddedModelSchema,
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    FlattenedOCRAnalysis,
    FlattenedOCRAnalysisFromJSON,
    FlattenedOCRAnalysisFromJSONTyped,
    FlattenedOCRAnalysisToJSON,
} from './';

/**
 * 
 * @export
 * @interface FlattenedImageAnalysis
 */
export interface FlattenedImageAnalysis {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof FlattenedImageAnalysis
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {string}
     * @memberof FlattenedImageAnalysis
     */
    id: string;
    /**
     * 
     * @type {FlattenedOCRAnalysis}
     * @memberof FlattenedImageAnalysis
     */
    ocr?: FlattenedOCRAnalysis;
    /**
     * this is a reference to our (parent)analysis
     * @type {string}
     * @memberof FlattenedImageAnalysis
     */
    analysis: string;
}

export function FlattenedImageAnalysisFromJSON(json: any): FlattenedImageAnalysis {
    return FlattenedImageAnalysisFromJSONTyped(json, false);
}

export function FlattenedImageAnalysisFromJSONTyped(json: any, ignoreDiscriminator: boolean): FlattenedImageAnalysis {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'schema': !exists(json, 'schema') ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'id': json['id'],
        'ocr': !exists(json, 'ocr') ? undefined : FlattenedOCRAnalysisFromJSON(json['ocr']),
        'analysis': json['analysis'],
    };
}

export function FlattenedImageAnalysisToJSON(value?: FlattenedImageAnalysis | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'schema': EmbeddedModelSchemaToJSON(value.schema),
        'id': value.id,
        'ocr': FlattenedOCRAnalysisToJSON(value.ocr),
        'analysis': value.analysis,
    };
}


