//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Runtime Common Library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * All of the locations that you want to pipe this segment data.
 * @export
 * @interface AnalyticsTrackedSegmentEventIntegrations
 */
export interface AnalyticsTrackedSegmentEventIntegrations {
    /**
     * In this case, we’re specifying that we want this identify to only go to Mixpanel and Kissmetrics. 'All': false says that no destination should be enabled unless otherwise specified. 'Mixpanel': true turns on Mixpanel, etc.
     * 
     * Destination flags are case sensitive and match the destination’s name in the docs (i.e. “AdLearn Open Platform”, “awe.sm”, “MailChimp”, etc.).
     * @type {boolean}
     * @memberof AnalyticsTrackedSegmentEventIntegrations
     */
    all: boolean;
    /**
     * In this case, we’re specifying that we want this identify to only go to Mixpanel and Kissmetrics. 'All': false says that no destination should be enabled unless otherwise specified. 'Mixpanel': true turns on Mixpanel, etc.
     * 
     * Destination flags are case sensitive and match the destination’s name in the docs (i.e. “AdLearn Open Platform”, “awe.sm”, “MailChimp”, etc.).
     * @type {boolean}
     * @memberof AnalyticsTrackedSegmentEventIntegrations
     */
    mixpanel: boolean;
}

export function AnalyticsTrackedSegmentEventIntegrationsFromJSON(json: any): AnalyticsTrackedSegmentEventIntegrations {
    return AnalyticsTrackedSegmentEventIntegrationsFromJSONTyped(json, false);
}

export function AnalyticsTrackedSegmentEventIntegrationsFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnalyticsTrackedSegmentEventIntegrations {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'all': json['All'],
        'mixpanel': json['Mixpanel'],
    };
}

export function AnalyticsTrackedSegmentEventIntegrationsToJSON(value?: AnalyticsTrackedSegmentEventIntegrations | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'All': value.all,
        'Mixpanel': value.mixpanel,
    };
}


