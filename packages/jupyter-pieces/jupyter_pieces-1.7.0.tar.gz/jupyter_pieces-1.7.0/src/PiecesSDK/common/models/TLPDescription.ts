//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Runtime Common Library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TLPDescriptionFilters,
    TLPDescriptionFiltersFromJSON,
    TLPDescriptionFiltersFromJSONTyped,
    TLPDescriptionFiltersToJSON,
} from './';

/**
 * This object holds description data that is returned from the code description model and set of filters that are used post-process the description.  
 * @export
 * @interface TLPDescription
 */
export interface TLPDescription {
    /**
     * The transformer encoder embedding
     * @type {Array<number>}
     * @memberof TLPDescription
     */
    embedding?: Array<number>;
    /**
     * 
     * @type {string}
     * @memberof TLPDescription
     */
    value: string;
    /**
     * Confidence is a value between 0 and 1
     * @type {number}
     * @memberof TLPDescription
     */
    confidence?: number;
    /**
     * 
     * @type {TLPDescriptionFilters}
     * @memberof TLPDescription
     */
    filters?: TLPDescriptionFilters;
}

export function TLPDescriptionFromJSON(json: any): TLPDescription {
    return TLPDescriptionFromJSONTyped(json, false);
}

export function TLPDescriptionFromJSONTyped(json: any, ignoreDiscriminator: boolean): TLPDescription {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'embedding': !exists(json, 'embedding') ? undefined : json['embedding'],
        'value': json['value'],
        'confidence': !exists(json, 'confidence') ? undefined : json['confidence'],
        'filters': !exists(json, 'filters') ? undefined : TLPDescriptionFiltersFromJSON(json['filters']),
    };
}

export function TLPDescriptionToJSON(value?: TLPDescription | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'embedding': value.embedding,
        'value': value.value,
        'confidence': value.confidence,
        'filters': TLPDescriptionFiltersToJSON(value.filters),
    };
}


