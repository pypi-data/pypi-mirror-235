//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Runtime Common Library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ApigeeAttribute,
    ApigeeAttributeFromJSON,
    ApigeeAttributeFromJSONTyped,
    ApigeeAttributeToJSON,
    ApigeeCredential,
    ApigeeCredentialFromJSON,
    ApigeeCredentialFromJSONTyped,
    ApigeeCredentialToJSON,
    ApigeeProductRef,
    ApigeeProductRefFromJSON,
    ApigeeProductRefFromJSONTyped,
    ApigeeProductRefToJSON,
} from './';

/**
 * 
 * @export
 * @interface ApigeeApp
 */
export interface ApigeeApp {
    /**
     * List of API products associated with the app.
     * @type {Array<ApigeeProductRef>}
     * @memberof ApigeeApp
     */
    apiProducts?: Array<ApigeeProductRef>;
    /**
     * ID of the app.
     * @type {string}
     * @memberof ApigeeApp
     */
    appId?: string;
    /**
     * List of attributes.
     * @type {Array<ApigeeAttribute>}
     * @memberof ApigeeApp
     */
    attributes?: Array<ApigeeAttribute>;
    /**
     * Callback URL used by OAuth 2.0 authorization servers to communicate authorization codes back to apps.
     * @type {string}
     * @memberof ApigeeApp
     */
    callbackUrl?: string;
    /**
     * Name of the company that owns the app.
     * @type {string}
     * @memberof ApigeeApp
     */
    companyName?: string;
    /**
     * Output only. Unix time when the app was created.
     * @type {string}
     * @memberof ApigeeApp
     */
    readonly createdAt?: string;
    /**
     * Output only. Set of credentials for the app. Credentials are API key/secret pairs associated with API products.
     * @type {Array<ApigeeCredential>}
     * @memberof ApigeeApp
     */
    readonly credentials?: Array<ApigeeCredential>;
    /**
     * ID of the developer.
     * @type {string}
     * @memberof ApigeeApp
     */
    developerId?: string;
    /**
     * Duration, in milliseconds, of the consumer key that will be generated for the app. The default value, -1, indicates an infinite validity period. Once set, the expiration can't be updated. json key: keyExpiresIn
     * @type {string}
     * @memberof ApigeeApp
     */
    keyExpiresIn?: string;
    /**
     * Output only. Last modified time as milliseconds since epoch.
     * @type {string}
     * @memberof ApigeeApp
     */
    readonly lastModifiedAt?: string;
    /**
     * Name of the app.
     * @type {string}
     * @memberof ApigeeApp
     */
    name?: string;
    /**
     * Scopes to apply to the app. The specified scope names must already exist on the API product that you associate with the app.
     * @type {Array<string>}
     * @memberof ApigeeApp
     */
    scopes?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof ApigeeApp
     */
    status?: string;
}

export function ApigeeAppFromJSON(json: any): ApigeeApp {
    return ApigeeAppFromJSONTyped(json, false);
}

export function ApigeeAppFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApigeeApp {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'apiProducts': !exists(json, 'apiProducts') ? undefined : ((json['apiProducts'] as Array<any>).map(ApigeeProductRefFromJSON)),
        'appId': !exists(json, 'appId') ? undefined : json['appId'],
        'attributes': !exists(json, 'attributes') ? undefined : ((json['attributes'] as Array<any>).map(ApigeeAttributeFromJSON)),
        'callbackUrl': !exists(json, 'callbackUrl') ? undefined : json['callbackUrl'],
        'companyName': !exists(json, 'companyName') ? undefined : json['companyName'],
        'createdAt': !exists(json, 'createdAt') ? undefined : json['createdAt'],
        'credentials': !exists(json, 'credentials') ? undefined : ((json['credentials'] as Array<any>).map(ApigeeCredentialFromJSON)),
        'developerId': !exists(json, 'developerId') ? undefined : json['developerId'],
        'keyExpiresIn': !exists(json, 'keyExpiresIn') ? undefined : json['keyExpiresIn'],
        'lastModifiedAt': !exists(json, 'lastModifiedAt') ? undefined : json['lastModifiedAt'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'scopes': !exists(json, 'scopes') ? undefined : json['scopes'],
        'status': !exists(json, 'status') ? undefined : json['status'],
    };
}

export function ApigeeAppToJSON(value?: ApigeeApp | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'apiProducts': value.apiProducts === undefined ? undefined : ((value.apiProducts as Array<any>).map(ApigeeProductRefToJSON)),
        'appId': value.appId,
        'attributes': value.attributes === undefined ? undefined : ((value.attributes as Array<any>).map(ApigeeAttributeToJSON)),
        'callbackUrl': value.callbackUrl,
        'companyName': value.companyName,
        'developerId': value.developerId,
        'keyExpiresIn': value.keyExpiresIn,
        'name': value.name,
        'scopes': value.scopes,
        'status': value.status,
    };
}


