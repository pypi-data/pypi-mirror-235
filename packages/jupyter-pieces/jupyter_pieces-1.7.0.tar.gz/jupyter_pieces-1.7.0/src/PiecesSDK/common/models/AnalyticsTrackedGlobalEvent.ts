//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Runtime Common Library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AnalyticsIdentifiers,
    AnalyticsIdentifiersFromJSON,
    AnalyticsIdentifiersFromJSONTyped,
    AnalyticsIdentifiersToJSON,
    AnalyticsTrackedApplication,
    AnalyticsTrackedApplicationFromJSON,
    AnalyticsTrackedApplicationFromJSONTyped,
    AnalyticsTrackedApplicationToJSON,
    AnalyticsTrackedOS,
    AnalyticsTrackedOSFromJSON,
    AnalyticsTrackedOSFromJSONTyped,
    AnalyticsTrackedOSToJSON,
    TrackedEvent,
    TrackedEventFromJSON,
    TrackedEventFromJSONTyped,
    TrackedEventToJSON,
} from './';

/**
 * A common model for both the segment track endpoint and the analytics. 
 * @export
 * @interface AnalyticsTrackedGlobalEvent
 */
export interface AnalyticsTrackedGlobalEvent {
    /**
     * 
     * @type {AnalyticsTrackedOS}
     * @memberof AnalyticsTrackedGlobalEvent
     */
    os?: AnalyticsTrackedOS;
    /**
     * 
     * @type {AnalyticsTrackedApplication}
     * @memberof AnalyticsTrackedGlobalEvent
     */
    application?: AnalyticsTrackedApplication;
    /**
     * 
     * @type {AnalyticsIdentifiers}
     * @memberof AnalyticsTrackedGlobalEvent
     */
    identifiers?: AnalyticsIdentifiers;
    /**
     * 
     * @type {TrackedEvent}
     * @memberof AnalyticsTrackedGlobalEvent
     */
    event: TrackedEvent;
    /**
     * 
     * @type {string}
     * @memberof AnalyticsTrackedGlobalEvent
     */
    timestamp: string;
}

export function AnalyticsTrackedGlobalEventFromJSON(json: any): AnalyticsTrackedGlobalEvent {
    return AnalyticsTrackedGlobalEventFromJSONTyped(json, false);
}

export function AnalyticsTrackedGlobalEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnalyticsTrackedGlobalEvent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'os': !exists(json, 'os') ? undefined : AnalyticsTrackedOSFromJSON(json['os']),
        'application': !exists(json, 'application') ? undefined : AnalyticsTrackedApplicationFromJSON(json['application']),
        'identifiers': !exists(json, 'identifiers') ? undefined : AnalyticsIdentifiersFromJSON(json['identifiers']),
        'event': TrackedEventFromJSON(json['event']),
        'timestamp': json['timestamp'],
    };
}

export function AnalyticsTrackedGlobalEventToJSON(value?: AnalyticsTrackedGlobalEvent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'os': AnalyticsTrackedOSToJSON(value.os),
        'application': AnalyticsTrackedApplicationToJSON(value.application),
        'identifiers': AnalyticsIdentifiersToJSON(value.identifiers),
        'event': TrackedEventToJSON(value.event),
        'timestamp': value.timestamp,
    };
}


