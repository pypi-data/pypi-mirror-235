//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Runtime Common Library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ApigeeAttribute,
    ApigeeAttributeFromJSON,
    ApigeeAttributeFromJSONTyped,
    ApigeeAttributeToJSON,
    ApigeeProductRef,
    ApigeeProductRefFromJSON,
    ApigeeProductRefFromJSONTyped,
    ApigeeProductRefToJSON,
} from './';

/**
 * 
 * @export
 * @interface ApigeeCredential
 */
export interface ApigeeCredential {
    /**
     * List of API products this credential can be used for.
     * @type {Array<ApigeeProductRef>}
     * @memberof ApigeeCredential
     */
    apiProducts?: Array<ApigeeProductRef>;
    /**
     * List of attributes associated with this credential.
     * @type {Array<ApigeeAttribute>}
     * @memberof ApigeeCredential
     */
    attributes?: Array<ApigeeAttribute>;
    /**
     * Consumer key.
     * @type {string}
     * @memberof ApigeeCredential
     */
    consumerKey?: string;
    /**
     * Secret key.
     * @type {string}
     * @memberof ApigeeCredential
     */
    consumerSecret?: string;
    /**
     * Time the credential will expire in milliseconds since epoch.
     * @type {string}
     * @memberof ApigeeCredential
     */
    expiresAt?: string;
    /**
     * Time the credential was issued in milliseconds since epoch.
     * @type {string}
     * @memberof ApigeeCredential
     */
    issuedAt?: string;
    /**
     * List of scopes to apply to the app. Specified scopes must already exist on the API product that you associate with the app.
     * @type {Array<string>}
     * @memberof ApigeeCredential
     */
    scopes?: Array<string>;
    /**
     * Status of the credential. Valid values include `approved` or `revoked`.
     * @type {string}
     * @memberof ApigeeCredential
     */
    status?: string;
}

export function ApigeeCredentialFromJSON(json: any): ApigeeCredential {
    return ApigeeCredentialFromJSONTyped(json, false);
}

export function ApigeeCredentialFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApigeeCredential {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'apiProducts': !exists(json, 'apiProducts') ? undefined : ((json['apiProducts'] as Array<any>).map(ApigeeProductRefFromJSON)),
        'attributes': !exists(json, 'attributes') ? undefined : ((json['attributes'] as Array<any>).map(ApigeeAttributeFromJSON)),
        'consumerKey': !exists(json, 'consumerKey') ? undefined : json['consumerKey'],
        'consumerSecret': !exists(json, 'consumerSecret') ? undefined : json['consumerSecret'],
        'expiresAt': !exists(json, 'expiresAt') ? undefined : json['expiresAt'],
        'issuedAt': !exists(json, 'issuedAt') ? undefined : json['issuedAt'],
        'scopes': !exists(json, 'scopes') ? undefined : json['scopes'],
        'status': !exists(json, 'status') ? undefined : json['status'],
    };
}

export function ApigeeCredentialToJSON(value?: ApigeeCredential | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'apiProducts': value.apiProducts === undefined ? undefined : ((value.apiProducts as Array<any>).map(ApigeeProductRefToJSON)),
        'attributes': value.attributes === undefined ? undefined : ((value.attributes as Array<any>).map(ApigeeAttributeToJSON)),
        'consumerKey': value.consumerKey,
        'consumerSecret': value.consumerSecret,
        'expiresAt': value.expiresAt,
        'issuedAt': value.issuedAt,
        'scopes': value.scopes,
        'status': value.status,
    };
}


