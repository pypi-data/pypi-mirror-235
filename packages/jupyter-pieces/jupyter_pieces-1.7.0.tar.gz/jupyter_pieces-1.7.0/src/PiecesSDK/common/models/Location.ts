//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Runtime Common Library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EmbeddedModelSchema,
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    FlattenedAssets,
    FlattenedAssetsFromJSON,
    FlattenedAssetsFromJSONTyped,
    FlattenedAssetsToJSON,
    GroupedTimestamp,
    GroupedTimestampFromJSON,
    GroupedTimestampFromJSONTyped,
    GroupedTimestampToJSON,
    LocationTypeEnum,
    LocationTypeEnumFromJSON,
    LocationTypeEnumFromJSONTyped,
    LocationTypeEnumToJSON,
    PlatformEnum,
    PlatformEnumFromJSON,
    PlatformEnumFromJSONTyped,
    PlatformEnumToJSON,
} from './';

/**
 * 
 * @export
 * @interface Location
 */
export interface Location {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof Location
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {string}
     * @memberof Location
     */
    id: string;
    /**
     * 
     * @type {LocationTypeEnum}
     * @memberof Location
     */
    type: LocationTypeEnum;
    /**
     * 
     * @type {boolean}
     * @memberof Location
     */
    watch?: boolean;
    /**
     * This is the text of the path.
     * @type {string}
     * @memberof Location
     */
    text: string;
    /**
     * 
     * @type {GroupedTimestamp}
     * @memberof Location
     */
    created: GroupedTimestamp;
    /**
     * 
     * @type {GroupedTimestamp}
     * @memberof Location
     */
    updated: GroupedTimestamp;
    /**
     * 
     * @type {GroupedTimestamp}
     * @memberof Location
     */
    deleted?: GroupedTimestamp;
    /**
     * 
     * @type {FlattenedAssets}
     * @memberof Location
     */
    assets?: FlattenedAssets;
    /**
     * 
     * @type {PlatformEnum}
     * @memberof Location
     */
    platform?: PlatformEnum;
}

export function LocationFromJSON(json: any): Location {
    return LocationFromJSONTyped(json, false);
}

export function LocationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Location {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'schema': !exists(json, 'schema') ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'id': json['id'],
        'type': LocationTypeEnumFromJSON(json['type']),
        'watch': !exists(json, 'watch') ? undefined : json['watch'],
        'text': json['text'],
        'created': GroupedTimestampFromJSON(json['created']),
        'updated': GroupedTimestampFromJSON(json['updated']),
        'deleted': !exists(json, 'deleted') ? undefined : GroupedTimestampFromJSON(json['deleted']),
        'assets': !exists(json, 'assets') ? undefined : FlattenedAssetsFromJSON(json['assets']),
        'platform': !exists(json, 'platform') ? undefined : PlatformEnumFromJSON(json['platform']),
    };
}

export function LocationToJSON(value?: Location | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'schema': EmbeddedModelSchemaToJSON(value.schema),
        'id': value.id,
        'type': LocationTypeEnumToJSON(value.type),
        'watch': value.watch,
        'text': value.text,
        'created': GroupedTimestampToJSON(value.created),
        'updated': GroupedTimestampToJSON(value.updated),
        'deleted': GroupedTimestampToJSON(value.deleted),
        'assets': FlattenedAssetsToJSON(value.assets),
        'platform': PlatformEnumToJSON(value.platform),
    };
}


