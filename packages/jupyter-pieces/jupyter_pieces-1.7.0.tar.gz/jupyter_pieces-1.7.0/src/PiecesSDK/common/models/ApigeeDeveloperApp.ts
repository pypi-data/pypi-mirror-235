//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Runtime Common Library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ApigeeAttribute,
    ApigeeAttributeFromJSON,
    ApigeeAttributeFromJSONTyped,
    ApigeeAttributeToJSON,
    ApigeeCredential,
    ApigeeCredentialFromJSON,
    ApigeeCredentialFromJSONTyped,
    ApigeeCredentialToJSON,
} from './';

/**
 * 
 * @export
 * @interface ApigeeDeveloperApp
 */
export interface ApigeeDeveloperApp {
    /**
     * List of API products associated with the developer app.
     * @type {Array<string>}
     * @memberof ApigeeDeveloperApp
     */
    apiProducts?: Array<string>;
    /**
     * Developer app family.
     * @type {string}
     * @memberof ApigeeDeveloperApp
     */
    appFamily?: string;
    /**
     * ID of the developer app.
     * @type {string}
     * @memberof ApigeeDeveloperApp
     */
    appId?: string;
    /**
     * List of attributes for the developer app.
     * @type {Array<ApigeeAttribute>}
     * @memberof ApigeeDeveloperApp
     */
    attributes?: Array<ApigeeAttribute>;
    /**
     * Callback URL used by OAuth 2.0 authorization servers to communicate authorization codes back to developer apps.
     * @type {string}
     * @memberof ApigeeDeveloperApp
     */
    callbackUrl?: string;
    /**
     * Output only. Time the developer app was created in milliseconds since epoch.
     * @type {string}
     * @memberof ApigeeDeveloperApp
     */
    readonly createdAt?: string;
    /**
     * Output only. Set of credentials for the developer app consisting of the consumer key/secret pairs associated with the API products.
     * @type {Array<ApigeeCredential>}
     * @memberof ApigeeDeveloperApp
     */
    readonly credentials?: Array<ApigeeCredential>;
    /**
     * ID of the developer.
     * @type {string}
     * @memberof ApigeeDeveloperApp
     */
    developerId?: string;
    /**
     * Expiration time, in milliseconds, for the consumer key that is generated for the developer app. If not set or left to the default value of `-1`, the API key never expires. The expiration time can't be updated after it is set.
     * @type {string}
     * @memberof ApigeeDeveloperApp
     */
    keyExpiresIn?: string;
    /**
     * Output only. Time the developer app was modified in milliseconds since epoch.
     * @type {string}
     * @memberof ApigeeDeveloperApp
     */
    readonly lastModifiedAt?: string;
    /**
     * Name of the developer app.
     * @type {string}
     * @memberof ApigeeDeveloperApp
     */
    name?: string;
    /**
     * Scopes to apply to the developer app. The specified scopes must already exist for the API product that you associate with the developer app.
     * @type {Array<string>}
     * @memberof ApigeeDeveloperApp
     */
    scopes?: Array<string>;
    /**
     * Status of the credential. Valid values include `approved` or `revoked`.
     * @type {string}
     * @memberof ApigeeDeveloperApp
     */
    status?: string;
}

export function ApigeeDeveloperAppFromJSON(json: any): ApigeeDeveloperApp {
    return ApigeeDeveloperAppFromJSONTyped(json, false);
}

export function ApigeeDeveloperAppFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApigeeDeveloperApp {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'apiProducts': !exists(json, 'apiProducts') ? undefined : json['apiProducts'],
        'appFamily': !exists(json, 'appFamily') ? undefined : json['appFamily'],
        'appId': !exists(json, 'appId') ? undefined : json['appId'],
        'attributes': !exists(json, 'attributes') ? undefined : ((json['attributes'] as Array<any>).map(ApigeeAttributeFromJSON)),
        'callbackUrl': !exists(json, 'callbackUrl') ? undefined : json['callbackUrl'],
        'createdAt': !exists(json, 'createdAt') ? undefined : json['createdAt'],
        'credentials': !exists(json, 'credentials') ? undefined : ((json['credentials'] as Array<any>).map(ApigeeCredentialFromJSON)),
        'developerId': !exists(json, 'developerId') ? undefined : json['developerId'],
        'keyExpiresIn': !exists(json, 'keyExpiresIn') ? undefined : json['keyExpiresIn'],
        'lastModifiedAt': !exists(json, 'lastModifiedAt') ? undefined : json['lastModifiedAt'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'scopes': !exists(json, 'scopes') ? undefined : json['scopes'],
        'status': !exists(json, 'status') ? undefined : json['status'],
    };
}

export function ApigeeDeveloperAppToJSON(value?: ApigeeDeveloperApp | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'apiProducts': value.apiProducts,
        'appFamily': value.appFamily,
        'appId': value.appId,
        'attributes': value.attributes === undefined ? undefined : ((value.attributes as Array<any>).map(ApigeeAttributeToJSON)),
        'callbackUrl': value.callbackUrl,
        'developerId': value.developerId,
        'keyExpiresIn': value.keyExpiresIn,
        'name': value.name,
        'scopes': value.scopes,
        'status': value.status,
    };
}


