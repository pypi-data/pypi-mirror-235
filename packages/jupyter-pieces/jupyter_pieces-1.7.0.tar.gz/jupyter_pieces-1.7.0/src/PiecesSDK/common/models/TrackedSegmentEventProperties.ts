//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Runtime Common Library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TrackedApplication,
    TrackedApplicationFromJSON,
    TrackedApplicationFromJSONTyped,
    TrackedApplicationToJSON,
    TrackedAssetEvent,
    TrackedAssetEventFromJSON,
    TrackedAssetEventFromJSONTyped,
    TrackedAssetEventToJSON,
    TrackedAssetsEvent,
    TrackedAssetsEventFromJSON,
    TrackedAssetsEventFromJSONTyped,
    TrackedAssetsEventToJSON,
    TrackedFormatEvent,
    TrackedFormatEventFromJSON,
    TrackedFormatEventFromJSONTyped,
    TrackedFormatEventToJSON,
    TrackedInteractionEvent,
    TrackedInteractionEventFromJSON,
    TrackedInteractionEventFromJSONTyped,
    TrackedInteractionEventToJSON,
    TrackedKeyboardEvent,
    TrackedKeyboardEventFromJSON,
    TrackedKeyboardEventFromJSONTyped,
    TrackedKeyboardEventToJSON,
    TrackedSessionEvent,
    TrackedSessionEventFromJSON,
    TrackedSessionEventFromJSONTyped,
    TrackedSessionEventToJSON,
    TrackedUserProfile,
    TrackedUserProfileFromJSON,
    TrackedUserProfileFromJSONTyped,
    TrackedUserProfileToJSON,
} from './';

/**
 * Free-form dictionary of properties of the event, like revenue See the Properties docs for a list of reserved property names.
 * @export
 * @interface TrackedSegmentEventProperties
 */
export interface TrackedSegmentEventProperties {
    /**
     * This is the UUID of the OS, this is the same as the anonmyousID
     * @type {string}
     * @memberof TrackedSegmentEventProperties
     */
    os: string;
    /**
     * 
     * @type {TrackedApplication}
     * @memberof TrackedSegmentEventProperties
     */
    application: TrackedApplication;
    /**
     * 
     * @type {TrackedUserProfile}
     * @memberof TrackedSegmentEventProperties
     */
    user?: TrackedUserProfile;
    /**
     * 
     * @type {TrackedAssetEvent}
     * @memberof TrackedSegmentEventProperties
     */
    asset?: TrackedAssetEvent;
    /**
     * 
     * @type {TrackedFormatEvent}
     * @memberof TrackedSegmentEventProperties
     */
    format?: TrackedFormatEvent;
    /**
     * 
     * @type {TrackedInteractionEvent}
     * @memberof TrackedSegmentEventProperties
     */
    interaction?: TrackedInteractionEvent;
    /**
     * 
     * @type {TrackedKeyboardEvent}
     * @memberof TrackedSegmentEventProperties
     */
    keyboard?: TrackedKeyboardEvent;
    /**
     * 
     * @type {TrackedSessionEvent}
     * @memberof TrackedSegmentEventProperties
     */
    session?: TrackedSessionEvent;
    /**
     * 
     * @type {TrackedAssetsEvent}
     * @memberof TrackedSegmentEventProperties
     */
    assets?: TrackedAssetsEvent;
}

export function TrackedSegmentEventPropertiesFromJSON(json: any): TrackedSegmentEventProperties {
    return TrackedSegmentEventPropertiesFromJSONTyped(json, false);
}

export function TrackedSegmentEventPropertiesFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrackedSegmentEventProperties {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'os': json['os'],
        'application': TrackedApplicationFromJSON(json['application']),
        'user': !exists(json, 'user') ? undefined : TrackedUserProfileFromJSON(json['user']),
        'asset': !exists(json, 'asset') ? undefined : TrackedAssetEventFromJSON(json['asset']),
        'format': !exists(json, 'format') ? undefined : TrackedFormatEventFromJSON(json['format']),
        'interaction': !exists(json, 'interaction') ? undefined : TrackedInteractionEventFromJSON(json['interaction']),
        'keyboard': !exists(json, 'keyboard') ? undefined : TrackedKeyboardEventFromJSON(json['keyboard']),
        'session': !exists(json, 'session') ? undefined : TrackedSessionEventFromJSON(json['session']),
        'assets': !exists(json, 'assets') ? undefined : TrackedAssetsEventFromJSON(json['assets']),
    };
}

export function TrackedSegmentEventPropertiesToJSON(value?: TrackedSegmentEventProperties | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'os': value.os,
        'application': TrackedApplicationToJSON(value.application),
        'user': TrackedUserProfileToJSON(value.user),
        'asset': TrackedAssetEventToJSON(value.asset),
        'format': TrackedFormatEventToJSON(value.format),
        'interaction': TrackedInteractionEventToJSON(value.interaction),
        'keyboard': TrackedKeyboardEventToJSON(value.keyboard),
        'session': TrackedSessionEventToJSON(value.session),
        'assets': TrackedAssetsEventToJSON(value.assets),
    };
}


