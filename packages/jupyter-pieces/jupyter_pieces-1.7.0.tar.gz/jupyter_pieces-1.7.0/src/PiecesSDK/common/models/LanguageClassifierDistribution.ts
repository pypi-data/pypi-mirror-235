//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Runtime Common Library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EmbeddedModelSchema,
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
} from './';

/**
 * Probability distribution model for the LanguageClassifierReturnable model.
 * @export
 * @interface LanguageClassifierDistribution
 */
export interface LanguageClassifierDistribution {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof LanguageClassifierDistribution
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    bat?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    c?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    coffee?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    cpp?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    cs?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    css?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    dart?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    erl?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    go?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    hs?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    html?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    java?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    js?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    json?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    lua?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    md?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    matlab?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    m?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    pl?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    php?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    ps1?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    py?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    r?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    rb?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    rs?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    scala?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    sh?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    sql?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    swift?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    tex?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    toml?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    ts?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    yaml?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    xml?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    groovy?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    kt?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    el?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    clj?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    ex?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    sol?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    sv?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    asp?: number;
    /**
     * 
     * @type {number}
     * @memberof LanguageClassifierDistribution
     */
    cfm?: number;
}

export function LanguageClassifierDistributionFromJSON(json: any): LanguageClassifierDistribution {
    return LanguageClassifierDistributionFromJSONTyped(json, false);
}

export function LanguageClassifierDistributionFromJSONTyped(json: any, ignoreDiscriminator: boolean): LanguageClassifierDistribution {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'schema': !exists(json, 'schema') ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'bat': !exists(json, 'bat') ? undefined : json['bat'],
        'c': !exists(json, 'c') ? undefined : json['c'],
        'coffee': !exists(json, 'coffee') ? undefined : json['coffee'],
        'cpp': !exists(json, 'cpp') ? undefined : json['cpp'],
        'cs': !exists(json, 'cs') ? undefined : json['cs'],
        'css': !exists(json, 'css') ? undefined : json['css'],
        'dart': !exists(json, 'dart') ? undefined : json['dart'],
        'erl': !exists(json, 'erl') ? undefined : json['erl'],
        'go': !exists(json, 'go') ? undefined : json['go'],
        'hs': !exists(json, 'hs') ? undefined : json['hs'],
        'html': !exists(json, 'html') ? undefined : json['html'],
        'java': !exists(json, 'java') ? undefined : json['java'],
        'js': !exists(json, 'js') ? undefined : json['js'],
        'json': !exists(json, 'json') ? undefined : json['json'],
        'lua': !exists(json, 'lua') ? undefined : json['lua'],
        'md': !exists(json, 'md') ? undefined : json['md'],
        'matlab': !exists(json, 'matlab') ? undefined : json['matlab'],
        'm': !exists(json, 'm') ? undefined : json['m'],
        'pl': !exists(json, 'pl') ? undefined : json['pl'],
        'php': !exists(json, 'php') ? undefined : json['php'],
        'ps1': !exists(json, 'ps1') ? undefined : json['ps1'],
        'py': !exists(json, 'py') ? undefined : json['py'],
        'r': !exists(json, 'r') ? undefined : json['r'],
        'rb': !exists(json, 'rb') ? undefined : json['rb'],
        'rs': !exists(json, 'rs') ? undefined : json['rs'],
        'scala': !exists(json, 'scala') ? undefined : json['scala'],
        'sh': !exists(json, 'sh') ? undefined : json['sh'],
        'sql': !exists(json, 'sql') ? undefined : json['sql'],
        'swift': !exists(json, 'swift') ? undefined : json['swift'],
        'tex': !exists(json, 'tex') ? undefined : json['tex'],
        'toml': !exists(json, 'toml') ? undefined : json['toml'],
        'ts': !exists(json, 'ts') ? undefined : json['ts'],
        'yaml': !exists(json, 'yaml') ? undefined : json['yaml'],
        'xml': !exists(json, 'xml') ? undefined : json['xml'],
        'groovy': !exists(json, 'groovy') ? undefined : json['groovy'],
        'kt': !exists(json, 'kt') ? undefined : json['kt'],
        'el': !exists(json, 'el') ? undefined : json['el'],
        'clj': !exists(json, 'clj') ? undefined : json['clj'],
        'ex': !exists(json, 'ex') ? undefined : json['ex'],
        'sol': !exists(json, 'sol') ? undefined : json['sol'],
        'sv': !exists(json, 'sv') ? undefined : json['sv'],
        'asp': !exists(json, 'asp') ? undefined : json['asp'],
        'cfm': !exists(json, 'cfm') ? undefined : json['cfm'],
    };
}

export function LanguageClassifierDistributionToJSON(value?: LanguageClassifierDistribution | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'schema': EmbeddedModelSchemaToJSON(value.schema),
        'bat': value.bat,
        'c': value.c,
        'coffee': value.coffee,
        'cpp': value.cpp,
        'cs': value.cs,
        'css': value.css,
        'dart': value.dart,
        'erl': value.erl,
        'go': value.go,
        'hs': value.hs,
        'html': value.html,
        'java': value.java,
        'js': value.js,
        'json': value.json,
        'lua': value.lua,
        'md': value.md,
        'matlab': value.matlab,
        'm': value.m,
        'pl': value.pl,
        'php': value.php,
        'ps1': value.ps1,
        'py': value.py,
        'r': value.r,
        'rb': value.rb,
        'rs': value.rs,
        'scala': value.scala,
        'sh': value.sh,
        'sql': value.sql,
        'swift': value.swift,
        'tex': value.tex,
        'toml': value.toml,
        'ts': value.ts,
        'yaml': value.yaml,
        'xml': value.xml,
        'groovy': value.groovy,
        'kt': value.kt,
        'el': value.el,
        'clj': value.clj,
        'ex': value.ex,
        'sol': value.sol,
        'sv': value.sv,
        'asp': value.asp,
        'cfm': value.cfm,
    };
}


