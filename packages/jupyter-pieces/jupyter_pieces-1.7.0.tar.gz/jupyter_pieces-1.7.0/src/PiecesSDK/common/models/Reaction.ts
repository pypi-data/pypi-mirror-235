//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Runtime Common Library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EmbeddedModelSchema,
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    ReuseReaction,
    ReuseReactionFromJSON,
    ReuseReactionFromJSONTyped,
    ReuseReactionToJSON,
    SeededConnectorCreation,
    SeededConnectorCreationFromJSON,
    SeededConnectorCreationFromJSONTyped,
    SeededConnectorCreationToJSON,
} from './';

/**
 * This will the the Request body of the Request Endpoint.
 * 
 * Reuse will not be required here because we do NOT know if the user will choose to reuse what we have suggested.
 * 
 * save will however be required because this will let us know if we should save the coppied asset that was first sent over or not.
 * 
 * seed is required, because we will want to know 100% sure what the original suggestion was made against.
 * @export
 * @interface Reaction
 */
export interface Reaction {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof Reaction
     */
    schema?: EmbeddedModelSchema;
    /**
     * This will just be a simple boolean here that will say if the use should save the asset or not.
     * @type {boolean}
     * @memberof Reaction
     */
    save: boolean;
    /**
     * 
     * @type {ReuseReaction}
     * @memberof Reaction
     */
    reuse?: ReuseReaction;
    /**
     * 
     * @type {SeededConnectorCreation}
     * @memberof Reaction
     */
    seed: SeededConnectorCreation;
}

export function ReactionFromJSON(json: any): Reaction {
    return ReactionFromJSONTyped(json, false);
}

export function ReactionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Reaction {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'schema': !exists(json, 'schema') ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'save': json['save'],
        'reuse': !exists(json, 'reuse') ? undefined : ReuseReactionFromJSON(json['reuse']),
        'seed': SeededConnectorCreationFromJSON(json['seed']),
    };
}

export function ReactionToJSON(value?: Reaction | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'schema': EmbeddedModelSchemaToJSON(value.schema),
        'save': value.save,
        'reuse': ReuseReactionToJSON(value.reuse),
        'seed': SeededConnectorCreationToJSON(value.seed),
    };
}


