//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Runtime Common Library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Builds,
    BuildsFromJSON,
    BuildsFromJSONTyped,
    BuildsToJSON,
    EmbeddedModelSchema,
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
} from './';

/**
 * 
 * @export
 * @interface LatestBuilds
 */
export interface LatestBuilds {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof LatestBuilds
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {string}
     * @memberof LatestBuilds
     */
    item: string;
    /**
     * 
     * @type {Array<Builds>}
     * @memberof LatestBuilds
     */
    builds?: Array<Builds>;
}

export function LatestBuildsFromJSON(json: any): LatestBuilds {
    return LatestBuildsFromJSONTyped(json, false);
}

export function LatestBuildsFromJSONTyped(json: any, ignoreDiscriminator: boolean): LatestBuilds {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'schema': !exists(json, 'schema') ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'item': json['item'],
        'builds': !exists(json, 'builds') ? undefined : ((json['builds'] as Array<any>).map(BuildsFromJSON)),
    };
}

export function LatestBuildsToJSON(value?: LatestBuilds | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'schema': EmbeddedModelSchemaToJSON(value.schema),
        'item': value.item,
        'builds': value.builds === undefined ? undefined : ((value.builds as Array<any>).map(BuildsToJSON)),
    };
}


