//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Runtime Common Library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ApigeeResponseWrapper
 */
export interface ApigeeResponseWrapper {
    /**
     * ID that can be used to find errors in the log files.
     * @type {string}
     * @memberof ApigeeResponseWrapper
     */
    errorCode?: string;
    /**
     * Description of the operation.
     * @type {string}
     * @memberof ApigeeResponseWrapper
     */
    message?: string;
    /**
     * ID that can be used to find request details in the log files.
     * @type {string}
     * @memberof ApigeeResponseWrapper
     */
    requestId?: string;
    /**
     * Status of the operation.
     * @type {string}
     * @memberof ApigeeResponseWrapper
     */
    status?: string;
}

export function ApigeeResponseWrapperFromJSON(json: any): ApigeeResponseWrapper {
    return ApigeeResponseWrapperFromJSONTyped(json, false);
}

export function ApigeeResponseWrapperFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApigeeResponseWrapper {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'errorCode': !exists(json, 'errorCode') ? undefined : json['errorCode'],
        'message': !exists(json, 'message') ? undefined : json['message'],
        'requestId': !exists(json, 'requestId') ? undefined : json['requestId'],
        'status': !exists(json, 'status') ? undefined : json['status'],
    };
}

export function ApigeeResponseWrapperToJSON(value?: ApigeeResponseWrapper | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'errorCode': value.errorCode,
        'message': value.message,
        'requestId': value.requestId,
        'status': value.status,
    };
}


