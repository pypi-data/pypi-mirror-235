//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Runtime Common Library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AnalyticsTrackedSegmentEventContext,
    AnalyticsTrackedSegmentEventContextFromJSON,
    AnalyticsTrackedSegmentEventContextFromJSONTyped,
    AnalyticsTrackedSegmentEventContextToJSON,
    AnalyticsTrackedSegmentEventIntegrations,
    AnalyticsTrackedSegmentEventIntegrationsFromJSON,
    AnalyticsTrackedSegmentEventIntegrationsFromJSONTyped,
    AnalyticsTrackedSegmentEventIntegrationsToJSON,
    AnalyticsTrackedSegmentEventProperties,
    AnalyticsTrackedSegmentEventPropertiesFromJSON,
    AnalyticsTrackedSegmentEventPropertiesFromJSONTyped,
    AnalyticsTrackedSegmentEventPropertiesToJSON,
} from './';

/**
 * This is a model used to record all things Tracking - specifically NOT Identification
 * @export
 * @interface AnalyticsTrackedSegmentEvent
 */
export interface AnalyticsTrackedSegmentEvent {
    /**
     * optional if userID is set instead. A pseudo-unique substitute for a User ID, for cases when you donâ€™t have an absolutely unique identifier. A userId or an anonymousId is required.
     * See the Identities docs for more details.
     * @type {string}
     * @memberof AnalyticsTrackedSegmentEvent
     */
    anonymousId: string;
    /**
     * 
     * @type {string}
     * @memberof AnalyticsTrackedSegmentEvent
     */
    event: string;
    /**
     * Optional if anonymousID is set instead, Unique identifier for the user in your database. A userId or an anonymousId is required. See the Identities docs for more details.
     * @type {string}
     * @memberof AnalyticsTrackedSegmentEvent
     */
    userId?: string;
    /**
     * 
     * @type {AnalyticsTrackedSegmentEventContext}
     * @memberof AnalyticsTrackedSegmentEvent
     */
    context: AnalyticsTrackedSegmentEventContext;
    /**
     * 
     * @type {AnalyticsTrackedSegmentEventIntegrations}
     * @memberof AnalyticsTrackedSegmentEvent
     */
    integrations: AnalyticsTrackedSegmentEventIntegrations;
    /**
     * 
     * @type {AnalyticsTrackedSegmentEventProperties}
     * @memberof AnalyticsTrackedSegmentEvent
     */
    properties: AnalyticsTrackedSegmentEventProperties;
    /**
     * This is an optional timestamp of when this event occurred.
     * @type {string}
     * @memberof AnalyticsTrackedSegmentEvent
     */
    timestamp?: string;
}

export function AnalyticsTrackedSegmentEventFromJSON(json: any): AnalyticsTrackedSegmentEvent {
    return AnalyticsTrackedSegmentEventFromJSONTyped(json, false);
}

export function AnalyticsTrackedSegmentEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnalyticsTrackedSegmentEvent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'anonymousId': json['anonymousId'],
        'event': json['event'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'context': AnalyticsTrackedSegmentEventContextFromJSON(json['context']),
        'integrations': AnalyticsTrackedSegmentEventIntegrationsFromJSON(json['integrations']),
        'properties': AnalyticsTrackedSegmentEventPropertiesFromJSON(json['properties']),
        'timestamp': !exists(json, 'timestamp') ? undefined : json['timestamp'],
    };
}

export function AnalyticsTrackedSegmentEventToJSON(value?: AnalyticsTrackedSegmentEvent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'anonymousId': value.anonymousId,
        'event': value.event,
        'userId': value.userId,
        'context': AnalyticsTrackedSegmentEventContextToJSON(value.context),
        'integrations': AnalyticsTrackedSegmentEventIntegrationsToJSON(value.integrations),
        'properties': AnalyticsTrackedSegmentEventPropertiesToJSON(value.properties),
        'timestamp': value.timestamp,
    };
}


