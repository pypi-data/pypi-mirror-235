//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Runtime Common Library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EmbeddedModelSchema,
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    TLPCodeSnippetTagifyNamedColor,
    TLPCodeSnippetTagifyNamedColorFromJSON,
    TLPCodeSnippetTagifyNamedColorFromJSONTyped,
    TLPCodeSnippetTagifyNamedColorToJSON,
} from './';

/**
 * 
 * @export
 * @interface TLPCodeSnippetTagifyColor
 */
export interface TLPCodeSnippetTagifyColor {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof TLPCodeSnippetTagifyColor
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {string}
     * @memberof TLPCodeSnippetTagifyColor
     */
    hex: string;
    /**
     * 
     * @type {Array<TLPCodeSnippetTagifyNamedColor>}
     * @memberof TLPCodeSnippetTagifyColor
     */
    tags: Array<TLPCodeSnippetTagifyNamedColor>;
}

export function TLPCodeSnippetTagifyColorFromJSON(json: any): TLPCodeSnippetTagifyColor {
    return TLPCodeSnippetTagifyColorFromJSONTyped(json, false);
}

export function TLPCodeSnippetTagifyColorFromJSONTyped(json: any, ignoreDiscriminator: boolean): TLPCodeSnippetTagifyColor {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'schema': !exists(json, 'schema') ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'hex': json['hex'],
        'tags': ((json['tags'] as Array<any>).map(TLPCodeSnippetTagifyNamedColorFromJSON)),
    };
}

export function TLPCodeSnippetTagifyColorToJSON(value?: TLPCodeSnippetTagifyColor | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'schema': EmbeddedModelSchemaToJSON(value.schema),
        'hex': value.hex,
        'tags': ((value.tags as Array<any>).map(TLPCodeSnippetTagifyNamedColorToJSON)),
    };
}


