//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Runtime Common Library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EmbeddedModelSchema,
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    SeededTrackedInteractionEventIdentifierDescriptionPairs,
    SeededTrackedInteractionEventIdentifierDescriptionPairsFromJSON,
    SeededTrackedInteractionEventIdentifierDescriptionPairsFromJSONTyped,
    SeededTrackedInteractionEventIdentifierDescriptionPairsToJSON,
} from './';

/**
 * This is a model that will hold relavent information in relation to an interaction(ONLY CLICK/TAP) analytics event(usage). If you want to register an event that relates to an interaction with the key then register a Keyboard Event.
 * @export
 * @interface SeededTrackedInteractionEvent
 */
export interface SeededTrackedInteractionEvent {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof SeededTrackedInteractionEvent
     */
    schema?: EmbeddedModelSchema;
    /**
     * These need structure
     * @type {string}
     * @memberof SeededTrackedInteractionEvent
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof SeededTrackedInteractionEvent
     */
    element?: string;
    /**
     * 
     * @type {SeededTrackedInteractionEventIdentifierDescriptionPairs}
     * @memberof SeededTrackedInteractionEvent
     */
    identifierDescriptionPair?: SeededTrackedInteractionEventIdentifierDescriptionPairs;
}

export function SeededTrackedInteractionEventFromJSON(json: any): SeededTrackedInteractionEvent {
    return SeededTrackedInteractionEventFromJSONTyped(json, false);
}

export function SeededTrackedInteractionEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): SeededTrackedInteractionEvent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'schema': !exists(json, 'schema') ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'description': json['description'],
        'element': !exists(json, 'element') ? undefined : json['element'],
        'identifierDescriptionPair': !exists(json, 'identifier_description_pair') ? undefined : SeededTrackedInteractionEventIdentifierDescriptionPairsFromJSON(json['identifier_description_pair']),
    };
}

export function SeededTrackedInteractionEventToJSON(value?: SeededTrackedInteractionEvent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'schema': EmbeddedModelSchemaToJSON(value.schema),
        'description': value.description,
        'element': value.element,
        'identifier_description_pair': SeededTrackedInteractionEventIdentifierDescriptionPairsToJSON(value.identifierDescriptionPair),
    };
}


