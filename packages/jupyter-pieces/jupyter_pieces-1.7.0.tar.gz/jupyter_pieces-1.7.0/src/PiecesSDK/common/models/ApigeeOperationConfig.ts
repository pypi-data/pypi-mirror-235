//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Runtime Common Library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ApigeeAttribute,
    ApigeeAttributeFromJSON,
    ApigeeAttributeFromJSONTyped,
    ApigeeAttributeToJSON,
    ApigeeOperation,
    ApigeeOperationFromJSON,
    ApigeeOperationFromJSONTyped,
    ApigeeOperationToJSON,
    ApigeeQuota,
    ApigeeQuotaFromJSON,
    ApigeeQuotaFromJSONTyped,
    ApigeeQuotaToJSON,
} from './';

/**
 * Binds the resources in an API proxy or remote service with the allowed REST methods and associated quota enforcement.
 * @export
 * @interface ApigeeOperationConfig
 */
export interface ApigeeOperationConfig {
    /**
     * Required. Name of the API proxy or remote service with which the resources, methods, and quota are associated.
     * @type {string}
     * @memberof ApigeeOperationConfig
     */
    apiSource?: string;
    /**
     * Custom attributes associated with the operation.
     * @type {Array<ApigeeAttribute>}
     * @memberof ApigeeOperationConfig
     */
    attributes?: Array<ApigeeAttribute>;
    /**
     * List of resource/method pairs for the API proxy or remote service to which quota will applied. **Note**: Currently, you can specify only a single resource/method pair. The call will fail if more than one resource/method pair is provided.
     * @type {Array<ApigeeOperation>}
     * @memberof ApigeeOperationConfig
     */
    operations?: Array<ApigeeOperation>;
    /**
     * 
     * @type {ApigeeQuota}
     * @memberof ApigeeOperationConfig
     */
    quota?: ApigeeQuota;
}

export function ApigeeOperationConfigFromJSON(json: any): ApigeeOperationConfig {
    return ApigeeOperationConfigFromJSONTyped(json, false);
}

export function ApigeeOperationConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApigeeOperationConfig {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'apiSource': !exists(json, 'apiSource') ? undefined : json['apiSource'],
        'attributes': !exists(json, 'attributes') ? undefined : ((json['attributes'] as Array<any>).map(ApigeeAttributeFromJSON)),
        'operations': !exists(json, 'operations') ? undefined : ((json['operations'] as Array<any>).map(ApigeeOperationFromJSON)),
        'quota': !exists(json, 'quota') ? undefined : ApigeeQuotaFromJSON(json['quota']),
    };
}

export function ApigeeOperationConfigToJSON(value?: ApigeeOperationConfig | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'apiSource': value.apiSource,
        'attributes': value.attributes === undefined ? undefined : ((value.attributes as Array<any>).map(ApigeeAttributeToJSON)),
        'operations': value.operations === undefined ? undefined : ((value.operations as Array<any>).map(ApigeeOperationToJSON)),
        'quota': ApigeeQuotaToJSON(value.quota),
    };
}


