//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Runtime Common Library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EmbeddedModelSchema,
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    LocationTypeEnum,
    LocationTypeEnumFromJSON,
    LocationTypeEnumFromJSONTyped,
    LocationTypeEnumToJSON,
    PlatformEnum,
    PlatformEnumFromJSON,
    PlatformEnumFromJSONTyped,
    PlatformEnumToJSON,
} from './';

/**
 * 
 * @export
 * @interface SeededLocation
 */
export interface SeededLocation {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof SeededLocation
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {LocationTypeEnum}
     * @memberof SeededLocation
     */
    type: LocationTypeEnum;
    /**
     * 
     * @type {boolean}
     * @memberof SeededLocation
     */
    watch?: boolean;
    /**
     * 
     * @type {string}
     * @memberof SeededLocation
     */
    text: string;
    /**
     * You may associate a SeededLocation with an asset
     * @type {string}
     * @memberof SeededLocation
     */
    asset?: string;
    /**
     * 
     * @type {PlatformEnum}
     * @memberof SeededLocation
     */
    platform?: PlatformEnum;
}

export function SeededLocationFromJSON(json: any): SeededLocation {
    return SeededLocationFromJSONTyped(json, false);
}

export function SeededLocationFromJSONTyped(json: any, ignoreDiscriminator: boolean): SeededLocation {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'schema': !exists(json, 'schema') ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'type': LocationTypeEnumFromJSON(json['type']),
        'watch': !exists(json, 'watch') ? undefined : json['watch'],
        'text': json['text'],
        'asset': !exists(json, 'asset') ? undefined : json['asset'],
        'platform': !exists(json, 'platform') ? undefined : PlatformEnumFromJSON(json['platform']),
    };
}

export function SeededLocationToJSON(value?: SeededLocation | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'schema': EmbeddedModelSchemaToJSON(value.schema),
        'type': LocationTypeEnumToJSON(value.type),
        'watch': value.watch,
        'text': value.text,
        'asset': value.asset,
        'platform': PlatformEnumToJSON(value.platform),
    };
}


