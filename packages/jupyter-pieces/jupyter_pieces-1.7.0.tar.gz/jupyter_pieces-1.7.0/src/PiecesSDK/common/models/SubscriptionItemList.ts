//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Runtime Common Library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    StripeSubscriptionItem,
    StripeSubscriptionItemFromJSON,
    StripeSubscriptionItemFromJSONTyped,
    StripeSubscriptionItemToJSON,
} from './';

/**
 * List of subscription items, each with an attached price.
 * @export
 * @interface SubscriptionItemList
 */
export interface SubscriptionItemList {
    /**
     * Details about each object.
     * @type {Array<StripeSubscriptionItem>}
     * @memberof SubscriptionItemList
     */
    data: Array<StripeSubscriptionItem>;
    /**
     * True if this list has another page of items after this one that can be fetched.
     * @type {boolean}
     * @memberof SubscriptionItemList
     */
    hasMore: boolean;
    /**
     * String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
     * @type {string}
     * @memberof SubscriptionItemList
     */
    object: SubscriptionItemListObjectEnum;
    /**
     * The URL where this list can be accessed.
     * @type {string}
     * @memberof SubscriptionItemList
     */
    url: string;
}

/**
* @export
* @enum {string}
*/
export enum SubscriptionItemListObjectEnum {
    List = 'list'
}

export function SubscriptionItemListFromJSON(json: any): SubscriptionItemList {
    return SubscriptionItemListFromJSONTyped(json, false);
}

export function SubscriptionItemListFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubscriptionItemList {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'data': ((json['data'] as Array<any>).map(StripeSubscriptionItemFromJSON)),
        'hasMore': json['has_more'],
        'object': json['object'],
        'url': json['url'],
    };
}

export function SubscriptionItemListToJSON(value?: SubscriptionItemList | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'data': ((value.data as Array<any>).map(StripeSubscriptionItemToJSON)),
        'has_more': value.hasMore,
        'object': value.object,
        'url': value.url,
    };
}


