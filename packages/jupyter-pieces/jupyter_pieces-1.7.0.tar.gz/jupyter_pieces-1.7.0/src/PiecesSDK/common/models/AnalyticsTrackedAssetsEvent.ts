//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Runtime Common Library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AnalyticsTrackedAssetsEventIdentifierDescriptionPairs,
    AnalyticsTrackedAssetsEventIdentifierDescriptionPairsFromJSON,
    AnalyticsTrackedAssetsEventIdentifierDescriptionPairsFromJSONTyped,
    AnalyticsTrackedAssetsEventIdentifierDescriptionPairsToJSON,
    AnalyticsTrackedAssetsEventMetadata,
    AnalyticsTrackedAssetsEventMetadataFromJSON,
    AnalyticsTrackedAssetsEventMetadataFromJSONTyped,
    AnalyticsTrackedAssetsEventMetadataToJSON,
} from './';

/**
 * An event model that can occur at the assets level i.e. search 
 * @export
 * @interface AnalyticsTrackedAssetsEvent
 */
export interface AnalyticsTrackedAssetsEvent {
    /**
     * 
     * @type {AnalyticsTrackedAssetsEventIdentifierDescriptionPairs}
     * @memberof AnalyticsTrackedAssetsEvent
     */
    identifierDescriptionPair: AnalyticsTrackedAssetsEventIdentifierDescriptionPairs;
    /**
     * 
     * @type {AnalyticsTrackedAssetsEventMetadata}
     * @memberof AnalyticsTrackedAssetsEvent
     */
    metadata?: AnalyticsTrackedAssetsEventMetadata;
}

export function AnalyticsTrackedAssetsEventFromJSON(json: any): AnalyticsTrackedAssetsEvent {
    return AnalyticsTrackedAssetsEventFromJSONTyped(json, false);
}

export function AnalyticsTrackedAssetsEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnalyticsTrackedAssetsEvent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'identifierDescriptionPair': AnalyticsTrackedAssetsEventIdentifierDescriptionPairsFromJSON(json['identifier_description_pair']),
        'metadata': !exists(json, 'metadata') ? undefined : AnalyticsTrackedAssetsEventMetadataFromJSON(json['metadata']),
    };
}

export function AnalyticsTrackedAssetsEventToJSON(value?: AnalyticsTrackedAssetsEvent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'identifier_description_pair': AnalyticsTrackedAssetsEventIdentifierDescriptionPairsToJSON(value.identifierDescriptionPair),
        'metadata': AnalyticsTrackedAssetsEventMetadataToJSON(value.metadata),
    };
}


