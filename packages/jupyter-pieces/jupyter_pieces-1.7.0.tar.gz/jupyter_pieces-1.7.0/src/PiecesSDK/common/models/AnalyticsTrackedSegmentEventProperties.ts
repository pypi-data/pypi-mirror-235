//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Runtime Common Library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AnalyticsTrackedApplication,
    AnalyticsTrackedApplicationFromJSON,
    AnalyticsTrackedApplicationFromJSONTyped,
    AnalyticsTrackedApplicationToJSON,
    AnalyticsTrackedAssetEvent,
    AnalyticsTrackedAssetEventFromJSON,
    AnalyticsTrackedAssetEventFromJSONTyped,
    AnalyticsTrackedAssetEventToJSON,
    AnalyticsTrackedAssetsEvent,
    AnalyticsTrackedAssetsEventFromJSON,
    AnalyticsTrackedAssetsEventFromJSONTyped,
    AnalyticsTrackedAssetsEventToJSON,
    AnalyticsTrackedFormatEvent,
    AnalyticsTrackedFormatEventFromJSON,
    AnalyticsTrackedFormatEventFromJSONTyped,
    AnalyticsTrackedFormatEventToJSON,
    AnalyticsTrackedInteractionEvent,
    AnalyticsTrackedInteractionEventFromJSON,
    AnalyticsTrackedInteractionEventFromJSONTyped,
    AnalyticsTrackedInteractionEventToJSON,
    AnalyticsTrackedKeyboardEvent,
    AnalyticsTrackedKeyboardEventFromJSON,
    AnalyticsTrackedKeyboardEventFromJSONTyped,
    AnalyticsTrackedKeyboardEventToJSON,
    AnalyticsTrackedSessionEvent,
    AnalyticsTrackedSessionEventFromJSON,
    AnalyticsTrackedSessionEventFromJSONTyped,
    AnalyticsTrackedSessionEventToJSON,
    AnalyticsTrackedUserProfile,
    AnalyticsTrackedUserProfileFromJSON,
    AnalyticsTrackedUserProfileFromJSONTyped,
    AnalyticsTrackedUserProfileToJSON,
} from './';

/**
 * Free-form dictionary of properties of the event, like revenue See the Properties docs for a list of reserved property names.
 * @export
 * @interface AnalyticsTrackedSegmentEventProperties
 */
export interface AnalyticsTrackedSegmentEventProperties {
    /**
     * This is the UUID of the OS, this is the same as the anonmyousID
     * @type {string}
     * @memberof AnalyticsTrackedSegmentEventProperties
     */
    os: string;
    /**
     * 
     * @type {AnalyticsTrackedApplication}
     * @memberof AnalyticsTrackedSegmentEventProperties
     */
    application: AnalyticsTrackedApplication;
    /**
     * 
     * @type {AnalyticsTrackedUserProfile}
     * @memberof AnalyticsTrackedSegmentEventProperties
     */
    user?: AnalyticsTrackedUserProfile;
    /**
     * 
     * @type {AnalyticsTrackedAssetEvent}
     * @memberof AnalyticsTrackedSegmentEventProperties
     */
    asset?: AnalyticsTrackedAssetEvent;
    /**
     * 
     * @type {AnalyticsTrackedFormatEvent}
     * @memberof AnalyticsTrackedSegmentEventProperties
     */
    format?: AnalyticsTrackedFormatEvent;
    /**
     * 
     * @type {AnalyticsTrackedInteractionEvent}
     * @memberof AnalyticsTrackedSegmentEventProperties
     */
    interaction?: AnalyticsTrackedInteractionEvent;
    /**
     * 
     * @type {AnalyticsTrackedKeyboardEvent}
     * @memberof AnalyticsTrackedSegmentEventProperties
     */
    keyboard?: AnalyticsTrackedKeyboardEvent;
    /**
     * 
     * @type {AnalyticsTrackedSessionEvent}
     * @memberof AnalyticsTrackedSegmentEventProperties
     */
    session?: AnalyticsTrackedSessionEvent;
    /**
     * 
     * @type {AnalyticsTrackedAssetsEvent}
     * @memberof AnalyticsTrackedSegmentEventProperties
     */
    assets?: AnalyticsTrackedAssetsEvent;
}

export function AnalyticsTrackedSegmentEventPropertiesFromJSON(json: any): AnalyticsTrackedSegmentEventProperties {
    return AnalyticsTrackedSegmentEventPropertiesFromJSONTyped(json, false);
}

export function AnalyticsTrackedSegmentEventPropertiesFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnalyticsTrackedSegmentEventProperties {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'os': json['os'],
        'application': AnalyticsTrackedApplicationFromJSON(json['application']),
        'user': !exists(json, 'user') ? undefined : AnalyticsTrackedUserProfileFromJSON(json['user']),
        'asset': !exists(json, 'asset') ? undefined : AnalyticsTrackedAssetEventFromJSON(json['asset']),
        'format': !exists(json, 'format') ? undefined : AnalyticsTrackedFormatEventFromJSON(json['format']),
        'interaction': !exists(json, 'interaction') ? undefined : AnalyticsTrackedInteractionEventFromJSON(json['interaction']),
        'keyboard': !exists(json, 'keyboard') ? undefined : AnalyticsTrackedKeyboardEventFromJSON(json['keyboard']),
        'session': !exists(json, 'session') ? undefined : AnalyticsTrackedSessionEventFromJSON(json['session']),
        'assets': !exists(json, 'assets') ? undefined : AnalyticsTrackedAssetsEventFromJSON(json['assets']),
    };
}

export function AnalyticsTrackedSegmentEventPropertiesToJSON(value?: AnalyticsTrackedSegmentEventProperties | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'os': value.os,
        'application': AnalyticsTrackedApplicationToJSON(value.application),
        'user': AnalyticsTrackedUserProfileToJSON(value.user),
        'asset': AnalyticsTrackedAssetEventToJSON(value.asset),
        'format': AnalyticsTrackedFormatEventToJSON(value.format),
        'interaction': AnalyticsTrackedInteractionEventToJSON(value.interaction),
        'keyboard': AnalyticsTrackedKeyboardEventToJSON(value.keyboard),
        'session': AnalyticsTrackedSessionEventToJSON(value.session),
        'assets': AnalyticsTrackedAssetsEventToJSON(value.assets),
    };
}


