//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Runtime Common Library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AnalyticsTrackedSegmentEventContextApp,
    AnalyticsTrackedSegmentEventContextAppFromJSON,
    AnalyticsTrackedSegmentEventContextAppFromJSONTyped,
    AnalyticsTrackedSegmentEventContextAppToJSON,
    AnalyticsTrackedSegmentEventContextOs,
    AnalyticsTrackedSegmentEventContextOsFromJSON,
    AnalyticsTrackedSegmentEventContextOsFromJSONTyped,
    AnalyticsTrackedSegmentEventContextOsToJSON,
} from './';

/**
 * Dictionary of extra information that provides useful context about a message, but is not directly related to the API call like ip address or locale See the Context field docs for more details.
 * @export
 * @interface AnalyticsTrackedSegmentEventContext
 */
export interface AnalyticsTrackedSegmentEventContext {
    /**
     * When sending a HTTP call from a userâ€™s device, you can collect the IP address by setting context.direct to true.
     * @type {boolean}
     * @memberof AnalyticsTrackedSegmentEventContext
     */
    direct: boolean;
    /**
     * 
     * @type {AnalyticsTrackedSegmentEventContextApp}
     * @memberof AnalyticsTrackedSegmentEventContext
     */
    app?: AnalyticsTrackedSegmentEventContextApp;
    /**
     * Locale string for the current user, for example en-US.
     * @type {string}
     * @memberof AnalyticsTrackedSegmentEventContext
     */
    locale?: string;
    /**
     * 
     * @type {AnalyticsTrackedSegmentEventContextOs}
     * @memberof AnalyticsTrackedSegmentEventContext
     */
    os?: AnalyticsTrackedSegmentEventContextOs;
}

export function AnalyticsTrackedSegmentEventContextFromJSON(json: any): AnalyticsTrackedSegmentEventContext {
    return AnalyticsTrackedSegmentEventContextFromJSONTyped(json, false);
}

export function AnalyticsTrackedSegmentEventContextFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnalyticsTrackedSegmentEventContext {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'direct': json['direct'],
        'app': !exists(json, 'app') ? undefined : AnalyticsTrackedSegmentEventContextAppFromJSON(json['app']),
        'locale': !exists(json, 'locale') ? undefined : json['locale'],
        'os': !exists(json, 'os') ? undefined : AnalyticsTrackedSegmentEventContextOsFromJSON(json['os']),
    };
}

export function AnalyticsTrackedSegmentEventContextToJSON(value?: AnalyticsTrackedSegmentEventContext | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'direct': value.direct,
        'app': AnalyticsTrackedSegmentEventContextAppToJSON(value.app),
        'locale': value.locale,
        'os': AnalyticsTrackedSegmentEventContextOsToJSON(value.os),
    };
}


