//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Runtime Common Library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AnalyticsTrackedAdoptionEvent,
    AnalyticsTrackedAdoptionEventFromJSON,
    AnalyticsTrackedAdoptionEventFromJSONTyped,
    AnalyticsTrackedAdoptionEventToJSON,
    AnalyticsTrackedAssetEvent,
    AnalyticsTrackedAssetEventFromJSON,
    AnalyticsTrackedAssetEventFromJSONTyped,
    AnalyticsTrackedAssetEventToJSON,
    AnalyticsTrackedAssetsEvent,
    AnalyticsTrackedAssetsEventFromJSON,
    AnalyticsTrackedAssetsEventFromJSONTyped,
    AnalyticsTrackedAssetsEventToJSON,
    AnalyticsTrackedFormatEvent,
    AnalyticsTrackedFormatEventFromJSON,
    AnalyticsTrackedFormatEventFromJSONTyped,
    AnalyticsTrackedFormatEventToJSON,
    AnalyticsTrackedInteractionEvent,
    AnalyticsTrackedInteractionEventFromJSON,
    AnalyticsTrackedInteractionEventFromJSONTyped,
    AnalyticsTrackedInteractionEventToJSON,
    AnalyticsTrackedKeyboardEvent,
    AnalyticsTrackedKeyboardEventFromJSON,
    AnalyticsTrackedKeyboardEventFromJSONTyped,
    AnalyticsTrackedKeyboardEventToJSON,
    AnalyticsTrackedMachineLearningEvent,
    AnalyticsTrackedMachineLearningEventFromJSON,
    AnalyticsTrackedMachineLearningEventFromJSONTyped,
    AnalyticsTrackedMachineLearningEventToJSON,
    AnalyticsTrackedSessionEvent,
    AnalyticsTrackedSessionEventFromJSON,
    AnalyticsTrackedSessionEventFromJSONTyped,
    AnalyticsTrackedSessionEventToJSON,
} from './';

/**
 * Free-form dictionary of properties of the event, like revenue See the Properties docs for a list of reserved property names.
 * @export
 * @interface TrackedEvent
 */
export interface TrackedEvent {
    /**
     * 
     * @type {AnalyticsTrackedAssetEvent}
     * @memberof TrackedEvent
     */
    asset?: AnalyticsTrackedAssetEvent;
    /**
     * 
     * @type {AnalyticsTrackedFormatEvent}
     * @memberof TrackedEvent
     */
    format?: AnalyticsTrackedFormatEvent;
    /**
     * 
     * @type {AnalyticsTrackedInteractionEvent}
     * @memberof TrackedEvent
     */
    interaction?: AnalyticsTrackedInteractionEvent;
    /**
     * 
     * @type {AnalyticsTrackedKeyboardEvent}
     * @memberof TrackedEvent
     */
    keyboard?: AnalyticsTrackedKeyboardEvent;
    /**
     * 
     * @type {AnalyticsTrackedSessionEvent}
     * @memberof TrackedEvent
     */
    session?: AnalyticsTrackedSessionEvent;
    /**
     * 
     * @type {AnalyticsTrackedAssetsEvent}
     * @memberof TrackedEvent
     */
    assets?: AnalyticsTrackedAssetsEvent;
    /**
     * 
     * @type {string}
     * @memberof TrackedEvent
     */
    id: string;
    /**
     * 
     * @type {AnalyticsTrackedMachineLearningEvent}
     * @memberof TrackedEvent
     */
    ml?: AnalyticsTrackedMachineLearningEvent;
    /**
     * 
     * @type {AnalyticsTrackedAdoptionEvent}
     * @memberof TrackedEvent
     */
    adoption?: AnalyticsTrackedAdoptionEvent;
}

export function TrackedEventFromJSON(json: any): TrackedEvent {
    return TrackedEventFromJSONTyped(json, false);
}

export function TrackedEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrackedEvent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'asset': !exists(json, 'asset') ? undefined : AnalyticsTrackedAssetEventFromJSON(json['asset']),
        'format': !exists(json, 'format') ? undefined : AnalyticsTrackedFormatEventFromJSON(json['format']),
        'interaction': !exists(json, 'interaction') ? undefined : AnalyticsTrackedInteractionEventFromJSON(json['interaction']),
        'keyboard': !exists(json, 'keyboard') ? undefined : AnalyticsTrackedKeyboardEventFromJSON(json['keyboard']),
        'session': !exists(json, 'session') ? undefined : AnalyticsTrackedSessionEventFromJSON(json['session']),
        'assets': !exists(json, 'assets') ? undefined : AnalyticsTrackedAssetsEventFromJSON(json['assets']),
        'id': json['id'],
        'ml': !exists(json, 'ml') ? undefined : AnalyticsTrackedMachineLearningEventFromJSON(json['ml']),
        'adoption': !exists(json, 'adoption') ? undefined : AnalyticsTrackedAdoptionEventFromJSON(json['adoption']),
    };
}

export function TrackedEventToJSON(value?: TrackedEvent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'asset': AnalyticsTrackedAssetEventToJSON(value.asset),
        'format': AnalyticsTrackedFormatEventToJSON(value.format),
        'interaction': AnalyticsTrackedInteractionEventToJSON(value.interaction),
        'keyboard': AnalyticsTrackedKeyboardEventToJSON(value.keyboard),
        'session': AnalyticsTrackedSessionEventToJSON(value.session),
        'assets': AnalyticsTrackedAssetsEventToJSON(value.assets),
        'id': value.id,
        'ml': AnalyticsTrackedMachineLearningEventToJSON(value.ml),
        'adoption': AnalyticsTrackedAdoptionEventToJSON(value.adoption),
    };
}


