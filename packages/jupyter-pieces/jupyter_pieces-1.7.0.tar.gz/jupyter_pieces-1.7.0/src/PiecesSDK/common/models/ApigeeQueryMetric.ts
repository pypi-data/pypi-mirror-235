//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Runtime Common Library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * More info about Metric: https://docs.apigee.com/api-platform/analytics/analytics-reference#metrics
 * @export
 * @interface ApigeeQueryMetric
 */
export interface ApigeeQueryMetric {
    /**
     * Alias for the metric. Alias will be used to replace metric name in query results.
     * @type {string}
     * @memberof ApigeeQueryMetric
     */
    alias?: string;
    /**
     * Aggregation function: avg, min, max, or sum.
     * @type {string}
     * @memberof ApigeeQueryMetric
     */
    _function?: string;
    /**
     * Required. Metric name.
     * @type {string}
     * @memberof ApigeeQueryMetric
     */
    name?: string;
    /**
     * One of `+`, `-`, `/`, `%`, `*`.
     * @type {string}
     * @memberof ApigeeQueryMetric
     */
    operator?: string;
    /**
     * Operand value should be provided when operator is set.
     * @type {string}
     * @memberof ApigeeQueryMetric
     */
    value?: string;
}

export function ApigeeQueryMetricFromJSON(json: any): ApigeeQueryMetric {
    return ApigeeQueryMetricFromJSONTyped(json, false);
}

export function ApigeeQueryMetricFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApigeeQueryMetric {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'alias': !exists(json, 'alias') ? undefined : json['alias'],
        '_function': !exists(json, 'function') ? undefined : json['function'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'operator': !exists(json, 'operator') ? undefined : json['operator'],
        'value': !exists(json, 'value') ? undefined : json['value'],
    };
}

export function ApigeeQueryMetricToJSON(value?: ApigeeQueryMetric | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'alias': value.alias,
        'function': value._function,
        'name': value.name,
        'operator': value.operator,
        'value': value.value,
    };
}


