//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Runtime Common Library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AnalyticsTrackedFormat,
    AnalyticsTrackedFormatFromJSON,
    AnalyticsTrackedFormatFromJSONTyped,
    AnalyticsTrackedFormatToJSON,
    AnalyticsTrackedFormatEventIdentifierDescriptionPairs,
    AnalyticsTrackedFormatEventIdentifierDescriptionPairsFromJSON,
    AnalyticsTrackedFormatEventIdentifierDescriptionPairsFromJSONTyped,
    AnalyticsTrackedFormatEventIdentifierDescriptionPairsToJSON,
} from './';

/**
 * This is a model that represents a generic event that we may want to track in relation to a format, for example beamed, copied, downloaded, and view. ** Note: This is the model that will get returned by our api, and is. Representative of a full TrackedFormat event. **
 * @export
 * @interface AnalyticsTrackedFormatEvent
 */
export interface AnalyticsTrackedFormatEvent {
    /**
     * 
     * @type {AnalyticsTrackedFormat}
     * @memberof AnalyticsTrackedFormatEvent
     */
    format: AnalyticsTrackedFormat;
    /**
     * 
     * @type {AnalyticsTrackedFormatEventIdentifierDescriptionPairs}
     * @memberof AnalyticsTrackedFormatEvent
     */
    identifierDescriptionPair: AnalyticsTrackedFormatEventIdentifierDescriptionPairs;
}

export function AnalyticsTrackedFormatEventFromJSON(json: any): AnalyticsTrackedFormatEvent {
    return AnalyticsTrackedFormatEventFromJSONTyped(json, false);
}

export function AnalyticsTrackedFormatEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnalyticsTrackedFormatEvent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'format': AnalyticsTrackedFormatFromJSON(json[' format']),
        'identifierDescriptionPair': AnalyticsTrackedFormatEventIdentifierDescriptionPairsFromJSON(json['identifier_description_pair']),
    };
}

export function AnalyticsTrackedFormatEventToJSON(value?: AnalyticsTrackedFormatEvent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        ' format': AnalyticsTrackedFormatToJSON(value.format),
        'identifier_description_pair': AnalyticsTrackedFormatEventIdentifierDescriptionPairsToJSON(value.identifierDescriptionPair),
    };
}


