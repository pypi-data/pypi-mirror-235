//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Runtime Common Library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AnalyticsTrackedKeyboardEventIdentifierDescriptionPairs,
    AnalyticsTrackedKeyboardEventIdentifierDescriptionPairsFromJSON,
    AnalyticsTrackedKeyboardEventIdentifierDescriptionPairsFromJSONTyped,
    AnalyticsTrackedKeyboardEventIdentifierDescriptionPairsToJSON,
} from './';

/**
 * This is a model that will hold relavent information in relation to a keyboard(including shortcuts) analytics event (usage).
 * @export
 * @interface AnalyticsTrackedKeyboardEvent
 */
export interface AnalyticsTrackedKeyboardEvent {
    /**
     * this is a description of the event, optional.
     * @type {string}
     * @memberof AnalyticsTrackedKeyboardEvent
     */
    description: string;
    /**
     * this is an array of of ascii values that represent numerics on your keyboard.
     * @type {Array<number>}
     * @memberof AnalyticsTrackedKeyboardEvent
     */
    shortcut: Array<number>;
    /**
     * 
     * @type {AnalyticsTrackedKeyboardEventIdentifierDescriptionPairs}
     * @memberof AnalyticsTrackedKeyboardEvent
     */
    identifierDescriptionPair?: AnalyticsTrackedKeyboardEventIdentifierDescriptionPairs;
}

export function AnalyticsTrackedKeyboardEventFromJSON(json: any): AnalyticsTrackedKeyboardEvent {
    return AnalyticsTrackedKeyboardEventFromJSONTyped(json, false);
}

export function AnalyticsTrackedKeyboardEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnalyticsTrackedKeyboardEvent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'description': json['description'],
        'shortcut': json['shortcut'],
        'identifierDescriptionPair': !exists(json, 'identifier_description_pair') ? undefined : AnalyticsTrackedKeyboardEventIdentifierDescriptionPairsFromJSON(json['identifier_description_pair']),
    };
}

export function AnalyticsTrackedKeyboardEventToJSON(value?: AnalyticsTrackedKeyboardEvent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'description': value.description,
        'shortcut': value.shortcut,
        'identifier_description_pair': AnalyticsTrackedKeyboardEventIdentifierDescriptionPairsToJSON(value.identifierDescriptionPair),
    };
}


