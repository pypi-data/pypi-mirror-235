//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Runtime Common Library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EmbeddedModelSchema,
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    GitHubDistribution,
    GitHubDistributionFromJSON,
    GitHubDistributionFromJSONTyped,
    GitHubDistributionToJSON,
    GroupedTimestamp,
    GroupedTimestampFromJSON,
    GroupedTimestampFromJSONTyped,
    GroupedTimestampToJSON,
    MailgunDistribution,
    MailgunDistributionFromJSON,
    MailgunDistributionFromJSONTyped,
    MailgunDistributionToJSON,
} from './';

/**
 * 
 * @export
 * @interface FlattenedDistribution
 */
export interface FlattenedDistribution {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof FlattenedDistribution
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {string}
     * @memberof FlattenedDistribution
     */
    id: string;
    /**
     * This is the UUId of the share.
     * @type {string}
     * @memberof FlattenedDistribution
     */
    share: string;
    /**
     * 
     * @type {GroupedTimestamp}
     * @memberof FlattenedDistribution
     */
    created: GroupedTimestamp;
    /**
     * 
     * @type {GroupedTimestamp}
     * @memberof FlattenedDistribution
     */
    updated: GroupedTimestamp;
    /**
     * 
     * @type {GroupedTimestamp}
     * @memberof FlattenedDistribution
     */
    deleted?: GroupedTimestamp;
    /**
     * 
     * @type {MailgunDistribution}
     * @memberof FlattenedDistribution
     */
    mailgun?: MailgunDistribution;
    /**
     * 
     * @type {GitHubDistribution}
     * @memberof FlattenedDistribution
     */
    github?: GitHubDistribution;
}

export function FlattenedDistributionFromJSON(json: any): FlattenedDistribution {
    return FlattenedDistributionFromJSONTyped(json, false);
}

export function FlattenedDistributionFromJSONTyped(json: any, ignoreDiscriminator: boolean): FlattenedDistribution {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'schema': !exists(json, 'schema') ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'id': json['id'],
        'share': json['share'],
        'created': GroupedTimestampFromJSON(json['created']),
        'updated': GroupedTimestampFromJSON(json['updated']),
        'deleted': !exists(json, 'deleted') ? undefined : GroupedTimestampFromJSON(json['deleted']),
        'mailgun': !exists(json, 'mailgun') ? undefined : MailgunDistributionFromJSON(json['mailgun']),
        'github': !exists(json, 'github') ? undefined : GitHubDistributionFromJSON(json['github']),
    };
}

export function FlattenedDistributionToJSON(value?: FlattenedDistribution | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'schema': EmbeddedModelSchemaToJSON(value.schema),
        'id': value.id,
        'share': value.share,
        'created': GroupedTimestampToJSON(value.created),
        'updated': GroupedTimestampToJSON(value.updated),
        'deleted': GroupedTimestampToJSON(value.deleted),
        'mailgun': MailgunDistributionToJSON(value.mailgun),
        'github': GitHubDistributionToJSON(value.github),
    };
}


