//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Runtime Common Library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AccessEnum,
    AccessEnumFromJSON,
    AccessEnumFromJSONTyped,
    AccessEnumToJSON,
    EmbeddedModelSchema,
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    SeededUser,
    SeededUserFromJSON,
    SeededUserFromJSONTyped,
    SeededUserToJSON,
} from './';

/**
 * This is the incoming linkify model.
 * 
 * if access is PRIVATE then please provide and array of users to enable the link for.
 * 
 * Assumption, all assets are already backed up to the cloud.
 * @export
 * @interface LinkifyMultiple
 */
export interface LinkifyMultiple {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof LinkifyMultiple
     */
    schema?: EmbeddedModelSchema;
    /**
     * This is an array or string that represents an already backed up asset. That will be added to a collection.
     * @type {Array<string>}
     * @memberof LinkifyMultiple
     */
    assets: Array<string>;
    /**
     * this is an array of users.
     * @type {Array<SeededUser>}
     * @memberof LinkifyMultiple
     */
    users?: Array<SeededUser>;
    /**
     * 
     * @type {AccessEnum}
     * @memberof LinkifyMultiple
     */
    access: AccessEnum;
    /**
     * optionally can give the collection a name if you want.
     * @type {string}
     * @memberof LinkifyMultiple
     */
    name?: string;
}

export function LinkifyMultipleFromJSON(json: any): LinkifyMultiple {
    return LinkifyMultipleFromJSONTyped(json, false);
}

export function LinkifyMultipleFromJSONTyped(json: any, ignoreDiscriminator: boolean): LinkifyMultiple {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'schema': !exists(json, 'schema') ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'assets': json['assets'],
        'users': !exists(json, 'users') ? undefined : ((json['users'] as Array<any>).map(SeededUserFromJSON)),
        'access': AccessEnumFromJSON(json['access']),
        'name': !exists(json, 'name') ? undefined : json['name'],
    };
}

export function LinkifyMultipleToJSON(value?: LinkifyMultiple | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'schema': EmbeddedModelSchemaToJSON(value.schema),
        'assets': value.assets,
        'users': value.users === undefined ? undefined : ((value.users as Array<any>).map(SeededUserToJSON)),
        'access': AccessEnumToJSON(value.access),
        'name': value.name,
    };
}


