//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Runtime Common Library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EmbeddedModelSchema,
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    SeededTrackedKeyboardEventIdentifierDescriptionPairs,
    SeededTrackedKeyboardEventIdentifierDescriptionPairsFromJSON,
    SeededTrackedKeyboardEventIdentifierDescriptionPairsFromJSONTyped,
    SeededTrackedKeyboardEventIdentifierDescriptionPairsToJSON,
} from './';

/**
 * This is a model that will hold relavent information in relation to a keyboard(including shortcuts) analytics event (usage).
 * @export
 * @interface SeededTrackedKeyboardEvent
 */
export interface SeededTrackedKeyboardEvent {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof SeededTrackedKeyboardEvent
     */
    schema?: EmbeddedModelSchema;
    /**
     * This also needs structure such as key vals or enums
     * @type {string}
     * @memberof SeededTrackedKeyboardEvent
     */
    description: string;
    /**
     * 
     * @type {Array<number>}
     * @memberof SeededTrackedKeyboardEvent
     */
    shortcut: Array<number>;
    /**
     * 
     * @type {SeededTrackedKeyboardEventIdentifierDescriptionPairs}
     * @memberof SeededTrackedKeyboardEvent
     */
    identifierDescriptionPair?: SeededTrackedKeyboardEventIdentifierDescriptionPairs;
}

export function SeededTrackedKeyboardEventFromJSON(json: any): SeededTrackedKeyboardEvent {
    return SeededTrackedKeyboardEventFromJSONTyped(json, false);
}

export function SeededTrackedKeyboardEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): SeededTrackedKeyboardEvent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'schema': !exists(json, 'schema') ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'description': json['description'],
        'shortcut': json['shortcut'],
        'identifierDescriptionPair': !exists(json, 'identifier_description_pair') ? undefined : SeededTrackedKeyboardEventIdentifierDescriptionPairsFromJSON(json['identifier_description_pair']),
    };
}

export function SeededTrackedKeyboardEventToJSON(value?: SeededTrackedKeyboardEvent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'schema': EmbeddedModelSchemaToJSON(value.schema),
        'description': value.description,
        'shortcut': value.shortcut,
        'identifier_description_pair': SeededTrackedKeyboardEventIdentifierDescriptionPairsToJSON(value.identifierDescriptionPair),
    };
}


