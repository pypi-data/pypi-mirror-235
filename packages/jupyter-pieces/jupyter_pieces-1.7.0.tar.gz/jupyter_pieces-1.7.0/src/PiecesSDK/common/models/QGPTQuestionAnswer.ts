//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Runtime Common Library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EmbeddedModelSchema,
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
} from './';

/**
 * This will be a simple model with a score and a text value that will represent the value returned for this answer.
 * @export
 * @interface QGPTQuestionAnswer
 */
export interface QGPTQuestionAnswer {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof QGPTQuestionAnswer
     */
    schema?: EmbeddedModelSchema;
    /**
     * This is the score from 0-1 on how good this answer is.
     * @type {number}
     * @memberof QGPTQuestionAnswer
     */
    score: number;
    /**
     * 
     * @type {string}
     * @memberof QGPTQuestionAnswer
     */
    text: string;
}

export function QGPTQuestionAnswerFromJSON(json: any): QGPTQuestionAnswer {
    return QGPTQuestionAnswerFromJSONTyped(json, false);
}

export function QGPTQuestionAnswerFromJSONTyped(json: any, ignoreDiscriminator: boolean): QGPTQuestionAnswer {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'schema': !exists(json, 'schema') ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'score': json['score'],
        'text': json['text'],
    };
}

export function QGPTQuestionAnswerToJSON(value?: QGPTQuestionAnswer | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'schema': EmbeddedModelSchemaToJSON(value.schema),
        'score': value.score,
        'text': value.text,
    };
}


