//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Runtime Common Library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    StripePrice,
    StripePriceFromJSON,
    StripePriceFromJSONTyped,
    StripePriceToJSON,
} from './';

/**
 * Subscription items allow you to create customer subscriptions with more than
 * one plan, making it easy to represent complex billing Relationship.
 * @export
 * @interface StripeSubscriptionItem
 */
export interface StripeSubscriptionItem {
    /**
     * Time at which the object was created. Measured in seconds since the Unix epoch.
     * @type {number}
     * @memberof StripeSubscriptionItem
     */
    created: number;
    /**
     * Unique identifier for the object.
     * @type {string}
     * @memberof StripeSubscriptionItem
     */
    id: string;
    /**
     * String representing the object's type. Objects of the same type share the same value.
     * @type {string}
     * @memberof StripeSubscriptionItem
     */
    object: StripeSubscriptionItemObjectEnum;
    /**
     * 
     * @type {StripePrice}
     * @memberof StripeSubscriptionItem
     */
    price: StripePrice;
    /**
     * The [quantity](https://stripe.com/docs/subscriptions/quantities) of the plan to which the customer should be subscribed.
     * @type {number}
     * @memberof StripeSubscriptionItem
     */
    quantity?: number;
    /**
     * The `subscription` this `subscription_item` belongs to.
     * @type {string}
     * @memberof StripeSubscriptionItem
     */
    subscription: string;
}

/**
* @export
* @enum {string}
*/
export enum StripeSubscriptionItemObjectEnum {
    SubscriptionItem = 'subscription_item'
}

export function StripeSubscriptionItemFromJSON(json: any): StripeSubscriptionItem {
    return StripeSubscriptionItemFromJSONTyped(json, false);
}

export function StripeSubscriptionItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): StripeSubscriptionItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'created': json['created'],
        'id': json['id'],
        'object': json['object'],
        'price': StripePriceFromJSON(json['price']),
        'quantity': !exists(json, 'quantity') ? undefined : json['quantity'],
        'subscription': json['subscription'],
    };
}

export function StripeSubscriptionItemToJSON(value?: StripeSubscriptionItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'created': value.created,
        'id': value.id,
        'object': value.object,
        'price': StripePriceToJSON(value.price),
        'quantity': value.quantity,
        'subscription': value.subscription,
    };
}


