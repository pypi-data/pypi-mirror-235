//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Runtime Common Library
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AnalyticsTrackedOS,
    AnalyticsTrackedOSFromJSON,
    AnalyticsTrackedOSFromJSONTyped,
    AnalyticsTrackedOSToJSON,
    EmbeddedModelSchema,
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
} from './';

/**
 * Dictionary of extra information that provides useful context about a message, but is not directly related to the API call like ip address or locale See the Context field docs for more details.
 * @export
 * @interface TrackedSegmentEventContext
 */
export interface TrackedSegmentEventContext {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof TrackedSegmentEventContext
     */
    schema?: EmbeddedModelSchema;
    /**
     * When sending a HTTP call from a userâ€™s device, you can collect the IP address by setting context.direct to true.
     * @type {boolean}
     * @memberof TrackedSegmentEventContext
     */
    direct: boolean;
    /**
     * 
     * @type {AnalyticsTrackedOS}
     * @memberof TrackedSegmentEventContext
     */
    app?: AnalyticsTrackedOS;
    /**
     * Locale string for the current user, for example en-US.
     * @type {string}
     * @memberof TrackedSegmentEventContext
     */
    locale?: string;
    /**
     * 
     * @type {AnalyticsTrackedOS}
     * @memberof TrackedSegmentEventContext
     */
    os?: AnalyticsTrackedOS;
}

export function TrackedSegmentEventContextFromJSON(json: any): TrackedSegmentEventContext {
    return TrackedSegmentEventContextFromJSONTyped(json, false);
}

export function TrackedSegmentEventContextFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrackedSegmentEventContext {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'schema': !exists(json, 'schema') ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'direct': json['direct'],
        'app': !exists(json, 'app') ? undefined : AnalyticsTrackedOSFromJSON(json['app']),
        'locale': !exists(json, 'locale') ? undefined : json['locale'],
        'os': !exists(json, 'os') ? undefined : AnalyticsTrackedOSFromJSON(json['os']),
    };
}

export function TrackedSegmentEventContextToJSON(value?: TrackedSegmentEventContext | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'schema': EmbeddedModelSchemaToJSON(value.schema),
        'direct': value.direct,
        'app': AnalyticsTrackedOSToJSON(value.app),
        'locale': value.locale,
        'os': AnalyticsTrackedOSToJSON(value.os),
    };
}


