//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * CodeDetectionAPI - Technical Language Processing
 * An API to be used specifically for generating TLP Server Code and Models
 *
 * The version of the OpenAPI document: 1.0
 * Contact: developers@runtime.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TLPTextMatch,
    TLPTextMatchFromJSON,
    TLPTextMatchFromJSONTyped,
    TLPTextMatchToJSON,
} from './';

/**
 * This is optional metatdata attached to a sensitive piece of data.
 * @export
 * @interface TLPSensitiveMetadata
 */
export interface TLPSensitiveMetadata {
    /**
     * 
     * @type {TLPTextMatch}
     * @memberof TLPSensitiveMetadata
     */
    match?: TLPTextMatch;
    /**
     * entropy of the sensitive
     * @type {number}
     * @memberof TLPSensitiveMetadata
     */
    entropy?: number;
}

export function TLPSensitiveMetadataFromJSON(json: any): TLPSensitiveMetadata {
    return TLPSensitiveMetadataFromJSONTyped(json, false);
}

export function TLPSensitiveMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): TLPSensitiveMetadata {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'match': !exists(json, 'match') ? undefined : TLPTextMatchFromJSON(json['match']),
        'entropy': !exists(json, 'entropy') ? undefined : json['entropy'],
    };
}

export function TLPSensitiveMetadataToJSON(value?: TLPSensitiveMetadata | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'match': TLPTextMatchToJSON(value.match),
        'entropy': value.entropy,
    };
}


