//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * CodeDetectionAPI - Technical Language Processing
 * An API to be used specifically for generating TLP Server Code and Models
 *
 * The version of the OpenAPI document: 1.0
 * Contact: developers@runtime.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TLPModels,
    TLPModelsFromJSON,
    TLPModelsFromJSONTyped,
    TLPModelsToJSON,
    TLPOutput,
    TLPOutputFromJSON,
    TLPOutputFromJSONTyped,
    TLPOutputToJSON,
} from './';

/**
 * iterable is an array of all the outputs we will give back based on a specific number of inputs.
 * 
 * models is an a class of all the models that were used to determine the outputs.
 * @export
 * @interface TLPOutputs
 */
export interface TLPOutputs {
    /**
     * 
     * @type {Array<TLPOutput>}
     * @memberof TLPOutputs
     */
    iterable: Array<TLPOutput>;
    /**
     * 
     * @type {TLPModels}
     * @memberof TLPOutputs
     */
    models: TLPModels;
}

export function TLPOutputsFromJSON(json: any): TLPOutputs {
    return TLPOutputsFromJSONTyped(json, false);
}

export function TLPOutputsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TLPOutputs {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'iterable': ((json['iterable'] as Array<any>).map(TLPOutputFromJSON)),
        'models': TLPModelsFromJSON(json['models']),
    };
}

export function TLPOutputsToJSON(value?: TLPOutputs | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'iterable': ((value.iterable as Array<any>).map(TLPOutputToJSON)),
        'models': TLPModelsToJSON(value.models),
    };
}


