//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * CodeDetectionAPI - Technical Language Processing
 * An API to be used specifically for generating TLP Server Code and Models
 *
 * The version of the OpenAPI document: 1.0
 * Contact: developers@runtime.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TLPLanguageMap,
    TLPLanguageMapFromJSON,
    TLPLanguageMapFromJSONTyped,
    TLPLanguageMapToJSON,
} from './';

/**
 * current here is a key to the current language in the lookup property.
 * @export
 * @interface TLPLanguage
 */
export interface TLPLanguage {
    /**
     * 
     * @type {number}
     * @memberof TLPLanguage
     */
    likelihood: number;
    /**
     * 
     * @type {string}
     * @memberof TLPLanguage
     */
    current: string;
    /**
     * 
     * @type {TLPLanguageMap}
     * @memberof TLPLanguage
     */
    lookup: TLPLanguageMap;
}

export function TLPLanguageFromJSON(json: any): TLPLanguage {
    return TLPLanguageFromJSONTyped(json, false);
}

export function TLPLanguageFromJSONTyped(json: any, ignoreDiscriminator: boolean): TLPLanguage {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'likelihood': json['likelihood'],
        'current': json['current'],
        'lookup': TLPLanguageMapFromJSON(json['lookup']),
    };
}

export function TLPLanguageToJSON(value?: TLPLanguage | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'likelihood': value.likelihood,
        'current': value.current,
        'lookup': TLPLanguageMapToJSON(value.lookup),
    };
}


