//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * CodeDetectionAPI - Technical Language Processing
 * An API to be used specifically for generating TLP Server Code and Models
 *
 * The version of the OpenAPI document: 1.0
 * Contact: developers@runtime.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TLPSensitive,
    TLPSensitiveFromJSON,
    TLPSensitiveFromJSONTyped,
    TLPSensitiveToJSON,
} from './';

/**
 * This is a model that represents many individual sensitive pieces of data.
 * @export
 * @interface TLPSensitives
 */
export interface TLPSensitives {
    /**
     * 
     * @type {Array<TLPSensitive>}
     * @memberof TLPSensitives
     */
    iterable: Array<TLPSensitive>;
}

export function TLPSensitivesFromJSON(json: any): TLPSensitives {
    return TLPSensitivesFromJSONTyped(json, false);
}

export function TLPSensitivesFromJSONTyped(json: any, ignoreDiscriminator: boolean): TLPSensitives {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'iterable': ((json['iterable'] as Array<any>).map(TLPSensitiveFromJSON)),
    };
}

export function TLPSensitivesToJSON(value?: TLPSensitives | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'iterable': ((value.iterable as Array<any>).map(TLPSensitiveToJSON)),
    };
}


