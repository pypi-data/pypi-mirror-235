//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EmbeddedModelSchema,
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    SeededTrackedAssetEventMetadata,
    SeededTrackedAssetEventMetadataFromJSON,
    SeededTrackedAssetEventMetadataFromJSONTyped,
    SeededTrackedAssetEventMetadataToJSON,
    TrackedAsset,
    TrackedAssetFromJSON,
    TrackedAssetFromJSONTyped,
    TrackedAssetToJSON,
    TrackedAssetEventIdentifierDescriptionPairs,
    TrackedAssetEventIdentifierDescriptionPairsFromJSON,
    TrackedAssetEventIdentifierDescriptionPairsFromJSONTyped,
    TrackedAssetEventIdentifierDescriptionPairsToJSON,
} from './';

/**
 * This is a full, TrackedAssetEvent this is an event such as 'renamed'. This is an asset update event.
 * @export
 * @interface TrackedAssetEvent
 */
export interface TrackedAssetEvent {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof TrackedAssetEvent
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {TrackedAsset}
     * @memberof TrackedAssetEvent
     */
    asset: TrackedAsset;
    /**
     * 
     * @type {TrackedAssetEventIdentifierDescriptionPairs}
     * @memberof TrackedAssetEvent
     */
    identifierDescriptionPair: TrackedAssetEventIdentifierDescriptionPairs;
    /**
     * 
     * @type {SeededTrackedAssetEventMetadata}
     * @memberof TrackedAssetEvent
     */
    metadata?: SeededTrackedAssetEventMetadata;
}

export function TrackedAssetEventFromJSON(json: any): TrackedAssetEvent {
    return TrackedAssetEventFromJSONTyped(json, false);
}

export function TrackedAssetEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrackedAssetEvent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'schema': !exists(json, 'schema') ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'asset': TrackedAssetFromJSON(json['asset']),
        'identifierDescriptionPair': TrackedAssetEventIdentifierDescriptionPairsFromJSON(json['identifier_description_pair']),
        'metadata': !exists(json, 'metadata') ? undefined : SeededTrackedAssetEventMetadataFromJSON(json['metadata']),
    };
}

export function TrackedAssetEventToJSON(value?: TrackedAssetEvent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'schema': EmbeddedModelSchemaToJSON(value.schema),
        'asset': TrackedAssetToJSON(value.asset),
        'identifier_description_pair': TrackedAssetEventIdentifierDescriptionPairsToJSON(value.identifierDescriptionPair),
        'metadata': SeededTrackedAssetEventMetadataToJSON(value.metadata),
    };
}


