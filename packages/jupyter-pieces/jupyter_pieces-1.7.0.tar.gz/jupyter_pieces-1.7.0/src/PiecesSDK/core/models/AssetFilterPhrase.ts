//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AssetFilterPhraseOptions,
    AssetFilterPhraseOptionsFromJSON,
    AssetFilterPhraseOptionsFromJSONTyped,
    AssetFilterPhraseOptionsToJSON,
    EmbeddedModelSchema,
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
} from './';

/**
 * 
 * @export
 * @interface AssetFilterPhrase
 */
export interface AssetFilterPhrase {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof AssetFilterPhrase
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {string}
     * @memberof AssetFilterPhrase
     */
    value?: string;
    /**
     * 
     * @type {boolean}
     * @memberof AssetFilterPhrase
     */
    annotation?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AssetFilterPhrase
     */
    title?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AssetFilterPhrase
     */
    content?: boolean;
    /**
     * 
     * @type {AssetFilterPhraseOptions}
     * @memberof AssetFilterPhrase
     */
    options?: AssetFilterPhraseOptions;
}

export function AssetFilterPhraseFromJSON(json: any): AssetFilterPhrase {
    return AssetFilterPhraseFromJSONTyped(json, false);
}

export function AssetFilterPhraseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AssetFilterPhrase {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'schema': !exists(json, 'schema') ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'value': !exists(json, 'value') ? undefined : json['value'],
        'annotation': !exists(json, 'annotation') ? undefined : json['annotation'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'content': !exists(json, 'content') ? undefined : json['content'],
        'options': !exists(json, 'options') ? undefined : AssetFilterPhraseOptionsFromJSON(json['options']),
    };
}

export function AssetFilterPhraseToJSON(value?: AssetFilterPhrase | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'schema': EmbeddedModelSchemaToJSON(value.schema),
        'value': value.value,
        'annotation': value.annotation,
        'title': value.title,
        'content': value.content,
        'options': AssetFilterPhraseOptionsToJSON(value.options),
    };
}


