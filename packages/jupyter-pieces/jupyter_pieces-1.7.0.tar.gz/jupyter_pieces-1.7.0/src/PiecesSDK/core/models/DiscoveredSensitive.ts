//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EmbeddedModelSchema,
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    SeededSensitive,
    SeededSensitiveFromJSON,
    SeededSensitiveFromJSONTyped,
    SeededSensitiveToJSON,
} from './';

/**
 * This will return a discoveredSensitive, with a seed that can be used to create if automatic is set to false. and will provide the original text provided.
 * @export
 * @interface DiscoveredSensitive
 */
export interface DiscoveredSensitive {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof DiscoveredSensitive
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {SeededSensitive}
     * @memberof DiscoveredSensitive
     */
    seed: SeededSensitive;
    /**
     * 
     * @type {string}
     * @memberof DiscoveredSensitive
     */
    text: string;
}

export function DiscoveredSensitiveFromJSON(json: any): DiscoveredSensitive {
    return DiscoveredSensitiveFromJSONTyped(json, false);
}

export function DiscoveredSensitiveFromJSONTyped(json: any, ignoreDiscriminator: boolean): DiscoveredSensitive {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'schema': !exists(json, 'schema') ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'seed': SeededSensitiveFromJSON(json['seed']),
        'text': json['text'],
    };
}

export function DiscoveredSensitiveToJSON(value?: DiscoveredSensitive | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'schema': EmbeddedModelSchemaToJSON(value.schema),
        'seed': SeededSensitiveToJSON(value.seed),
        'text': value.text,
    };
}


