//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EmbeddedModelSchema,
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    GroupedTimestamp,
    GroupedTimestampFromJSON,
    GroupedTimestampFromJSONTyped,
    GroupedTimestampToJSON,
    TrackedFormat,
    TrackedFormatFromJSON,
    TrackedFormatFromJSONTyped,
    TrackedFormatToJSON,
} from './';

/**
 * An asset that is allowed to be sent to mixpanel containing no value & minimal data
 * @export
 * @interface TrackedAsset
 */
export interface TrackedAsset {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof TrackedAsset
     */
    schema?: EmbeddedModelSchema;
    /**
     * The ID of the asset.
     * @type {string}
     * @memberof TrackedAsset
     */
    id: string;
    /**
     * The name of the asset
     * @type {string}
     * @memberof TrackedAsset
     */
    name: string;
    /**
     * An array of tracked formats on/belonging the asset
     * @type {Array<TrackedFormat>}
     * @memberof TrackedAsset
     */
    formats: Array<TrackedFormat>;
    /**
     * 
     * @type {GroupedTimestamp}
     * @memberof TrackedAsset
     */
    created: GroupedTimestamp;
    /**
     * 
     * @type {GroupedTimestamp}
     * @memberof TrackedAsset
     */
    updated: GroupedTimestamp;
    /**
     * 
     * @type {boolean}
     * @memberof TrackedAsset
     */
    curated?: boolean;
}

export function TrackedAssetFromJSON(json: any): TrackedAsset {
    return TrackedAssetFromJSONTyped(json, false);
}

export function TrackedAssetFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrackedAsset {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'schema': !exists(json, 'schema') ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'id': json['id'],
        'name': json['name'],
        'formats': ((json['formats'] as Array<any>).map(TrackedFormatFromJSON)),
        'created': GroupedTimestampFromJSON(json['created']),
        'updated': GroupedTimestampFromJSON(json['updated']),
        'curated': !exists(json, 'curated') ? undefined : json['curated'],
    };
}

export function TrackedAssetToJSON(value?: TrackedAsset | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'schema': EmbeddedModelSchemaToJSON(value.schema),
        'id': value.id,
        'name': value.name,
        'formats': ((value.formats as Array<any>).map(TrackedFormatToJSON)),
        'created': GroupedTimestampToJSON(value.created),
        'updated': GroupedTimestampToJSON(value.updated),
        'curated': value.curated,
    };
}


