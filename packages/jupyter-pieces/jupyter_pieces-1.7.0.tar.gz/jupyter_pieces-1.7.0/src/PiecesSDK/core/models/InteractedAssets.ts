//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EmbeddedModelSchema,
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    InteractedAsset,
    InteractedAssetFromJSON,
    InteractedAssetFromJSONTyped,
    InteractedAssetToJSON,
} from './';

/**
 * A model which contains a list of InteractedAssets with potentially additional properties.
 * @export
 * @interface InteractedAssets
 */
export interface InteractedAssets {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof InteractedAssets
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {Array<InteractedAsset>}
     * @memberof InteractedAssets
     */
    iterable: Array<InteractedAsset>;
}

export function InteractedAssetsFromJSON(json: any): InteractedAssets {
    return InteractedAssetsFromJSONTyped(json, false);
}

export function InteractedAssetsFromJSONTyped(json: any, ignoreDiscriminator: boolean): InteractedAssets {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'schema': !exists(json, 'schema') ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'iterable': ((json['iterable'] as Array<any>).map(InteractedAssetFromJSON)),
    };
}

export function InteractedAssetsToJSON(value?: InteractedAssets | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'schema': EmbeddedModelSchemaToJSON(value.schema),
        'iterable': ((value.iterable as Array<any>).map(InteractedAssetToJSON)),
    };
}


