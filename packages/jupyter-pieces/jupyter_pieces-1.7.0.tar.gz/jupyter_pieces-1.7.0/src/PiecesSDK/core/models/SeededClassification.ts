//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ClassificationGenericEnum,
    ClassificationGenericEnumFromJSON,
    ClassificationGenericEnumFromJSONTyped,
    ClassificationGenericEnumToJSON,
    ClassificationRenderingEnum,
    ClassificationRenderingEnumFromJSON,
    ClassificationRenderingEnumFromJSONTyped,
    ClassificationRenderingEnumToJSON,
    ClassificationSpecificEnum,
    ClassificationSpecificEnumFromJSON,
    ClassificationSpecificEnumFromJSONTyped,
    ClassificationSpecificEnumToJSON,
    EmbeddedModelSchema,
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
} from './';

/**
 * This is the specific classification of an Asset's Format.(This is on a per format basis b/c an asset could have different formats that are different format representations of the Asset.)
 * @export
 * @interface SeededClassification
 */
export interface SeededClassification {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof SeededClassification
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {ClassificationGenericEnum}
     * @memberof SeededClassification
     */
    generic?: ClassificationGenericEnum;
    /**
     * 
     * @type {ClassificationSpecificEnum}
     * @memberof SeededClassification
     */
    specific?: ClassificationSpecificEnum;
    /**
     * 
     * @type {ClassificationRenderingEnum}
     * @memberof SeededClassification
     */
    rendering?: ClassificationRenderingEnum;
}

export function SeededClassificationFromJSON(json: any): SeededClassification {
    return SeededClassificationFromJSONTyped(json, false);
}

export function SeededClassificationFromJSONTyped(json: any, ignoreDiscriminator: boolean): SeededClassification {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'schema': !exists(json, 'schema') ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'generic': !exists(json, 'generic') ? undefined : ClassificationGenericEnumFromJSON(json['generic']),
        'specific': !exists(json, 'specific') ? undefined : ClassificationSpecificEnumFromJSON(json['specific']),
        'rendering': !exists(json, 'rendering') ? undefined : ClassificationRenderingEnumFromJSON(json['rendering']),
    };
}

export function SeededClassificationToJSON(value?: SeededClassification | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'schema': EmbeddedModelSchemaToJSON(value.schema),
        'generic': ClassificationGenericEnumToJSON(value.generic),
        'specific': ClassificationSpecificEnumToJSON(value.specific),
        'rendering': ClassificationRenderingEnumToJSON(value.rendering),
    };
}


