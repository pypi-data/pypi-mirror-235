//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EmbeddedModelSchema,
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
} from './';

/**
 * 
 * @export
 * @interface TLPCodeSnippetTagifyNamedColor
 */
export interface TLPCodeSnippetTagifyNamedColor {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof TLPCodeSnippetTagifyNamedColor
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {string}
     * @memberof TLPCodeSnippetTagifyNamedColor
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof TLPCodeSnippetTagifyNamedColor
     */
    parentColor: string;
    /**
     * 
     * @type {number}
     * @memberof TLPCodeSnippetTagifyNamedColor
     */
    delta: number;
    /**
     * 
     * @type {string}
     * @memberof TLPCodeSnippetTagifyNamedColor
     */
    hex: string;
}

export function TLPCodeSnippetTagifyNamedColorFromJSON(json: any): TLPCodeSnippetTagifyNamedColor {
    return TLPCodeSnippetTagifyNamedColorFromJSONTyped(json, false);
}

export function TLPCodeSnippetTagifyNamedColorFromJSONTyped(json: any, ignoreDiscriminator: boolean): TLPCodeSnippetTagifyNamedColor {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'schema': !exists(json, 'schema') ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'name': json['name'],
        'parentColor': json['parentColor'],
        'delta': json['delta'],
        'hex': json['hex'],
    };
}

export function TLPCodeSnippetTagifyNamedColorToJSON(value?: TLPCodeSnippetTagifyNamedColor | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'schema': EmbeddedModelSchemaToJSON(value.schema),
        'name': value.name,
        'parentColor': value.parentColor,
        'delta': value.delta,
        'hex': value.hex,
    };
}


