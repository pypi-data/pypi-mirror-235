//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EmbeddedModelSchema,
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
    MechanismEnum,
    MechanismEnumFromJSON,
    MechanismEnumFromJSONTyped,
    MechanismEnumToJSON,
    TagCategoryEnum,
    TagCategoryEnumFromJSON,
    TagCategoryEnumFromJSONTyped,
    TagCategoryEnumToJSON,
} from './';

/**
 * This is similar to an SeededTag, where this is the minimum information of a tag, but this can get added to a seededAsset,  where you may not yet have an asset id.
 * @export
 * @interface SeededAssetTag
 */
export interface SeededAssetTag {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof SeededAssetTag
     */
    schema?: EmbeddedModelSchema;
    /**
     * this is the text that represents the tag.
     * @type {string}
     * @memberof SeededAssetTag
     */
    text: string;
    /**
     * 
     * @type {MechanismEnum}
     * @memberof SeededAssetTag
     */
    mechanism?: MechanismEnum;
    /**
     * 
     * @type {TagCategoryEnum}
     * @memberof SeededAssetTag
     */
    category?: TagCategoryEnum;
}

export function SeededAssetTagFromJSON(json: any): SeededAssetTag {
    return SeededAssetTagFromJSONTyped(json, false);
}

export function SeededAssetTagFromJSONTyped(json: any, ignoreDiscriminator: boolean): SeededAssetTag {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'schema': !exists(json, 'schema') ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'text': json['text'],
        'mechanism': !exists(json, 'mechanism') ? undefined : MechanismEnumFromJSON(json['mechanism']),
        'category': !exists(json, 'category') ? undefined : TagCategoryEnumFromJSON(json['category']),
    };
}

export function SeededAssetTagToJSON(value?: SeededAssetTag | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'schema': EmbeddedModelSchemaToJSON(value.schema),
        'text': value.text,
        'mechanism': MechanismEnumToJSON(value.mechanism),
        'category': TagCategoryEnumToJSON(value.category),
    };
}


