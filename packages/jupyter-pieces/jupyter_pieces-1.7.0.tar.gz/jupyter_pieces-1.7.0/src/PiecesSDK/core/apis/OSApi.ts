//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    ReturnedUserProfile,
    ReturnedUserProfileFromJSON,
    ReturnedUserProfileToJSON,
    SeededExternalProvider,
    SeededExternalProviderFromJSON,
    SeededExternalProviderToJSON,
    UserProfile,
    UserProfileFromJSON,
    UserProfileToJSON,
    Users,
    UsersFromJSON,
    UsersToJSON,
} from '../models';

export interface LinkProviderRequest {
    seededExternalProvider?: SeededExternalProvider;
}

/**
 * 
 */
export class OSApi extends runtime.BaseAPI {

    /**
     * This will link an external provider to your current auth0 account.  Will throw errors if your user is not signed in.
     * /os/link_provider [POST]
     */
    async linkProviderRaw(requestParameters: LinkProviderRequest): Promise<runtime.ApiResponse<ReturnedUserProfile>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/os/link_provider`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: SeededExternalProviderToJSON(requestParameters.seededExternalProvider),
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => ReturnedUserProfileFromJSON(jsonValue));
    }

    /**
     * This will link an external provider to your current auth0 account.  Will throw errors if your user is not signed in.
     * /os/link_provider [POST]
     */
    async linkProvider(requestParameters: LinkProviderRequest): Promise<ReturnedUserProfile> {
        const response = await this.linkProviderRaw(requestParameters);
        return await response.value();
    }

    /**
     * This will restart PiecesOS, if successfull with return a 204. This is a LOCALOS Only Endpoint.
     * Your GET endpoint
     */
    async osRestartRaw(): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/os/restart`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.VoidApiResponse(response);
    }

    /**
     * This will restart PiecesOS, if successfull with return a 204. This is a LOCALOS Only Endpoint.
     * Your GET endpoint
     */
    async osRestart(): Promise<void> {
        await this.osRestartRaw();
    }

    /**
     * A trigger that launches a Sign into OS Server
     */
    async signIntoOSRaw(): Promise<runtime.ApiResponse<UserProfile>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/os/sign_in`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => UserProfileFromJSON(jsonValue));
    }

    /**
     * A trigger that launches a Sign into OS Server
     */
    async signIntoOS(): Promise<UserProfile> {
        const response = await this.signIntoOSRaw();
        return await response.value();
    }

    /**
     * A trigger that signs out a user from the OS
     * /os/sign_out [POST]
     */
    async signOutOfOSRaw(): Promise<runtime.ApiResponse<Users>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/os/sign_out`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => UsersFromJSON(jsonValue));
    }

    /**
     * A trigger that signs out a user from the OS
     * /os/sign_out [POST]
     */
    async signOutOfOS(): Promise<Users> {
        const response = await this.signOutOfOSRaw();
        return await response.value();
    }

}
