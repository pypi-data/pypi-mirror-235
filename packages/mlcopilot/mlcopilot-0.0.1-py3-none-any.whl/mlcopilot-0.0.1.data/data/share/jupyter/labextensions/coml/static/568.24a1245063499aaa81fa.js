"use strict";(self.webpackChunkcoml=self.webpackChunkcoml||[]).push([[568],{568:(e,t,o)=>{o.r(t),o.d(t,{default:()=>r});var n=o(408),l=o(505);function c(e,t){const o=e.widgets,n=[];for(let e=0;e<o.length;e++){const l=o[e];"code"===l.model.type&&l.outputArea===t&&n.push(e)}if(1===n.length)return n[0];if(n.length>1){let t=-1;for(const o of n){if(!(-1===t||o<=e.activeCellIndex))break;t=o}return t}return e.activeCell?e.activeCellIndex:-1}function a(e,t){if((null==t?void 0:t.currentWidget)&&t.currentWidget===e.shell.currentWidget)return t.currentWidget.context.sessionContext}function u(e,t){if((null==t?void 0:t.currentWidget)&&t.currentWidget===e.shell.currentWidget)return t.currentWidget.content}function s(e,t,o,n={},l=!0){var c,a,u;null===(c=e.model)||void 0===c||c.sharedModel.insertCell(t+1,{cell_type:"code",metadata:{coml:n},source:o}),e.activeCellIndex=t+1,l&&(null===(u=null===(a=e.activeCell)||void 0===a?void 0:a.editor)||void 0===u||u.focus())}const r={id:"coml:plugin",description:"JupyterLab extension for CoML.",autoStart:!0,optional:[n.INotebookTracker],activate:(e,t)=>{l.OutputArea.prototype.nativeOnInputRequest=l.OutputArea.prototype.onInputRequest,l.OutputArea.prototype.onInputRequest=function(o,l){try{const r=JSON.parse(o.content.prompt);if("insert_cell_below"===r.command){const n=u(e,t);n?s(n,c(n,this),r.code,r.metadata):console.warn("No notebook found"),l.sendInputReply({status:"ok",value:""},o.header)}else if("insert_and_execute_cell_below"===r.command){const d=u(e,t),i=a(e,t);d&&i?(s(d,c(d,this),r.code,r.metadata,!1),l.sendInputReply({status:"ok",value:""},o.header),n.NotebookActions.run(d,i)):(console.warn("No notebook or session context found"),l.sendInputReply({status:"ok",value:""},o.header))}else{if("last_cell"!==r.command)return console.warn("Not a command",o),this.nativeOnInputRequest(o,l);{const n=u(e,t);if(n){const e=function(e,t){return t<=0?(console.warn(`Current cell index is ${t}. No last cell found.`),null):e.widgets[t-1].model.toJSON()}(n,c(n,this));l.sendInputReply({status:"ok",value:JSON.stringify(e)},o.header)}else console.warn("No notebook found");l.sendInputReply({status:"ok",value:"hello"},o.header)}}}catch(e){return console.log("Not a JSON command",o,e),this.nativeOnInputRequest(o,l)}},e.commands.addCommand("coml:insert_cell_below",{label:"Execute coml:insert_cell_below Command",caption:"Execute coml:insert_cell_below Command",execute:o=>{const n=u(e,t);n?s(n,n.activeCellIndex,o.code,o.metadata):console.warn("No notebook found")}}),e.commands.addCommand("coml:insert_and_execute_cell_below",{label:"Execute coml:insert_and_execute_cell_below Command",caption:"Execute coml:insert_and_execute_cell_below Command",execute:o=>{const l=u(e,t),c=a(e,t);l&&c?(s(l,l.activeCellIndex,o.code,o.metadata),n.NotebookActions.run(l,c)):console.warn("Notebook or session context not found")}})}}}}]);