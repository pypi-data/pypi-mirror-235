[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools>=60", "wheel", "build", "setuptools_scm[toml]>=7.1"]

[project]
authors = [
  {name = "gdsfactory community", email = "contact@gdsfactory.com"}
]
classifiers = [
  "Programming Language :: Python :: 3.11",
  "Operating System :: OS Independent"
]
dependencies = [
  "typer[all]",
  "requests",
  "klayout>=0.28.11",
  "pydantic>=2,<=3",
  "pydantic-settings"
]
description = "Python Command line interface CLI for GDataSea"
name = "seali"
readme = "README.md"
requires-python = ">=3.10"
version = "0.1.0"

[project.optional-dependencies]
ci = [
  "pytest",
  "mypy",
  "types-cachetools",
  "types-requests",
  "seali[git]"
]
dev = [
  "pre-commit",
  "pytest",
  "pytest-cov",
  "pytest_regressions",
  "towncrier",
  "gitpython",
  "tbump",
  "types-requests",
  "types-setuptools",
  "types-docutils",
  "types-Pygments",
  "typer-cli",
  "requests-mock",
  "pandas"
]
docs = [
  "jupytext",
  "matplotlib",
  "jupyter-book==0.15.1",
  "sphinx-click"
]
git = [
  "gitpython"
]
ipy = [
  "ipython",
  "ipywidgets",
  "ipytree",
  "ipyevents"
]

[project.scripts]
sea = "seali.main:app"

[tool.black]
exclude = '''  # Specify the files/dirs that should be ignored by the black formatter
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | env
  | _build
  | buck-out
  | build
  | dist
)/
'''
include = '\.pyi?$'
line-length = 88  # Specify the line length
target-version = ['py310']  # Specify your Python version

[tool.codespell]
ignore-words-list = "euclidian,TE,TE/TM,te,ba,FPR,fpr_spacing,ro,nd,donot,schem"
skip = "pyproject.toml"

[tool.coverage.html]
directory = "_build/coverage_html_report"

[tool.mypy]
exclude = [
  "tests",
  "src/seali/widgets/interactive.py"
]
python_version = "3.10"
strict = true

[[tool.mypy.overrides]]
implicit_reexport = true
module = "seali"

[tool.pylsp-mypy]
enabled = true
live_mode = true
strict = true

[tool.pytest.ini_options]
addopts = '--tb=short'
norecursedirs = ["extra/*.py"]
testpaths = ["src", "tests"]

[tool.ruff]
extend-exclude = ['docs/notebooks/']
fix = true
ignore = [
  "B008"  # do not perform function calls in argument defaults
]
line-length = 88
select = [
  "E",  # pycodestyle errors
  "W",  # pycodestyle warnings
  "F",  # pyflakes
  "I",  # isort
  "C",  # flake8-comprehensions
  "B",  # flake8-bugbear
  "UP"
]
src = ["src"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.setuptools.packages.find]
where = ["src"]

[tool.tbump]

[[tool.tbump.before_commit]]
cmd = "towncrier build --yes --version {new_version}"
name = "create & check changelog"

[[tool.tbump.before_commit]]
cmd = "git add CHANGELOG.md"
name = "create & check changelog"

[[tool.tbump.before_commit]]
cmd = "grep -q -F {new_version} CHANGELOG.md"
name = "create & check changelog"

# For each file to patch, add a [[file]] config
# section containing the path of the file, relative to the
# tbump.toml location.
[[tool.tbump.file]]
src = "README.md"

[[tool.tbump.file]]
src = "pyproject.toml"

[[tool.tbump.file]]
src = "src/seali/__init__.py"

[tool.tbump.git]
message_template = "Bump to {new_version}"
tag_template = "v{new_version}"

[tool.tbump.version]
current = "0.1.0"
# Example of a semver regexp.
# Make sure this matches current_version before
# using tbump
regex = '''
  (?P<major>\d+)
  \.
  (?P<minor>\d+)
  \.
  (?P<patch>\d+)
  '''

[tool.towncrier]
directory = ".changelog.d"
filename = "CHANGELOG.md"
issue_format = "[#{issue}](https://github.com/gdsfactory/seali/issues/{issue})"
start_string = "<!-- towncrier release notes start -->\n"
template = ".changelog.d/changelog_template.jinja"
title_format = "## [{version}](https://github.com/gdsfactory/seali/tree/{version}) - {project_date}"
underlines = ["", "", ""]

[[tool.towncrier.type]]
directory = "security"
name = "Security"
showcontent = true

[[tool.towncrier.type]]
directory = "removed"
name = "Removed"
showcontent = true

[[tool.towncrier.type]]
directory = "deprecated"
name = "Deprecated"
showcontent = true

[[tool.towncrier.type]]
directory = "added"
name = "Added"
showcontent = true

[[tool.towncrier.type]]
directory = "changed"
name = "Changed"
showcontent = true

[[tool.towncrier.type]]
directory = "fixed"
name = "Fixed"
showcontent = true
