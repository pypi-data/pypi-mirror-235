# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class OpenLoopResourceIdType(str, enum.Enum):
    """
    An enumeration.
    """

    APPOINTMENT = "Appointment"
    FORM_ANSWER_GROUP = "FormAnswerGroup"
    ENTRY = "Entry"
    NOTE = "Note"

    def visit(
        self,
        appointment: typing.Callable[[], T_Result],
        form_answer_group: typing.Callable[[], T_Result],
        entry: typing.Callable[[], T_Result],
        note: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is OpenLoopResourceIdType.APPOINTMENT:
            return appointment()
        if self is OpenLoopResourceIdType.FORM_ANSWER_GROUP:
            return form_answer_group()
        if self is OpenLoopResourceIdType.ENTRY:
            return entry()
        if self is OpenLoopResourceIdType.NOTE:
            return note()
