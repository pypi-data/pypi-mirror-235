# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime
from .api_key_in_db import ApiKeyInDb
from .connected_source_client_facing_redacted import ConnectedSourceClientFacingRedacted
from .physician_network_t import PhysicianNetworkT
from .priority_in_db import PriorityInDb
from .team_user import TeamUser


class TeamInDb(pydantic.BaseModel):
    svix_app_id: typing.Optional[str]
    client_id: typing.Optional[str]
    client_secret: typing.Optional[str]
    api_key: typing.Optional[str]
    airtable_api_key: typing.Optional[str]
    airtable_base_id: typing.Optional[str]
    webhook_secret: typing.Optional[str]
    ff_wheel_enabled: typing.Optional[bool]
    ff_apple_mobile_app_enabled: typing.Optional[bool]
    lab_tests_patient_communication_enabled: bool
    lab_test_delegated_flow_enabled: typing.Optional[bool]
    physician_network: typing.Optional[PhysicianNetworkT]
    id: str
    name: str
    users: typing.Optional[typing.List[TeamUser]]
    connected_sources: typing.Optional[typing.List[ConnectedSourceClientFacingRedacted]]
    configuration: typing.Dict[str, typing.Any]
    priorities: typing.Optional[typing.List[PriorityInDb]]
    subscription_status: typing.Optional[str]
    api_keys: typing.Optional[typing.List[ApiKeyInDb]]
    logo_url: typing.Optional[str]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
