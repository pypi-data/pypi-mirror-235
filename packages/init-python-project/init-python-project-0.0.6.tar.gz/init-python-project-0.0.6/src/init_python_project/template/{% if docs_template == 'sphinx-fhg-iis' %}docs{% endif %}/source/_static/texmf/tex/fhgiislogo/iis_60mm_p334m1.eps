%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 13.0
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 171 47
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2004 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  3 1 roll 2 array astore
  /setpagedevice where {
    pop 3 dict begin
      /PageSize exch def
      /ImagingBBox null def
      /Policies 1 dict dup begin /PageSize 3 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/cshow where {
  pop
  /cshow2 {
    dup {
      pop pop
      1 string dup 0 3 index put 3 index exec
    } exch cshow
    pop pop
  } def
}{
  /cshow2 {
    currentfont /FontType get 0 eq {
      0 2 2 index length 1 sub {
        2 copy get exch 1 add 2 index exch get
        2 copy exch 256 mul add
        2 string dup 0 6 5 roll put dup 1 5 4 roll put
        3 index exec
      } for
    } {
      dup {
        1 string dup 0 3 index put 3 index exec
      } forall
    } ifelse
    pop pop
  } def
} ifelse
/awcp {
  exch {
    false charpath
    5 index 5 index rmoveto
    6 index eq { 7 index 7 index rmoveto } if
  } exch cshow2
  6 {pop} repeat
} def
/Tj {
  fCol
  1 index stringwidth pdfTextMat idtransform pop
  sub 1 index length dup 0 ne { div } { pop pop 0 } ifelse
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16 {
  fCol
  2 index stringwidth pdfTextMat idtransform pop
  sub exch div
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16V {
  fCol
  2 index stringwidth pdfTextMat idtransform exch pop
  sub exch div
  0 pdfWordSpacing pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing add 0 exch
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj1 {
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 8 2 roll
  pdfTextRender 1 and 0 eq pdfPatternCS not and {
    6 copy awidthshow
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    7 index 7 index moveto
    6 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    false awcp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne pdfPatternCS or {
    8 6 roll moveto
    false awcp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    8 {pop} repeat
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { pdfFontSize 0.001 mul mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { pdfFontSize 0.001 mul mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2 image operators
/pdfImBuf 100 string def
/pdfIm {
  image
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImM {
  fCol imagemask
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%EndSetup
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
0 0 1700.93 465.254 re
W
[/Separation (PANTONE 334 C) /DeviceCMYK
{dup 1 mul exch dup 0 mul exch dup 0.6 mul exch 0.03 mul }
] {} cs
[1] sc
[1] sc
0 188.203 m
65.6094 221.984 161.719 276.578 275.789 356.41 c
275.789 383.207 l
175.395 317.523 73.2969 264.781 0 229.895 c
0 188.203 l
f
0 268.219 m
73.0469 297.98 175.152 343.961 275.789 403.812 c
275.789 417.047 l
181.199 370.117 82.9297 340.754 0 322.441 c
0 268.219 l
f
275.789 188.066 m
275.789 322.852 l
213.004 269.918 150.824 224.094 98.5898 188.066 c
275.789 188.066 l
f
63.3242 188.066 m
112.922 217.512 173.129 255.938 233.086 300.852 c
247.074 311.332 261.355 322.129 275.789 333.289 c
275.789 349.996 l
187.051 283.469 96.4727 228.008 25.707 188.066 c
63.3242 188.066 l
f
0 342.047 m
80.668 356.234 179.355 381.754 275.789 427.59 c
275.789 442.613 l
178.613 398.988 81.3438 380.488 0 373.906 c
0 342.047 l
f
0 465.254 m
0 388.043 l
6.02344 388.414 12.168 388.844 18.4414 389.332 c
85.5078 394.488 177.027 406.34 275.789 449.043 c
275.789 465.254 l
0 465.254 l
f
/DeviceCMYK {} cs
[0 0 0 0] sc
0 388.043 m
0 373.906 l
81.3438 380.488 178.613 398.988 275.789 442.613 c
275.789 449.043 l
177.027 406.34 85.5078 394.488 18.4414 389.332 c
12.168 388.844 6.02344 388.414 0 388.043 c
f
0 322.441 m
82.9297 340.754 181.199 370.117 275.789 417.047 c
275.789 427.59 l
179.355 381.754 80.668 356.234 0 342.047 c
0 322.441 l
f
0 229.895 m
73.2969 264.781 175.395 317.523 275.789 383.207 c
275.789 403.812 l
175.152 343.961 73.0469 297.98 0 268.219 c
0 229.895 l
f
63.3242 188.066 m
98.5898 188.066 l
150.824 224.094 213.004 269.918 275.789 322.852 c
275.789 333.289 l
261.355 322.129 247.074 311.332 233.086 300.852 c
173.129 255.938 112.922 217.512 63.3242 188.066 c
f
0 188.066 m
25.707 188.066 l
96.4727 228.008 187.051 283.469 275.789 349.996 c
275.789 356.41 l
161.719 276.578 65.6094 221.984 0 188.203 c
0 188.066 l
f
Q
true op
q
368.668 185.02 1332.232 204.945 re
W
[/Separation (Black) /DeviceCMYK
{0 0 0 4 -1 roll }
] {} cs
[1] sc
[1] sc
368.668 188.203 m
405.73 188.203 l
405.73 269.234 l
468.219 269.234 l
468.219 298.359 l
405.73 298.359 l
405.73 343.891 l
471.391 343.891 l
471.391 373.008 l
368.668 373.008 l
368.668 188.203 l
h
496.809 188.203 m
532.281 188.203 l
532.281 238.258 l
532.281 257.832 532.281 293.859 561.133 293.859 c
567.484 293.859 573.844 292.812 577.027 290.945 c
577.027 326.68 l
573.316 327.742 569.613 327.742 566.168 327.742 c
544.996 327.742 530.426 306.285 528.844 293.605 c
528.312 293.605 l
528.312 324.562 l
496.809 324.562 l
496.809 188.203 l
h
603.5 286.965 m
615.41 295.977 630.496 301.797 645.598 301.797 c
666.5 301.797 676.305 294.387 676.305 272.398 c
656.715 272.398 l
641.891 272.398 624.414 271.098 610.914 264.469 c
597.406 257.832 587.621 245.93 587.621 225.527 c
587.621 199.602 611.176 185.02 635.27 185.02 c
651.418 185.02 669.16 193.496 677.359 208.586 c
677.895 208.586 l
678.168 204.363 678.168 195.383 679.48 188.203 c
710.719 188.203 l
709.922 198.816 709.398 208.352 709.125 218.66 c
708.863 228.723 708.605 239.047 708.605 252.82 c
708.605 270.297 l
708.605 310.543 691.391 327.742 649.836 327.742 c
634.734 327.742 616.211 323.762 602.438 317.406 c
603.5 286.965 l
h
621.488 227.656 m
621.488 248.582 645.055 251.23 660.945 251.23 c
676.305 251.23 l
676.305 240.629 674.719 230.852 668.883 223.152 c
663.324 215.773 654.863 210.969 644.004 210.969 c
631.301 210.969 621.488 216.023 621.488 227.656 c
863.496 324.562 m
828.004 324.562 l
828.004 257.832 l
828.004 240.375 822.445 212.566 796.762 212.566 c
773.992 212.566 773.73 235.082 773.73 251.77 c
773.73 324.562 l
738.258 324.562 l
738.258 238.512 l
738.258 207.805 752.289 185.02 784.59 185.02 c
803.113 185.02 818.477 193.496 829.332 206.746 c
829.867 206.746 l
829.867 188.203 l
863.496 188.203 l
863.496 324.562 l
h
900.051 188.203 m
935.508 188.203 l
935.508 254.941 l
935.508 272.398 941.074 300.215 966.746 300.215 c
989.504 300.215 989.773 277.699 989.773 261.023 c
989.773 188.203 l
1025.27 188.203 l
1025.27 274.262 l
1025.27 304.977 1011.23 327.742 978.938 327.742 c
960.398 327.742 945.293 321.645 934.199 306.031 c
933.633 306.031 l
933.633 324.562 l
900.051 324.562 l
900.051 188.203 l
h
1061.79 188.203 m
1097.27 188.203 l
1097.27 254.941 l
1097.27 272.398 1102.83 300.215 1128.53 300.215 c
1151.29 300.215 1151.54 277.699 1151.54 261.023 c
1151.54 188.203 l
1186.99 188.203 l
1186.99 274.262 l
1186.99 304.977 1172.97 327.742 1140.69 327.742 c
1122.16 327.742 1106.8 319.262 1097.83 306.031 c
1097.27 306.031 l
1097.27 386.773 l
1061.79 386.773 l
1061.79 188.203 l
h
1209.5 255.449 m
1209.5 216.301 1235.74 185.02 1280.75 185.02 c
1326.02 185.02 1352.22 216.301 1352.22 255.449 c
1352.22 300.469 1321.27 327.742 1280.75 327.742 c
1240.51 327.742 1209.5 300.469 1209.5 255.449 c
1246.58 259.707 m
1246.58 280.094 1257.7 300.215 1280.75 300.215 c
1304.05 300.215 1315.16 280.621 1315.16 259.707 c
1315.16 236.93 1308.03 212.566 1280.75 212.566 c
1253.71 212.566 1246.58 237.203 1246.58 259.707 c
1387.7 188.203 m
1423.16 188.203 l
1423.16 298.621 l
1454.13 298.621 l
1454.13 324.562 l
1423.16 324.562 l
1423.16 341.508 l
1423.16 352.094 1426.88 362.434 1438.82 362.434 c
1446.47 362.434 1450.99 359.508 1454.13 357.652 c
1457.06 387.047 l
1450.19 388.629 1440.13 389.957 1431.12 389.957 c
1403.05 389.957 1387.7 370.898 1387.7 343.629 c
1387.7 324.562 l
1361.49 324.562 l
1361.49 298.621 l
1387.7 298.621 l
1387.7 188.203 l
h
1501 269.762 m
1502.62 288.027 1512.65 301.797 1532.51 301.797 c
1552.38 301.797 1560.33 286.965 1561.37 269.762 c
1501 269.762 l
h
1585.21 224.734 m
1571.95 217.332 1557.15 210.969 1539.91 210.969 c
1517.98 210.969 1502.62 223.406 1501 245.41 c
1595.24 245.41 l
1595.24 293.066 1580.96 327.742 1530.38 327.742 c
1488.05 327.742 1467.13 295.188 1467.13 255.734 c
1467.13 210.969 1493.32 185.02 1538.35 185.02 c
1557.42 185.02 1572.21 188.73 1585.21 195.891 c
1585.21 224.734 l
h
1620.68 188.203 m
1656.15 188.203 l
1656.15 238.258 l
1656.15 257.832 1656.15 293.859 1684.99 293.859 c
1691.36 293.859 1697.72 292.812 1700.9 290.945 c
1700.9 326.68 l
1697.16 327.742 1693.47 327.742 1690.03 327.742 c
1668.86 327.742 1654.3 306.285 1652.71 293.605 c
1652.17 293.605 l
1652.17 324.562 l
1620.68 324.562 l
1620.68 188.203 l
f
Q
q
0 0 1700.93 465.254 re
W
[/Separation (Black) /DeviceCMYK
{0 0 0 4 -1 roll }
] {} cs
[1] sc
[1] sc
1564.34 1.59375 17.9219 92.4609 re
f
1606.32 1.59375 17.918 92.4609 re
f
1675.84 81.0664 m
1674.3 81.0664 1672.76 80.8906 1671.23 80.5352 c
1669.61 80.1875 1668.07 79.5234 1666.62 78.5547 c
1665.25 77.6641 1664.1 76.3477 1663.16 74.5781 c
1662.23 72.8984 1661.76 70.7812 1661.76 68.2227 c
1661.76 66.2773 1662.35 64.6484 1663.54 63.3203 c
1664.75 61.9922 1666.24 60.8008 1668.03 59.7461 c
1669.99 58.6836 1672.13 57.7148 1674.42 56.8242 c
1676.65 55.8594 1678.99 54.8438 1681.46 53.7773 c
1683.95 52.8125 1686.33 51.6602 1688.63 50.3438 c
1691.03 48.9258 1693.12 47.207 1694.91 45.1758 c
1696.7 43.2344 1698.19 40.8906 1699.38 38.1523 c
1700.41 35.3203 1700.93 31.9258 1700.93 27.9492 c
1700.75 17.9688 1697.47 10.8203 1691.06 6.49219 c
1684.67 2.16797 1676.78 0 1667.39 0 c
1662.78 0 1658.9 0.351562 1655.74 1.06641 c
1652.5 1.67969 1648.74 2.51953 1644.47 3.57422 c
1646.14 20.2734 l
1652.45 16.5625 1659.2 14.6562 1666.37 14.5703 c
1670.03 14.5703 1673.57 15.5469 1676.99 17.4883 c
1680.4 19.4258 1682.15 22.4336 1682.24 26.4922 c
1682.24 28.6992 1681.73 30.6055 1680.7 32.1875 c
1679.5 33.7773 1678.01 35.1094 1676.22 36.1602 c
1672.29 38.2812 1667.81 40.3125 1662.78 42.2578 c
1660.3 43.3203 1657.96 44.5508 1655.74 45.9688 c
1653.44 47.2969 1651.3 48.8789 1649.34 50.7344 c
1647.55 52.6758 1646.05 55.0195 1644.86 57.7539 c
1643.66 60.4883 1643.07 63.7227 1643.07 67.4219 c
1643.24 77.6641 1646.52 85 1652.92 89.4141 c
1659.07 93.5664 1666.19 95.6445 1674.3 95.6445 c
1681.98 95.6445 1689.1 94.5312 1695.67 92.3242 c
1694.01 77.1016 l
1688.29 79.6562 1682.24 80.9766 1675.84 81.0664 c
f
Q
false op
/DeviceGray {} cs
[0] sc
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
