Metadata-Version: 2.1
Name: firstbatch
Version: 0.1.2
Summary: FirstBatch SDK for integrating user embeddings to your project. Add real-time personalization to your AI application without user data.
License: MIT
Author: andthattoo
Author-email: omer@firstbatch.xyz
Requires-Python: >=3.9,<3.13
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Provides-Extra: chromadb
Provides-Extra: pinecone
Provides-Extra: product
Provides-Extra: supabase
Provides-Extra: typesense
Provides-Extra: weaviate
Requires-Dist: asyncio (>=3.4.3,<4.0.0)
Requires-Dist: chromadb (>=0.4.13,<0.5.0) ; extra == "chromadb"
Requires-Dist: dataclasses-json (>=0.6.1,<0.7.0)
Requires-Dist: httpx (>=0.25.0,<0.26.0)
Requires-Dist: nanopq (>=0.2.0,<0.3.0) ; extra == "product"
Requires-Dist: numpy (>=1.26.0,<2.0.0)
Requires-Dist: pinecone-client (>=2.2.4,<3.0.0) ; extra == "pinecone"
Requires-Dist: pydantic (>=2.4.2,<3.0.0)
Requires-Dist: requests (>=2.31.0,<3.0.0)
Requires-Dist: tdigest (>=0.5.2.2,<0.6.0.0)
Requires-Dist: typesense (>=0.17.0,<0.18.0) ; extra == "typesense"
Requires-Dist: vecs (>=0.4.1,<0.5.0) ; extra == "supabase"
Requires-Dist: weaviate-client (>=3.24.2,<4.0.0) ; extra == "weaviate"
Description-Content-Type: text/markdown

# FirstBatch SDK

## Getting Started

1. **Installation**
    ```bash
    pip install firstbatch
    ```

2. **Initialize VectorDB of your choice**
    ```python
   api_key = os.environ["PINECONE_API_KEY"]
   env = os.environ["PINECONE_ENV"]

   pinecone.init(api_key=api_key, environment=env)
   index = pinecone.Index("your_index_name")
    ```

## Personalization

1. **Create a session with an Algorithm suiting your needs**
    ```python 
   session = personalized.session(algorithm=AlgorithmLabel.AI_AGENTS, vdbid="my_pinecone_db")
    ```

2. **Make recommendations**
    ```python
   session_id = session.data
   ids, batch = personalized.batch(session_id)
    ```
3. **Let users add signals to shape their embeddings**
   ```python
   user_pick = 0  # User liked the first content from the previous batch.
   personalized.add_signal(session_id, UserAction(Signal.LIKE), ids[user_pick])
   ```

## Support

For any issues or queries contact `support@firstbatch.com`.

  
## Resources

- [User Embedding Guide](https://firstbatch.gitbook.io/user-embeddings/)
- [SDK Documentation](https://firstbatch.gitbook.io/firstbatch-sdk/)

Feel free to dive into the technicalities and leverage FirstBatch SDK for highly personalized user experiences.

