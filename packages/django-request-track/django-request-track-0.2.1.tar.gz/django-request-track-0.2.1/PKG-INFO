Metadata-Version: 2.1
Name: django-request-track
Version: 0.2.1
Summary: Django package designed to capture and store HTTP requests essential information, including IP address, user model, user agent, HTTP method, timestamp, and more.
Home-page: https://github.com/PooyaRezaee/django-request-track
Author: PooyaRezaee
Author-email: pooya.rezaee.official@gmail.com
License: MIT
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Framework :: Django :: 4.1
Classifier: Framework :: Django :: 4.2
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Description-Content-Type: text/markdown
License-File: LICENSE

# django-request-logger

## Overview
'django-request-logger' is a Django package designed to capture and store HTTP requests essential information, including IP address, user model, user agent, HTTP method, timestamp, and more.

## Installation
Install the package using pip:
```Shell
    pip install django-request-tracker
```

## Usage
1. Add request_track to your INSTALLED_APPS in your Django project's settings:
    ```python
        INSTALLED_APPS = [
        # ...
        'request_track',
        # ...
        ]
    ```

2. Register the middleware in your MIDDLEWARE settings:
    ```python
        MIDDLEWARE = [
            # ...
            'request_track.middleware.LoggingRequestMiddleware'
        ]
    ```

3. Migrate:
    ```Shell
        python manage.py migrate
    ```

After it all work will be done automatically and you can see the information through the Django admin panel or work with the "RequestLog" model.
