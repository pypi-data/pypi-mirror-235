{"version":3,"file":"static/js/ParallelPlot.d9820af4.chunk.js","mappings":"gKA0IA,UAjHA,SAAgCA,GAC9B,IAAAC,EAA4BC,EAAAA,SAAc,WAAO,IAADC,EAAAC,EACxCC,GAAuB,QAAVF,EAAAH,EAAMM,YAAI,IAAAH,GAAK,QAALC,EAAVD,EAAa,UAAE,IAAAC,OAAL,EAAVA,EAAiBE,KAAKD,aAAc,GACjDE,EAAYF,EAAWG,KAAI,SAACC,GAAiB,MAAM,CACvDC,KAAMC,EAAAA,GAAUC,OAChBC,IAAKJ,EACLK,OAAQL,EACRM,cAAe,SACfC,eAAgB,QAChBC,aAAc,GACf,IAMD,MAAO,CAAEX,KAJaN,EAAMM,KAAKE,KAAI,SAACU,EAAMC,GAAC,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACxCF,EAAKZ,KAAKe,QAAM,IACnBR,IAAKK,EAAKL,KAAOM,GAAC,IAELZ,UAAAA,EAAWF,WAAAA,EAC5B,GAAG,CAACL,EAAMM,OAhBFA,EAAIL,EAAJK,KAAMC,EAASN,EAATM,UAkBRe,EAAsBpB,EAAAA,aAAkB,WAC5C,IAAIqB,EAAmB,CACrBjB,KAAAA,EACAC,UAAAA,EACAiB,OAAQ,CAAEC,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAChDC,OAAQ,aACRC,MAAO,SACPC,YAAa,EACbC,OAAQ,SAACC,GAAc,IAADC,EACdhB,EAAOlB,EAAMM,KAAK6B,MAAK,SAACjB,GAAU,OAAKA,EAAKL,MAAQoB,EAAEpB,GAAG,IAC/D,OAAkB,QAAlBqB,EAAW,OAAJhB,QAAI,IAAJA,OAAI,EAAJA,EAAMkB,aAAK,IAAAF,EAAAA,EAAI,MACxB,EACAG,MAAO,CACLC,QAAS,CACPC,UAAW,CACTC,WAAY,UACZC,SAAU,IAEZC,MAAO,CAAC,EACRC,KAAM,CAAC,EACPC,MAAO,CAAC,EACRC,UAAW,CAAC,EACZC,eAAgB,CAAC,GAEnBC,KAAM,CACJC,MAAO,CACL9B,KAAM,CACJ+B,OAAQ,UACRlB,YAAa,EACbmB,cAAe,WAGnBC,OAAQ,CACNjC,KAAM,CACJ+B,OAAQ,UACRlB,YAAa,EACbmB,cAAe,aAQvBE,QAAS,CACP,CACEC,OAAQ,QACRC,UAAW,SACXC,SAAS,EACTC,WAAY,IACZC,WAAY,EACZC,aAAc,EACdC,UAAW,GACXC,WAAY,GACZC,cAAe,gBACfC,YAAa,IACbC,WAAY,GACZC,QAAS,CACP,CACEC,GAAI,QACJC,MAAO,CACLJ,YAAa,QAQzB,OAAIxD,EAAK6D,OAAS,KACTC,EAAAA,EAAAA,KAACC,EAAAA,IAAmCjD,EAAAA,EAAAA,GAAA,GAAKG,KAGlDA,EAAoB,OAAI,CACtB,OACA,OACA,UACA,OACA,UACA,cACA,SAEFA,EAAY+C,UAAY,UAEjBF,EAAAA,EAAAA,KAACG,EAAAA,IAA6BnD,EAAAA,EAAAA,GAAA,GAAKG,IAC5C,GAAG,CAACjB,EAAMC,EAAWP,EAAMM,OAE3B,OACE8D,EAAAA,EAAAA,KAAA,OAAKI,UAAU,wBAAuBC,UACpCL,EAAAA,EAAAA,KAAC9C,EAAmB,KAG1B,C","sources":["pages/Board/components/VisualizationElements/ParallelPlotVizElement.tsx"],"sourcesContent":["import React from 'react';\n\nimport {\n  ResponsiveParallelCoordinates,\n  ResponsiveParallelCoordinatesCanvas,\n  // @ts-ignore @TODO: types doesn't exists yet\n} from '@nivo/parallel-coordinates';\n\nimport { ScaleEnum } from 'utils/d3';\n\ntype Datum = {\n  key: string | number;\n  [key: string]: number | string;\n};\n\ntype Line = {\n  key: string | number;\n  name: string;\n  color: string;\n  data: {\n    values: Record<string, number>;\n    dimensions: string[];\n  };\n};\n\nfunction ParallelPlotVizElement(props: { data: Line[] }) {\n  const { data, variables } = React.useMemo(() => {\n    const dimensions = props.data?.[0]?.data.dimensions || [];\n    const variables = dimensions.map((dimension: string) => ({\n      type: ScaleEnum.Linear,\n      key: dimension,\n      legend: dimension,\n      ticksPosition: 'before',\n      legendPosition: 'start',\n      legendOffset: 20,\n    }));\n\n    const data: Datum[] = props.data.map((line, i) => ({\n      ...line.data.values,\n      key: line.key || i,\n    }));\n    return { data, variables, dimensions };\n  }, [props.data]);\n\n  const ParallelPlotElement = React.useCallback(() => {\n    let commonProps: any = {\n      data,\n      variables,\n      margin: { top: 50, right: 60, bottom: 50, left: 60 },\n      layout: 'horizontal',\n      curve: 'linear',\n      strokeWidth: 2,\n      colors: (d: Datum) => {\n        const line = props.data.find((line: Line) => line.key === d.key);\n        return line?.color ?? '#000';\n      },\n      theme: {\n        tooltip: {\n          container: {\n            background: '#ffffff',\n            fontSize: 12,\n          },\n          basic: {},\n          chip: {},\n          table: {},\n          tableCell: {},\n          tableCellValue: {},\n        },\n        axis: {\n          ticks: {\n            line: {\n              stroke: '#dddddd',\n              strokeWidth: 1,\n              strokeLinecap: 'square',\n            },\n          },\n          domain: {\n            line: {\n              stroke: '#dddddd',\n              strokeWidth: 1,\n              strokeLinecap: 'square',\n            },\n          },\n        },\n      },\n      // @TODO: tooltip not working yet\n      // tooltip: CustomTooltipComponent,\n      // @TODO: legends not working yet\n      legends: [\n        {\n          anchor: 'right',\n          direction: 'column',\n          justify: false,\n          translateX: 100,\n          translateY: 0,\n          itemsSpacing: 2,\n          itemWidth: 60,\n          itemHeight: 20,\n          itemDirection: 'left-to-right',\n          itemOpacity: 0.85,\n          symbolSize: 20,\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemOpacity: 1,\n              },\n            },\n          ],\n        },\n      ],\n    };\n\n    if (data.length > 600) {\n      return <ResponsiveParallelCoordinatesCanvas {...commonProps} />;\n    }\n\n    commonProps['layers'] = [\n      'grid',\n      'axes',\n      'markers',\n      'mesh',\n      'legends',\n      'annotations',\n      'nodes',\n    ];\n    commonProps.blendMode = 'darken';\n\n    return <ResponsiveParallelCoordinates {...commonProps} />;\n  }, [data, variables, props.data]);\n\n  return (\n    <div className='VizComponentContainer'>\n      <ParallelPlotElement />\n    </div>\n  );\n}\n\nexport default ParallelPlotVizElement;\n"],"names":["props","_React$useMemo","React","_props$data","_props$data$","dimensions","data","variables","map","dimension","type","ScaleEnum","Linear","key","legend","ticksPosition","legendPosition","legendOffset","line","i","_objectSpread","values","ParallelPlotElement","commonProps","margin","top","right","bottom","left","layout","curve","strokeWidth","colors","d","_line$color","find","color","theme","tooltip","container","background","fontSize","basic","chip","table","tableCell","tableCellValue","axis","ticks","stroke","strokeLinecap","domain","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","style","length","_jsx","ResponsiveParallelCoordinatesCanvas","blendMode","ResponsiveParallelCoordinates","className","children"],"sourceRoot":""}