{"version":3,"file":"static/js/Markdown.6bbfa7be.chunk.js","mappings":"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","sources":["hooks/useCodeHighlighter.ts","components/CodeBlock/CodeBlock.style.ts","components/CodeBlock/CodeBlock.tsx","config/monacoConfig/monacoConfig.ts","pages/Board/components/VisualizationElements/MarkdownVizElement.tsx"],"sourcesContent":["import React from 'react';\n\nimport { useMonaco } from '@monaco-editor/react';\n\nimport { getMonacoConfig } from 'config/monacoConfig/monacoConfig';\n\nfunction useCodeHighlighter(language: string = 'python') {\n  const monaco = useMonaco();\n  const preRef = React.useRef<HTMLPreElement | any>(null);\n\n  const monacoConfig: Record<string | number | symbol, any> =\n    React.useMemo(() => {\n      return getMonacoConfig();\n    }, []);\n\n  React.useEffect(() => {\n    if (monaco && preRef.current) {\n      monacoConfig.theme.config.colors = {\n        ...monacoConfig.theme.config.colors,\n        'editor.background': '#f2f3f4',\n      };\n      monaco.editor.defineTheme(\n        monacoConfig.theme.name,\n        monacoConfig.theme.config,\n      );\n      monaco.editor.setTheme(monacoConfig.theme.name);\n      monaco.editor.colorizeElement(preRef.current, { theme: language });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [monaco]);\n  return { elementRef: preRef };\n}\n\nexport default useCodeHighlighter;\n","import { styled } from 'config/stitches';\n\nconst CopyToClipboardButton = styled('div', {\n  visibility: 'hidden',\n  top: '0.75rem',\n  right: '1rem',\n  display: 'inline-block',\n  cursor: 'pointer',\n  position: 'absolute',\n  ai: 'center',\n  jc: 'center',\n});\n\nconst CodeBlockContainer = styled('div', {\n  background: '#f2f3f4',\n  br: '$3',\n  p: '$9 3rem $9 $9',\n  position: 'relative',\n  minHeight: '3.5rem',\n  display: 'flex',\n  ai: 'center',\n  overflow: 'auto',\n  '&:hover': {\n    [`${CopyToClipboardButton}`]: {\n      visibility: 'visible',\n    },\n  },\n});\n\nconst CodeBlockPre = styled('pre', {\n  margin: 0,\n  fontStyle: 'normal',\n  fontSize: '$4',\n  lh: '1.3125rem',\n  overflow: 'auto',\n  fontMono: 15,\n});\n\nexport { CopyToClipboardButton, CodeBlockContainer, CodeBlockPre };\n","import React from 'react';\n\nimport CopyToClipBoard from 'components/CopyToClipBoard/CopyToClipBoard';\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\n\nimport useCodeHighlighter from 'hooks/useCodeHighlighter';\n\nimport { ICodeBlockProps } from 'types/components/CodeBlock/CodeBlock';\n\nimport {\n  CodeBlockContainer,\n  CodeBlockPre,\n  CopyToClipboardButton,\n} from './CodeBlock.style';\n\nfunction CodeBlock({\n  code = '',\n  className = '',\n  language = 'python',\n  hideCopyIcon = false,\n}: ICodeBlockProps): React.FunctionComponentElement<React.ReactNode> {\n  const { elementRef } = useCodeHighlighter(language);\n\n  return (\n    <ErrorBoundary>\n      <CodeBlockContainer className={`CodeBlock ${className} `}>\n        <CodeBlockPre\n          as='pre'\n          className='ScrollBar__hidden'\n          data-lang={language}\n          ref={elementRef}\n        >\n          {code}\n        </CodeBlockPre>\n        <ErrorBoundary>\n          {hideCopyIcon ? null : (\n            <CopyToClipboardButton>\n              <CopyToClipBoard contentRef={elementRef} />\n            </CopyToClipboardButton>\n          )}\n        </ErrorBoundary>\n      </CodeBlockContainer>\n    </ErrorBoundary>\n  );\n}\n\nexport default React.memo(CodeBlock);\n","import { AppNameEnum } from 'types/global.d';\n\nconst WHITE = '#fff';\nconst TEXT_COLOR = '#414b6d';\nconst BORDER_COLOR = '#a1c7f5';\nexport const getMonacoConfig = (advanced = false): Record<any, any> => ({\n  height: advanced ? '62px' : '24px',\n  options: {\n    lineNumbers: 'off',\n    minimap: { enabled: false },\n    fontFamily: '\"Inconsolata\", monospace',\n    wordWrap: advanced ? 'on' : 'off',\n    fontSize: 16,\n    fontWeight: '500',\n    lineNumbersMinChars: 0,\n    overviewRulerLanes: 0,\n    overviewRulerBorder: false,\n    lineDecorationsWidth: 0,\n    hideCursorInOverviewRuler: true,\n    contextmenu: false,\n    glyphMargin: false,\n    wordBasedSuggestions: false,\n    folding: false,\n    scrollBeyondLastColumn: 0,\n    renderLineHighlight: 'none',\n    scrollbar: { horizontal: 'hidden', vertical: 'hidden' },\n    find: {\n      addExtraSpaceOnTop: false,\n      autoFindInSelection: 'never',\n      seedSearchStringFromSelection: 'never',\n    },\n  },\n  theme: {\n    name: 'aim-theme',\n    config: {\n      base: 'vs',\n      inherit: true,\n      rules: [{ background: 'ffffff' }],\n      colors: {\n        'editor.foreground': TEXT_COLOR,\n        'editor.background': WHITE,\n        'editorCursor.foreground': '#83899e',\n        'dropdown.background': WHITE,\n        'editorSuggestWidget.background': WHITE,\n        'editorSuggestWidget.border': BORDER_COLOR,\n        'editorSuggestWidget.selectedBackground': '#dceafb',\n        'editorSuggestWidget.selectedForeground': TEXT_COLOR,\n        'editorSuggestWidget.highlightForeground': '#1c2852',\n        'editorSuggestWidget.focusHighlightForeground': '#1c2852',\n        'editorSuggestWidget.foreground': TEXT_COLOR,\n        'list.hoverBackground': '#f3f8fe',\n        'scrollbar.shadow': WHITE,\n        'editorHoverWidget.background': WHITE,\n        'editorHoverWidget.border': BORDER_COLOR,\n        'editorHoverWidget.statusBarBackground': WHITE,\n        'editorHoverWidget.foreground': TEXT_COLOR,\n      },\n    },\n  },\n});\n\nexport const monacoSyntaxHighlighter: any = {\n  ...getMonacoConfig().options,\n  readonly: true,\n};\nexport const getSuggestionsByExplorer = (\n  explorerName: AppNameEnum,\n  data: Record<any, any>,\n): Record<any, any> => {\n  const defaultSuggestions = {\n    run: {\n      active: false,\n      hash: '',\n      name: '',\n      experiment: '',\n      tags: '',\n      archived: false,\n      created_at: 0,\n      finalized_at: 0,\n      duration: 0,\n      ...(data?.params || {}),\n    },\n  };\n\n  const explorersList = {\n    [AppNameEnum.METRICS]: defaultSuggestions,\n    [AppNameEnum.FIGURES]: defaultSuggestions,\n    [AppNameEnum.FIGURES3D]: defaultSuggestions,\n    [AppNameEnum.AUDIOS]: defaultSuggestions,\n    [AppNameEnum.TEXT]: defaultSuggestions,\n  };\n  return explorersList[explorerName] || defaultSuggestions;\n};\n","import * as React from 'react';\nimport ReactMarkdown from 'react-markdown';\n\nimport { Box } from 'components/kit_v2';\nimport CodeBlock from 'components/CodeBlock/CodeBlock';\n\nimport { styled } from 'config/stitches';\n\nconst MarkdownVizElementContainer = styled(Box, {\n  width: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '$13',\n  color: '$textPrimary',\n  fontFamily: '$inter',\n  fontSize: '$3',\n  fontWeight: '$2',\n  '& h3': {\n    fontSize: '$6',\n    fontWeight: '$2',\n    color: '$textPrimary',\n  },\n  '& h2': {\n    fontSize: '$9',\n    fontWeight: '$2',\n  },\n});\n\nconst markdownComponentsOverride = {\n  code({ inline, children }: any) {\n    if (inline) {\n      return <pre style={{ display: 'inline-block' }}>{children[0]}</pre>;\n    }\n\n    return <CodeBlock code={children[0].trim()} />;\n  },\n};\n\nfunction MarkdownVizElement(props: any) {\n  return (\n    <MarkdownVizElementContainer>\n      <ReactMarkdown components={markdownComponentsOverride}>\n        {props.data}\n      </ReactMarkdown>\n    </MarkdownVizElementContainer>\n  );\n}\n\nexport default MarkdownVizElement;\n"],"names":["language","arguments","length","undefined","monaco","useMonaco","preRef","React","monacoConfig","getMonacoConfig","current","theme","config","colors","_objectSpread","editor","defineTheme","name","setTheme","colorizeElement","elementRef","CopyToClipboardButton","styled","visibility","top","right","display","cursor","position","ai","jc","CodeBlockContainer","background","br","p","minHeight","overflow","_defineProperty","concat","CodeBlockPre","margin","fontStyle","fontSize","lh","fontMono","CodeBlock","_ref","_ref$code","code","_ref$className","className","_ref$language","_ref$hideCopyIcon","hideCopyIcon","useCodeHighlighter","_jsx","ErrorBoundary","children","_jsxs","as","ref","CopyToClipBoard","contentRef","WHITE","TEXT_COLOR","BORDER_COLOR","advanced","height","options","lineNumbers","minimap","enabled","fontFamily","wordWrap","fontWeight","lineNumbersMinChars","overviewRulerLanes","overviewRulerBorder","lineDecorationsWidth","hideCursorInOverviewRuler","contextmenu","glyphMargin","wordBasedSuggestions","folding","scrollBeyondLastColumn","renderLineHighlight","scrollbar","horizontal","vertical","find","addExtraSpaceOnTop","autoFindInSelection","seedSearchStringFromSelection","base","inherit","rules","getSuggestionsByExplorer","readonly","explorerName","data","_explorersList","defaultSuggestions","run","active","hash","experiment","tags","archived","created_at","finalized_at","duration","params","AppNameEnum","METRICS","FIGURES","FIGURES3D","AUDIOS","TEXT","MarkdownVizElementContainer","Box","width","flexDirection","gap","color","markdownComponentsOverride","inline","style","trim","props","ReactMarkdown","components"],"sourceRoot":""}