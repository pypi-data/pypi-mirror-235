{"version":3,"file":"static/js/Apps.b1ef76fe.chunk.js","mappings":"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","sources":["components/Illustration/Illustration.tsx","components/Illustration/config.tsx","components/Illustration/index.ts","pages/Apps/Apps.style.tsx","../node_modules/@tabler/icons-react/src/icons/IconUserCircle.js","pages/Apps/components/AppCard.tsx","pages/Apps/Apps.tsx"],"sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nimport { Text } from 'components/kit';\nimport { ITextProps } from 'components/kit/Text';\n\nimport {\n  IIllustrationProps,\n  ILLUSTRATION_TYPES,\n  ILLUSTRATION_LIST,\n  getDefaultIllustrationContent,\n  IllustrationSizeType,\n} from '.';\n\nimport './Illustration.scss';\n\nconst CONTENT_PROPS: Record<IllustrationSizeType, ITextProps> = {\n  small: {\n    size: 12,\n  },\n  medium: {\n    size: 14,\n  },\n  large: {\n    size: 16,\n  },\n  xLarge: {\n    size: 18,\n  },\n};\n\nfunction Illustration({\n  type = ILLUSTRATION_TYPES.Never_Executed,\n  content = getDefaultIllustrationContent(type),\n  image,\n  className = '',\n  size = 'xLarge',\n  showImage = true,\n  children,\n}: IIllustrationProps): React.FunctionComponentElement<React.ReactNode> {\n  return (\n    <div className={classNames('Illustration', { [className]: !!className })}>\n      <div className='Illustration__container'>\n        {showImage ? (\n          <div\n            className={classNames('Illustration__container__img', {\n              [`Illustration__container__img__${size}`]: true,\n            })}\n          >\n            {image || ILLUSTRATION_LIST[type]}\n          </div>\n        ) : null}\n        <Text\n          component='p'\n          className='Illustration__container__content'\n          {...CONTENT_PROPS[size]}\n        >\n          {content}\n        </Text>\n        {children}\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(Illustration);\n","import * as React from 'react';\n\nimport { ReactComponent as EmptyBookmarks } from 'assets/illustrations/emptyBookmarks.svg';\nimport { ReactComponent as EmptySearch } from 'assets/illustrations/emptySearch.svg';\nimport { ReactComponent as ExploreData } from 'assets/illustrations/exploreData.svg';\nimport { ReactComponent as WrongSearch } from 'assets/illustrations/wrongSearch.svg';\n\nimport { DOCUMENTATIONS } from 'config/references';\n\nimport { PipelineStatusEnum } from 'modules/core/engine/types';\n\nimport { IllustrationType } from '.';\n\nconst ILLUSTRATION_TYPES: Record<string, IllustrationType> = {\n  Never_Executed: PipelineStatusEnum.Never_Executed,\n  Insufficient_Resources: PipelineStatusEnum.Insufficient_Resources,\n  Empty: PipelineStatusEnum.Empty,\n  Failed: PipelineStatusEnum.Failed,\n  Empty_Bookmarks: 'emptyBookmarks',\n  Empty_Boards: 'emptyBoards',\n  Empty_Reports: 'emptyReports',\n  Empty_Apps: 'emptyApps',\n};\n\nconst ILLUSTRATION_LIST: Record<IllustrationType, React.ReactNode> = {\n  [ILLUSTRATION_TYPES.Never_Executed]: <ExploreData />,\n  [ILLUSTRATION_TYPES.Insufficient_Resources]: <ExploreData />,\n  [ILLUSTRATION_TYPES.Empty]: <EmptySearch />,\n  [ILLUSTRATION_TYPES.Failed]: <WrongSearch />,\n  [ILLUSTRATION_TYPES.Empty_Bookmarks]: <EmptyBookmarks />,\n  [ILLUSTRATION_TYPES.Empty_Boards]: <EmptyBookmarks />,\n  [ILLUSTRATION_TYPES.Empty_Reports]: <EmptyBookmarks />,\n  [ILLUSTRATION_TYPES.Empty_Apps]: <EmptyBookmarks />,\n};\n\nfunction getDefaultIllustrationContent(\n  type: IllustrationType = ILLUSTRATION_TYPES.Never_Executed,\n): React.ReactNode {\n  const Never_Executed = (\n    <>\n      Itâ€™s super easy to search Aim experiments. Just start typing your query in\n      the search bar above.\n      <br />\n      Look up\n      <a\n        className='qlAnchor'\n        href={DOCUMENTATIONS.EXPLORERS.SEARCH}\n        target='_blank'\n        rel='noreferrer'\n      >\n        search docs\n      </a>\n      to learn more.\n    </>\n  );\n  const Failed = 'Incorrect Query';\n  const Insufficient_Resources = \"You don't have any tracked data\";\n  const Empty = 'No Results';\n  const Empty_Bookmarks = \"You don't have any saved bookmark\";\n  const Empty_Boards = \"You don't have any board created\";\n  const Empty_Reports = \"You don't have any report created\";\n  const Empty_Apps = \"You don't have any installed apps\";\n\n  const CONTENT = {\n    [ILLUSTRATION_TYPES.Never_Executed]: Never_Executed,\n    [ILLUSTRATION_TYPES.Failed]: Failed,\n    [ILLUSTRATION_TYPES.Insufficient_Resources]: Insufficient_Resources,\n    [ILLUSTRATION_TYPES.Empty]: Empty,\n    [ILLUSTRATION_TYPES.Empty_Bookmarks]: Empty_Bookmarks,\n    [ILLUSTRATION_TYPES.Empty_Boards]: Empty_Boards,\n    [ILLUSTRATION_TYPES.Empty_Reports]: Empty_Reports,\n    [ILLUSTRATION_TYPES.Empty_Apps]: Empty_Apps,\n  };\n  return CONTENT[type] || null;\n}\n\nexport { ILLUSTRATION_TYPES, ILLUSTRATION_LIST, getDefaultIllustrationContent };\n","import Illustration from './Illustration';\n\nexport * from './Illustration.d';\nexport * from './config';\n\nexport default Illustration;\n","import { Box } from 'components/kit_v2';\n\nimport { styled } from 'config/stitches';\nimport { LayoutContainer } from 'config/stitches/foundations/layout';\n\nconst AppsContainer = styled(LayoutContainer, {\n  $$space: '$space$15',\n  py: '$$space',\n  height: 'calc(100vh - $$space)',\n  overflowY: 'auto',\n});\n\nconst AppsCardWrapper = styled('div', {\n  mt: '$9',\n  display: 'flex',\n  flexWrap: 'wrap',\n  gap: '$13',\n});\n\nconst AppCardContainer = styled(Box, {\n  width: '426px',\n  height: '132px',\n  border: '1px solid #B5C4D3',\n  br: '$3',\n  p: '$13',\n  display: 'flex',\n  fd: 'column',\n});\n\nconst AppCardHeader = styled('div', {\n  display: 'flex',\n  ai: 'center',\n});\n\nexport { AppsContainer, AppsCardWrapper, AppCardContainer, AppCardHeader };\n","import createReactComponent from '../createReactComponent';\nexport default createReactComponent('user-circle', 'IconUserCircle', [\n  ['path', { d: 'M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0', key: 'svg-0' }],\n  ['path', { d: 'M12 10m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0', key: 'svg-1' }],\n  [\n    'path',\n    {\n      d: 'M6.168 18.849a4 4 0 0 1 3.832 -2.849h4a4 4 0 0 1 3.834 2.855',\n      key: 'svg-2',\n    },\n  ],\n]);\n","import React from 'react';\n\nimport { IconUserCircle } from '@tabler/icons-react';\n\nimport { Badge, Box, Icon, Link, Text, Tooltip } from 'components/kit_v2';\n\nimport { PathEnum } from 'config/enums/routesEnum';\n\nimport { AppCardContainer, AppCardHeader } from '../Apps.style';\n\nfunction AppCard({ name, description, author, category }: any) {\n  return (\n    <AppCardContainer key={name}>\n      <AppCardHeader>\n        <Link\n          css={{ flex: 1 }}\n          fontWeight='$4'\n          fontSize='$6'\n          ellipsis\n          title={name}\n          to={PathEnum.App.replace(':appName', name)}\n        >\n          {name}\n        </Link>\n      </AppCardHeader>\n      <Box display='flex' flex={1} jc='space-between' fd='column'>\n        <Tooltip\n          content={description ?? null}\n          contentProps={{ side: 'bottom' }}\n        >\n          <Box mt='$5' flex='1'>\n            <Text\n              ellipsis\n              color={description ? '$textPrimary' : '$textPrimary50'}\n              as='p'\n            >\n              {description || 'No description yet'}\n            </Text>\n          </Box>\n        </Tooltip>\n        <Box display='flex' ai='center' jc='space-between'>\n          <Box display='flex' ai='center'>\n            <Icon\n              size='md'\n              css={{ mr: '$3' }}\n              color='$secondary100'\n              icon={<IconUserCircle />}\n            />\n            <Text color='$secondary100' weight='$2'>\n              {author ?? 'Unknown'}\n            </Text>\n          </Box>\n          {category && <Badge size='sm' label={category} />}\n        </Box>\n      </Box>\n    </AppCardContainer>\n  );\n}\n\nAppCard.displayName = 'AppCard';\n\nexport default React.memo(AppCard);\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\n\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\nimport { Box, Input, Separator, Text } from 'components/kit_v2';\nimport BusyLoaderWrapper from 'components/BusyLoaderWrapper/BusyLoaderWrapper';\nimport Illustration, { ILLUSTRATION_TYPES } from 'components/Illustration';\n\nimport { TopBar } from 'config/stitches/foundations/layout';\n\nimport usePyodide from 'services/pyodide/usePyodide';\n\nimport { AppsCardWrapper, AppsContainer } from './Apps.style';\nimport AppCard from './components/AppCard';\n\nfunction Apps(): React.FunctionComponentElement<React.ReactNode> {\n  const { packages, isLoading } = usePyodide();\n  const [searchValue, setSearchValue] = React.useState<string>('');\n\n  const categories = React.useMemo(() => {\n    if (_.isEmpty(packages)) return {};\n\n    const result: Record<string, any> = {};\n\n    for (let pkg in packages) {\n      const { category } = packages[pkg];\n\n      if (!result.hasOwnProperty(category)) {\n        result[category ?? 'Unknown'] = [];\n      }\n      result[category ?? 'Unknown'].push(packages[pkg]);\n    }\n\n    return result;\n  }, [packages]);\n\n  return (\n    <ErrorBoundary>\n      <TopBar>\n        <Text weight='$3'>APPS</Text>\n      </TopBar>\n      <AppsContainer>\n        <BusyLoaderWrapper isLoading={isLoading} height={'100%'}>\n          {_.isEmpty(categories) ? (\n            <Illustration type={ILLUSTRATION_TYPES.Empty_Apps} />\n          ) : (\n            <>\n              <Box display='flex' ai='center'>\n                <Box flex={1}>\n                  <Input\n                    inputSize='lg'\n                    value={searchValue}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                      setSearchValue(e.target.value)\n                    }\n                    css={{ maxWidth: 380 }}\n                    placeholder='Search'\n                  />\n                </Box>\n              </Box>\n              {Object.keys(categories).map((category: string) => {\n                const filteredPackages = categories[category].filter(\n                  (pkg: any) =>\n                    pkg.name\n                      .toLowerCase()\n                      .includes(searchValue.trim().toLowerCase()),\n                );\n\n                return (\n                  filteredPackages.length > 0 && (\n                    <Box key={category} mt='$8'>\n                      <Text weight='$3' color='$textPrimary' size='$8'>\n                        {category}\n                      </Text>\n                      <Separator css={{ mt: '$4' }} />\n                      <AppsCardWrapper>\n                        {filteredPackages.map((pkg: any) => (\n                          <AppCard key={pkg.name} {...pkg} />\n                        ))}\n                      </AppsCardWrapper>\n                    </Box>\n                  )\n                );\n              })}\n            </>\n          )}\n        </BusyLoaderWrapper>\n      </AppsContainer>\n    </ErrorBoundary>\n  );\n}\n\nexport default Apps;\n"],"names":["CONTENT_PROPS","small","size","medium","large","xLarge","Illustration","_ref","_ref$type","type","ILLUSTRATION_TYPES","Never_Executed","_ref$content","content","getDefaultIllustrationContent","image","_ref$className","className","_ref$size","_ref$showImage","showImage","children","_jsx","classNames","_defineProperty","_jsxs","concat","ILLUSTRATION_LIST","Text","_objectSpread","component","React","PipelineStatusEnum","Insufficient_Resources","Empty","Failed","Empty_Bookmarks","Empty_Boards","Empty_Reports","Empty_Apps","_ILLUSTRATION_LIST","ExploreData","EmptySearch","WrongSearch","EmptyBookmarks","_CONTENT","arguments","length","undefined","_Fragment","href","DOCUMENTATIONS","EXPLORERS","SEARCH","target","rel","AppsContainer","styled","LayoutContainer","$$space","py","height","overflowY","AppsCardWrapper","mt","display","flexWrap","gap","AppCardContainer","Box","width","border","br","p","fd","AppCardHeader","ai","IconUserCircle","createReactComponent","d","key","AppCard","name","description","author","category","Link","css","flex","fontWeight","fontSize","ellipsis","title","to","PathEnum","App","replace","jc","Tooltip","contentProps","side","color","as","Icon","mr","icon","weight","Badge","label","displayName","_usePyodide","usePyodide","packages","isLoading","_React$useState","_React$useState2","_slicedToArray","searchValue","setSearchValue","categories","_","result","pkg","hasOwnProperty","push","ErrorBoundary","TopBar","BusyLoaderWrapper","Input","inputSize","value","onChange","e","maxWidth","placeholder","Object","keys","map","filteredPackages","filter","toLowerCase","includes","trim","Separator"],"sourceRoot":""}