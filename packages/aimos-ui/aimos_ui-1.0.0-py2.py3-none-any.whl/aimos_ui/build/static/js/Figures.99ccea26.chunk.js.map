{"version":3,"file":"static/js/Figures.99ccea26.chunk.js","mappings":"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","sources":["components/FigureBox/FigureBox.tsx","components/FigureBox/index.ts","pages/Board/components/FiguresList.tsx","pages/Board/components/VisualizationElements/FiguresVizElement.tsx"],"sourcesContent":["import React from 'react';\nimport Plot from 'react-plotly.js';\nimport { useFigureBlobURI } from 'hooks';\n\nimport ErrorBoundary from 'components/ErrorBoundary';\nimport { Spinner } from 'components/kit';\n\nimport { FigureBoxProps } from './';\n\nfunction FigureBox(props: FigureBoxProps) {\n  const [scale, setScale] = React.useState<number>(1);\n  const [visibility, setVisibility] =\n    React.useState<React.CSSProperties['visibility']>('hidden');\n\n  const containerRef = React.useRef<HTMLDivElement | null>(null);\n\n  const { data } = useFigureBlobURI(props);\n  function setContainerScale() {\n    const container = containerRef.current;\n    let plot = container?.firstChild;\n    let parentElement = container?.parentElement;\n    if (container && plot && parentElement) {\n      let width = container.offsetWidth + 20;\n      let height = container.offsetHeight + 20;\n      let containerWidth = parentElement.offsetWidth;\n      let containerHeight = parentElement.offsetHeight - 30;\n      let wK = containerWidth / width; // Calculate width ratio\n      let hK = containerHeight / height; // Calculate height ratio\n      if (wK < 1 || hK < 1) {\n        setScale(Math.min(wK, hK)); // Apply scale based on object-fit: 'contain' pattern\n      } else {\n        setScale(1);\n      }\n    }\n  }\n\n  function onAutoSize() {\n    window.requestAnimationFrame(() => {\n      if (containerRef.current) {\n        setContainerScale();\n        setVisibility('visible');\n      }\n    });\n  }\n\n  React.useEffect(() => {\n    if (containerRef.current && props.style) {\n      setContainerScale();\n    }\n  }, [props.style]);\n\n  return (\n    <ErrorBoundary>\n      <div\n        ref={containerRef}\n        style={{\n          display: 'inline-block',\n          transform: data ? `scale(${scale})` : '',\n        }}\n      >\n        {data ? (\n          <Plot\n            style={{ visibility }}\n            data={data.data || []}\n            layout={{ ...(data.layout || {}) }}\n            frames={data.frames}\n            useResizeHandler={true}\n            onAutoSize={onAutoSize}\n            onInitialized={onAutoSize}\n            onUpdate={onAutoSize}\n          />\n        ) : (\n          <Spinner size={24} thickness={2} />\n        )}\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nexport default FigureBox;\n","import FigureBox from './FigureBox';\n\nexport * from './FigureBox.d';\nexport default FigureBox;\n","import * as React from 'react';\n\nimport FigureBox from 'components/FigureBox';\n\nimport pyodideEngine from 'services/pyodide/store';\n\nfunction FiguresList(props: any) {\n  const data = props.data.map((figure: any) => ({\n    ...figure,\n    ...figure.data,\n    ...figure.figures,\n    ...figure.record,\n  }));\n\n  const boxKey = (item: any) =>\n    `${item?.container?.hash}_${item.name}_${JSON.stringify(item.context)}_${\n      item.step\n    }`;\n  return (\n    <div\n      className='FiguresList'\n      style={{\n        overflow: 'hidden',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: 200,\n        width: 300,\n      }}\n    >\n      {data.map((item: any) => (\n        <FigureBox\n          key={boxKey(item)}\n          blobData={item.blobs.data}\n          format={item.format}\n          name={item.name}\n          context={item.context}\n          step={item.step}\n          engine={{\n            blobURI: pyodideEngine.blobURI,\n          }}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default FiguresList;\n","import * as React from 'react';\n\nimport FiguresList from '../FiguresList';\n\nfunction FiguresVizElement(props: any) {\n  return <FiguresList key={Date.now()} data={props.data} />;\n}\nexport default FiguresVizElement;\n"],"names":["props","_React$useState","React","_React$useState2","_slicedToArray","scale","setScale","_React$useState3","_React$useState4","visibility","setVisibility","containerRef","data","useFigureBlobURI","setContainerScale","container","current","plot","firstChild","parentElement","width","offsetWidth","height","offsetHeight","wK","hK","Math","min","onAutoSize","window","requestAnimationFrame","style","_jsx","ErrorBoundary","children","ref","display","transform","concat","Plot","layout","_objectSpread","frames","useResizeHandler","onInitialized","onUpdate","Spinner","size","thickness","map","figure","figures","record","className","overflow","alignItems","justifyContent","item","FigureBox","blobData","blobs","format","name","context","step","engine","blobURI","pyodideEngine","_item$container","hash","JSON","stringify","boxKey","FiguresList","Date","now"],"sourceRoot":""}