{"version":3,"file":"static/js/TextInput.f5062f21.chunk.js","mappings":"sJAkCA,UA5BA,SAA6BA,GAC3B,IAAMC,EAAWC,EAAAA,aAAkB,SAAAC,GAAiB,IAADC,EAAbC,EAAMF,EAANE,OACrB,QAAfD,EAAAJ,EAAMM,iBAAS,IAAAF,GAAfA,EAAiBG,UAAUF,EAAOG,MAEpC,GAAG,IACGC,EAAKP,EAAAA,QAAcQ,EAAAA,EAAY,IACrC,OACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CAACC,KAAM,EAAEC,SAAA,CACVd,EAAMe,QAAQC,QACbC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CACHC,GAAG,QACHC,QAASX,EACTY,WAAY,IACZC,SAAUtB,EAAMe,QAAQO,SAASR,SAEhCd,EAAMe,QAAQC,SAGnBC,EAAAA,EAAAA,KAACM,EAAAA,GAAK,CACJd,GAAIA,EACJD,MAAOR,EAAMe,QAAQP,MACrBc,SAAUtB,EAAMe,QAAQO,SACxBrB,SAAUA,MAIlB,C","sources":["pages/Board/components/VisualizationElements/TextInputVizElement.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { Box, Input, Text } from 'components/kit_v2';\n\nimport generateId from 'utils/generateId';\n\nfunction TextInputVizElement(props: any) {\n  const onChange = React.useCallback(({ target }) => {\n    props.callbacks?.on_change(target.value);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const id = React.useMemo(generateId, []);\n  return (\n    <Box flex={1}>\n      {props.options.label && (\n        <Text\n          as='label'\n          htmlFor={id}\n          lineHeight={1.5}\n          disabled={props.options.disabled}\n        >\n          {props.options.label}\n        </Text>\n      )}\n      <Input\n        id={id}\n        value={props.options.value}\n        disabled={props.options.disabled}\n        onChange={onChange}\n      />\n    </Box>\n  );\n}\n\nexport default TextInputVizElement;\n"],"names":["props","onChange","React","_ref","_props$callbacks","target","callbacks","on_change","value","id","generateId","_jsxs","Box","flex","children","options","label","_jsx","Text","as","htmlFor","lineHeight","disabled","Input"],"sourceRoot":""}