{"version":3,"file":"static/js/App.4e7c3140.chunk.js","mappings":"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","sources":["pages/Apps/App.style.tsx","../node_modules/@tabler/icons-react/src/icons/IconBrandPython.js","pages/Apps/components/AppSidebar.tsx","pages/Apps/components/AppWrapper.tsx","pages/Apps/components/AppPage.tsx","pages/Apps/App.tsx","pages/Apps/useApp.tsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\n\nimport { styled } from 'config/stitches';\n\nimport { Box } from '../../components/kit_v2';\n\nconst AppContainer = styled('div', {\n  height: '100vh',\n  width: '100%',\n  overflow: 'hidden',\n  '.ant-tree-node-content-wrapper': {\n    position: 'unset !important',\n  },\n});\n\nconst BoardWrapper = styled(Box, {\n  flex: 1,\n  width: 'calc(100% - 200px)',\n});\n\nconst BoardLink = styled(NavLink, {\n  display: 'flex',\n  padding: '0 $4',\n  ai: 'center',\n  color: 'unset',\n  textDecoration: 'none',\n  borderRadius: '$3',\n  '&:after': {\n    position: 'absolute',\n    content: '\"\"',\n    display: 'block',\n    width: '187px',\n    height: '28px',\n    left: '0',\n  },\n});\n\nexport { AppContainer, BoardWrapper, BoardLink };\n","import createReactComponent from '../createReactComponent';\nexport default createReactComponent('brand-python', 'IconBrandPython', [\n  ['path', { d: 'M12 9h-7a2 2 0 0 0 -2 2v4a2 2 0 0 0 2 2h3', key: 'svg-0' }],\n  [\n    'path',\n    { d: 'M12 15h7a2 2 0 0 0 2 -2v-4a2 2 0 0 0 -2 -2h-3', key: 'svg-1' },\n  ],\n  [\n    'path',\n    {\n      d: 'M8 9v-4a2 2 0 0 1 2 -2h4a2 2 0 0 1 2 2v5a2 2 0 0 1 -2 2h-4a2 2 0 0 0 -2 2v5a2 2 0 0 0 2 2h4a2 2 0 0 0 2 -2v-4',\n      key: 'svg-2',\n    },\n  ],\n  ['path', { d: 'M11 6l0 .01', key: 'svg-3' }],\n  ['path', { d: 'M13 18l0 .01', key: 'svg-4' }],\n]);\n","import * as React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useResizeObserver } from 'hooks';\n\nimport { IconBrandPython } from '@tabler/icons-react';\n\nimport { Box, Tree, Icon, Text } from 'components/kit_v2';\n\nimport { PathEnum } from 'config/enums/routesEnum';\n\nimport { AppSidebarNode, AppSidebarProps } from '../App.d';\nimport { BoardLink } from '../App.style';\n\nconst AppSidebar: React.FC<any> = ({\n  boards,\n  editMode,\n  appName,\n}: AppSidebarProps) => {\n  const location = useLocation();\n  const sidebarRef = React.useRef<any>(null);\n  const [height, setHeight] = React.useState<number>(0);\n\n  const treeData = React.useMemo((): {\n    tree: AppSidebarNode[];\n    expandedKeys: string[];\n    selectedKeys: string[];\n  } => {\n    let tree: AppSidebarNode[] = [];\n    let expandedKeys: string[] = [];\n    let selectedKeys: string[] = [];\n    let lookup: Record<string, AppSidebarNode> = {};\n\n    // Step 1: Create nodes and build a lookup\n    for (let i = 0; i < boards.length; i++) {\n      const boardPath = `${PathEnum.App.replace(':appName', appName)}/${\n        boards[i]\n      }`;\n      const isActive = location.pathname.replace('/edit', '') === boardPath;\n      let path = boards[i].split('/');\n      for (let j = 0; j < path.length; j++) {\n        const isLast = j === path.length - 1;\n        let part = path.slice(0, j + 1).join('/');\n        if (isActive) {\n          expandedKeys.push(`${i}-${j}`);\n          if (isLast) {\n            selectedKeys.push(`${i}-${j}`);\n          }\n        }\n        if (!lookup[part]) {\n          let node: AppSidebarNode = {\n            title: isLast ? (\n              <BoardLink\n                key={path[j]}\n                to={`${boardPath}${editMode ? '/edit' : ''}`}\n              >\n                <Icon size='md' icon={<IconBrandPython />} />\n                <Text css={{ ml: '$4' }}>{path[j]}</Text>\n              </BoardLink>\n            ) : (\n              <Text>{path[j]}</Text>\n            ),\n            value: path[j],\n            key: `${i}-${j}`,\n            ...(!isLast && { children: [] }),\n          };\n          lookup[part] = node;\n        }\n      }\n    }\n\n    // Step 2: Build the tree\n    for (let path in lookup) {\n      let node = lookup[path];\n      if (path.indexOf('/') !== -1) {\n        let parentPath = path.substring(0, path.lastIndexOf('/'));\n        lookup[parentPath].children?.push(node);\n      } else {\n        tree.push(node);\n      }\n    }\n    return { tree, expandedKeys, selectedKeys };\n  }, [boards, editMode, location.pathname]);\n\n  const resizeObserverCallback = React.useCallback(\n    (entries: ResizeObserverEntry[]) => {\n      setHeight(entries[0].contentRect.height);\n    },\n    [],\n  );\n\n  useResizeObserver(resizeObserverCallback, sidebarRef);\n\n  return (\n    <Box\n      ref={sidebarRef}\n      width={200}\n      css={{\n        borderRight: '1px solid $border30',\n        backgroundColor: '#fff',\n        p: '$3 $4',\n      }}\n    >\n      <Tree\n        height={height}\n        selectedKeys={treeData.selectedKeys}\n        expandedKeys={treeData.expandedKeys}\n        data={treeData.tree}\n      />\n    </Box>\n  );\n};\n\nexport default AppSidebar;\n","import * as React from 'react';\n\nimport { IconPencil } from '@tabler/icons-react';\n\nimport { Box, Breadcrumb, Text, Link, Button } from 'components/kit_v2';\n\nimport { TopBar } from 'config/stitches/foundations/layout';\nimport { PathEnum } from 'config/enums/routesEnum';\n\nimport Board from 'pages/Board/Board';\nimport useBoardStore from 'pages/Board/BoardStore';\n\nimport { AppWrapperProps } from '../App.d';\nimport { AppContainer, BoardWrapper } from '../App.style';\n\nimport AppSidebar from './AppSidebar';\n\nfunction AppWrapper({\n  boardPath,\n  editMode,\n  boardList,\n  stateStr,\n  appName,\n}: AppWrapperProps) {\n  const path = boardPath?.replace('/edit', '');\n  const board = useBoardStore((state) => state.boards?.[`${appName}:${path}`]);\n  const fetchBoard = useBoardStore((state) => state.fetchBoard);\n  // const updateBoard = useBoardStore((state) => state.editBoard);\n\n  React.useEffect(() => {\n    if (boardPath && !board) {\n      fetchBoard(path, appName);\n    }\n  }, [boardPath]);\n\n  // const saveBoard = (board: any) => {\n  //   updateBoard(boardPath, {\n  //     ...board,\n  //   });\n  // };\n\n  const breadcrumbItems = React.useMemo(() => {\n    const splitPath = path.split('/');\n    let items = [\n      {\n        name: 'Apps',\n        path: PathEnum.Apps,\n      },\n      {\n        name: appName,\n        path: PathEnum.App.replace(':appName', appName),\n      },\n      {\n        name: splitPath.map((path, index) => {\n          const isLast = index === splitPath.length - 1;\n          return (\n            <Text\n              color={editMode ? '$textPrimary50' : '$textPrimary'}\n              key={index}\n              size='$3'\n              css={{ mx: '$2' }}\n            >\n              {isLast ? path.slice(0, path.length - 3) : `${path} /`}\n            </Text>\n          );\n        }),\n        path: `${PathEnum.App.replace(':appName', appName)}/${path}`,\n      },\n    ];\n    if (editMode) {\n      items.push({\n        name: 'Edit',\n        path: `${PathEnum.App.replace(':appName', appName)}/${path}/edit`,\n      });\n    }\n\n    return items;\n  }, [editMode, path]);\n\n  let externalPackageNameLastIndex = path.indexOf(':');\n\n  let externalPackage =\n    externalPackageNameLastIndex === -1\n      ? null\n      : path.slice(0, externalPackageNameLastIndex);\n\n  return (\n    <AppContainer>\n      <TopBar id='app-top-bar'>\n        <Box flex='1 100%'>\n          <Breadcrumb items={breadcrumbItems} />\n        </Box>\n        {board && !editMode && (\n          <Link\n            css={{ display: 'flex' }}\n            to={`${PathEnum.App.replace(\n              ':appName',\n              appName,\n            )}/${boardPath}/edit${\n              stateStr ? '?state=' + encodeURIComponent(stateStr) : ''\n            }`}\n            underline={false}\n          >\n            <Button variant='outlined' size='xs' rightIcon={<IconPencil />}>\n              Playground\n            </Button>\n          </Link>\n        )}\n      </TopBar>\n      <Box display='flex' height='calc(100% - 28px)'>\n        <AppSidebar boards={boardList} editMode={editMode} appName={appName} />\n        <BoardWrapper>\n          {board && (\n            <Board\n              key={board.path + editMode}\n              data={board}\n              editMode={editMode}\n              stateStr={stateStr}\n              externalPackage={externalPackage}\n              // saveBoard={saveBoard}\n            />\n          )}\n        </BoardWrapper>\n      </Box>\n    </AppContainer>\n  );\n}\n\nexport default AppWrapper;\n","import * as React from 'react';\n\nimport AppWrapper from './AppWrapper';\n\nfunction AppPage({ match, location, history, data, appName }: any) {\n  let boardPath = '';\n  if (match?.params?.[0]) {\n    boardPath = match.params[0];\n  }\n\n  const editMode = location.pathname.endsWith('/edit');\n\n  const getStateFromURL = React.useCallback(() => {\n    let searchParams = new URLSearchParams(window.location.search);\n    let stateParam = searchParams.get('state');\n\n    if (stateParam) {\n      return decodeURIComponent(stateParam);\n    }\n\n    return '';\n  }, []);\n\n  let [stateStr, setStateStr] = React.useState(getStateFromURL());\n\n  const updateStateStr = React.useCallback(() => {\n    setStateStr(getStateFromURL());\n  }, []);\n\n  React.useEffect(() => {\n    if (boardPath) {\n      document.title = `${boardPath} | Aim`;\n    }\n    updateStateStr();\n  }, [boardPath]);\n\n  React.useEffect(() => {\n    (function (history: any) {\n      var pushState = history.pushState;\n      history.pushState = function (state: any) {\n        if (typeof history.onpushstate == 'function') {\n          history.onpushstate({ state: state });\n        }\n\n        return pushState.apply(history, arguments);\n      };\n    })(window.history);\n\n    window.onpopstate = history.onpushstate = updateStateStr;\n  }, []);\n\n  return (\n    <AppWrapper\n      appName={appName}\n      boardList={data}\n      boardPath={boardPath}\n      editMode={editMode!}\n      stateStr={stateStr}\n    />\n  );\n}\n\nexport default AppPage;\n","import * as React from 'react';\nimport { Route, useRouteMatch } from 'react-router-dom';\n\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\nimport { ToastProvider, Toast } from 'components/kit_v2';\n\nimport { PathEnum } from 'config/enums/routesEnum';\n\nimport useApp from './useApp';\nimport AppPage from './components/AppPage';\n\nfunction App(): React.FunctionComponentElement<React.ReactNode> {\n  const { data, isLoading, notifications, setAppName } = useApp();\n\n  const match = useRouteMatch<{ appName: string }>();\n  const appName = match.params['appName'];\n\n  React.useEffect(() => {\n    setAppName(appName);\n  }, [appName]);\n\n  return (\n    <ErrorBoundary>\n      {isLoading ? null : (\n        <Route\n          path={[\n            `${PathEnum.App.replace(':appName', appName)}/*`,\n            `${PathEnum.App.replace(':appName', appName)}/*/edit`,\n          ]}\n          exact\n        >\n          {(props) => (\n            <AppPage\n              key={props.location.pathname}\n              {...props}\n              data={data}\n              appName={appName}\n            />\n          )}\n        </Route>\n      )}\n      <ToastProvider\n        placement='bottomRight'\n        swipeDirection='right'\n        duration={5000}\n      >\n        {notifications.map((notification) => (\n          <Toast\n            key={notification.id}\n            onOpenChange={(open) => {\n              if (!open && notification.onDelete) {\n                notification.onDelete(notification.id)!;\n              }\n            }}\n            {...notification}\n          />\n        ))}\n      </ToastProvider>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport * as _ from 'lodash-es';\n\nimport { ANALYTICS_EVENT_KEYS_MAP } from 'config/analytics/analyticsKeysMap';\nimport { PathEnum } from 'config/enums/routesEnum';\n\nimport useBoardStore from 'pages/Board/BoardStore';\n\nimport pyodideEngine, { usePyodideEngine } from 'services/pyodide/store';\nimport * as analytics from 'services/analytics';\n\nfunction useApp() {\n  const history = useHistory();\n  const location = useLocation();\n\n  const isLoading = useBoardStore((state) => state.isLoading);\n  const updateBoard = useBoardStore((state) => state.editBoard);\n  const fetchBoard = useBoardStore((state) => state.fetchBoard);\n  const boards = useBoardStore((state) => state.boards);\n  const notifications = useBoardStore((state) => state.notifyData);\n  const appName = useBoardStore((state) => state.appName);\n  const setAppName = useBoardStore((state) => state.setAppName);\n\n  const allPackagesBoards = usePyodideEngine(pyodideEngine.boardsSelector);\n  const boardsList: string[] = appName\n    ? allPackagesBoards?.[appName] ?? []\n    : [];\n\n  const sortedList = React.useMemo(() => {\n    const list = _.sortBy(boardsList);\n    // Separate directories and files\n    let dirs = list.filter((path) => path.includes('/'));\n    let files = list.filter((path) => !path.includes('/'));\n    // Prioritize directories, then files\n    return [...dirs, ...files];\n  }, [boardsList]);\n\n  React.useEffect(() => {\n    analytics.pageView(ANALYTICS_EVENT_KEYS_MAP.app.pageView);\n  }, []);\n\n  React.useEffect(() => {\n    if (\n      !isLoading &&\n      appName &&\n      sortedList.length > 0 &&\n      location.pathname === PathEnum.App.replace(':appName', appName)\n    ) {\n      const firstBoardPath = sortedList[0]; // replace this with the correct property if different\n      history.replace(\n        `${PathEnum.App.replace(':appName', appName)}/${firstBoardPath}`,\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [boardsList, location, appName]);\n\n  return {\n    data: sortedList,\n    updateBoard,\n    boards,\n    isLoading,\n    fetchBoard,\n    notifications,\n    appName,\n    setAppName,\n  };\n}\n\nexport default useApp;\n"],"names":["AppContainer","styled","height","width","overflow","position","BoardWrapper","Box","flex","BoardLink","NavLink","display","padding","ai","color","textDecoration","borderRadius","content","left","IconBrandPython","createReactComponent","d","key","_ref","boards","editMode","appName","location","useLocation","sidebarRef","React","_React$useState","_React$useState2","_slicedToArray","setHeight","treeData","tree","expandedKeys","selectedKeys","lookup","i","length","boardPath","concat","PathEnum","App","replace","isActive","pathname","path","split","j","isLast","part","slice","join","push","node","_objectSpread","title","_jsxs","to","children","_jsx","Icon","size","icon","Text","css","ml","value","_lookup$parentPath$ch","indexOf","substring","lastIndexOf","resizeObserverCallback","entries","contentRect","useResizeObserver","ref","borderRight","backgroundColor","p","Tree","data","boardList","stateStr","board","useBoardStore","state","_state$boards","fetchBoard","breadcrumbItems","splitPath","items","name","Apps","map","index","mx","externalPackageNameLastIndex","externalPackage","TopBar","id","Breadcrumb","Link","encodeURIComponent","underline","Button","variant","rightIcon","IconPencil","AppSidebar","Board","_match$params","match","history","params","endsWith","getStateFromURL","stateParam","URLSearchParams","window","search","get","decodeURIComponent","setStateStr","updateStateStr","document","pushState","onpushstate","apply","arguments","onpopstate","AppWrapper","_useApp","useApp","isLoading","notifications","setAppName","useRouteMatch","ErrorBoundary","Route","exact","props","AppPage","ToastProvider","placement","swipeDirection","duration","notification","Toast","onOpenChange","open","onDelete","_allPackagesBoards$ap","useHistory","updateBoard","editBoard","notifyData","allPackagesBoards","usePyodideEngine","pyodideEngine","boardsSelector","boardsList","sortedList","list","_","dirs","filter","includes","files","_toConsumableArray","analytics","ANALYTICS_EVENT_KEYS_MAP","app","pageView","firstBoardPath"],"sourceRoot":""}