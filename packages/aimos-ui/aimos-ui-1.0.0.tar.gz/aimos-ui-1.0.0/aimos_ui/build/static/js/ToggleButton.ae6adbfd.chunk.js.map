{"version":3,"file":"static/js/ToggleButton.ae6adbfd.chunk.js","mappings":"2KAmDA,UA7CA,SAAgCA,GAC9B,IAAAC,EAA0BC,EAAAA,SAAeF,EAAMG,QAAQC,OAAMC,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAAtDG,EAAKC,EAAA,GAAEE,EAAQF,EAAA,GAEtBH,EAAAA,WAAgB,WACVF,EAAMG,QAAQC,QAAUA,GAC1BG,EAASP,EAAMG,QAAQC,MAG3B,GAAG,CAACJ,EAAMG,QAAQC,QAElB,IAAMI,EAAWN,EAAAA,aACf,SAACE,GAAmB,IAADK,EACjBF,EAASH,GACM,QAAfK,EAAAT,EAAMU,iBAAS,IAAAD,GAAfA,EAAiBE,UAAUP,EAC7B,GAEA,IAGIQ,EAAKV,EAAAA,QAAcW,EAAAA,EAAY,IACrC,OACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CAAAC,SAAA,CACDhB,EAAMG,QAAQc,QACbC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CACHC,GAAG,QACHC,QAAST,EACTU,WAAY,IACZC,SAAUvB,EAAMG,QAAQoB,SAASP,SAEhChB,EAAMG,QAAQc,SAGnBC,EAAAA,EAAAA,KAACM,EAAAA,IAAYC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACXb,GAAIA,GACAZ,EAAMG,SAAO,IACjBuB,UAAW1B,EAAMG,QAAQwB,UACzBC,WAAY5B,EAAMG,QAAQ0B,WAC1BN,SAAUvB,EAAMG,QAAQoB,SACxBnB,MAAOA,EACPI,SAAUA,OAIlB,C","sources":["pages/Board/components/VisualizationElements/ToggleButtonVizElement.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { Box, Text, ToggleButton } from 'components/kit_v2';\n\nimport generateId from 'utils/generateId';\n\nfunction ToggleButtonVizElement(props: any) {\n  const [value, setValue] = React.useState(props.options.value);\n\n  React.useEffect(() => {\n    if (props.options.value !== value) {\n      setValue(props.options.value);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.options.value]);\n\n  const onChange = React.useCallback(\n    (value: string) => {\n      setValue(value);\n      props.callbacks?.on_change(value);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [],\n  );\n\n  const id = React.useMemo(generateId, []);\n  return (\n    <Box>\n      {props.options.label && (\n        <Text\n          as='label'\n          htmlFor={id}\n          lineHeight={1.5}\n          disabled={props.options.disabled}\n        >\n          {props.options.label}\n        </Text>\n      )}\n      <ToggleButton\n        id={id}\n        {...props.options}\n        leftLabel={props.options.leftValue}\n        rightLabel={props.options.rightValue}\n        disabled={props.options.disabled}\n        value={value}\n        onChange={onChange}\n      />\n    </Box>\n  );\n}\n\nexport default ToggleButtonVizElement;\n"],"names":["props","_React$useState","React","options","value","_React$useState2","_slicedToArray","setValue","onChange","_props$callbacks","callbacks","on_change","id","generateId","_jsxs","Box","children","label","_jsx","Text","as","htmlFor","lineHeight","disabled","ToggleButton","_objectSpread","leftLabel","leftValue","rightLabel","rightValue"],"sourceRoot":""}