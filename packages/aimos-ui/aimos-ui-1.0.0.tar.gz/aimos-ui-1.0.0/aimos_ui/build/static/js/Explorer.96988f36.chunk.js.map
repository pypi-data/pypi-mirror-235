{"version":3,"file":"static/js/Explorer.96988f36.chunk.js","mappings":"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","sources":["components/AudioBox/AudioBox.tsx","components/AudioBox/index.ts","components/FigureBox/FigureBox.tsx","components/FigureBox/index.ts","modules/BaseExplorer/components/Controls/TextRendererMode/Popover/TextRendererModePopover.tsx","modules/BaseExplorer/components/Controls/TextRendererMode/Popover/index.tsx","modules/BaseExplorer/components/Controls/TextRendererMode/TextRendererMode.tsx","modules/BaseExplorer/components/Controls/TextRendererMode/index.tsx","modules/BaseExplorer/components/Figure/Figure.tsx","modules/BaseExplorer/components/TextBox/TextBox.tsx","pages/Board/components/VisualizationElements/ExplorerVizElement.tsx","modules/BaseExplorer/components/Audio/Audio.tsx","modules/BaseExplorer/components/Audio/index.ts","pages/Explorers/AudiosExplorer/getStaticContent.tsx","pages/Explorers/AudiosExplorer/index.tsx","pages/Explorers/AudiosExplorer/config.ts","modules/BaseExplorer/components/Figure/index.ts","pages/Explorers/FiguresExplorer/getStaticContent.tsx","pages/Explorers/FiguresExplorer/index.tsx","pages/Explorers/FiguresExplorer/config.ts","pages/Explorers/TextExplorer/getStaticContent.tsx","pages/Explorers/TextExplorer/config.tsx","pages/Explorers/TextExplorer/index.tsx"],"sourcesContent":["import React from 'react';\nimport { useAudioBlobURI } from 'hooks';\n\nimport ErrorBoundary from 'components/ErrorBoundary';\nimport { AudioPlayer } from 'components/kit_v2';\n\nimport { AudioBoxProps } from './';\nfunction AudioBox(props: AudioBoxProps) {\n  const {\n    audioRef,\n    data,\n    setIsPlaying,\n    setProcessing,\n    onPlay,\n    onDownload,\n    processing,\n    isPlaying,\n    readyToPlay,\n    caption,\n  } = useAudioBlobURI(props);\n\n  return (\n    <ErrorBoundary>\n      <div style={props.style}>\n        <AudioPlayer\n          audioRef={audioRef}\n          src={data.src}\n          onEnded={() => setIsPlaying(false)}\n          onCanPlay={() => setProcessing(false)}\n          onPlay={onPlay}\n          onPause={() => setIsPlaying(false)}\n          onDownload={onDownload}\n          processing={processing}\n          isPlaying={isPlaying}\n          readyToPlay={readyToPlay}\n          caption={caption}\n        />\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nexport default AudioBox;\n","import AudioBox from './AudioBox';\n\nexport * from './AudioBox.d';\nexport default AudioBox;\n","import React from 'react';\nimport Plot from 'react-plotly.js';\nimport { useFigureBlobURI } from 'hooks';\n\nimport ErrorBoundary from 'components/ErrorBoundary';\nimport { Spinner } from 'components/kit';\n\nimport { FigureBoxProps } from './';\n\nfunction FigureBox(props: FigureBoxProps) {\n  const [scale, setScale] = React.useState<number>(1);\n  const [visibility, setVisibility] =\n    React.useState<React.CSSProperties['visibility']>('hidden');\n\n  const containerRef = React.useRef<HTMLDivElement | null>(null);\n\n  const { data } = useFigureBlobURI(props);\n  function setContainerScale() {\n    const container = containerRef.current;\n    let plot = container?.firstChild;\n    let parentElement = container?.parentElement;\n    if (container && plot && parentElement) {\n      let width = container.offsetWidth + 20;\n      let height = container.offsetHeight + 20;\n      let containerWidth = parentElement.offsetWidth;\n      let containerHeight = parentElement.offsetHeight - 30;\n      let wK = containerWidth / width; // Calculate width ratio\n      let hK = containerHeight / height; // Calculate height ratio\n      if (wK < 1 || hK < 1) {\n        setScale(Math.min(wK, hK)); // Apply scale based on object-fit: 'contain' pattern\n      } else {\n        setScale(1);\n      }\n    }\n  }\n\n  function onAutoSize() {\n    window.requestAnimationFrame(() => {\n      if (containerRef.current) {\n        setContainerScale();\n        setVisibility('visible');\n      }\n    });\n  }\n\n  React.useEffect(() => {\n    if (containerRef.current && props.style) {\n      setContainerScale();\n    }\n  }, [props.style]);\n\n  return (\n    <ErrorBoundary>\n      <div\n        ref={containerRef}\n        style={{\n          display: 'inline-block',\n          transform: data ? `scale(${scale})` : '',\n        }}\n      >\n        {data ? (\n          <Plot\n            style={{ visibility }}\n            data={data.data || []}\n            layout={{ ...(data.layout || {}) }}\n            frames={data.frames}\n            useResizeHandler={true}\n            onAutoSize={onAutoSize}\n            onInitialized={onAutoSize}\n            onUpdate={onAutoSize}\n          />\n        ) : (\n          <Spinner size={24} thickness={2} />\n        )}\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nexport default FigureBox;\n","import FigureBox from './FigureBox';\n\nexport * from './FigureBox.d';\nexport default FigureBox;\n","import * as React from 'react';\n\nimport { MenuItem } from '@material-ui/core';\n\nimport { Text } from 'components/kit';\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\n\nimport { TEXT_RENDERER_MODES } from 'pages/Explorers/TextExplorer/config';\n\nimport { ITextRendererModePopoverProps } from '.';\n\nimport './TextRendererModePopover.scss';\n\nfunction TextRendererModePopover(props: ITextRendererModePopoverProps) {\n  const { update, textRenderer } = props;\n\n  return (\n    <ErrorBoundary>\n      <div className='TextRendererModePopover'>\n        <div className='TextRendererModePopover__section'>\n          {Object.keys(TEXT_RENDERER_MODES).map((key) => (\n            <MenuItem\n              key={key}\n              property='line'\n              selected={key.toLowerCase() === textRenderer.type}\n              onClick={() =>\n                update({\n                  type: key.toLowerCase(),\n                })\n              }\n            >\n              <Text>{key}</Text>\n            </MenuItem>\n          ))}\n        </div>\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nTextRendererModePopover.displayName = 'TextRendererModePopover';\n\nexport default React.memo<ITextRendererModePopoverProps>(\n  TextRendererModePopover,\n);\n","import TextRendererModePopover from './TextRendererModePopover';\n\nexport * from './TextRendererModePopover.d';\n\nexport default TextRendererModePopover;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport ControlPopover from 'components/ControlPopover/ControlPopover';\nimport { Icon, Button, Text } from 'components/kit';\n\nimport TextRendererModePopover from './Popover';\n\nimport { ITextRendererModeProps } from '.';\n\nfunction TextRendererMode(props: ITextRendererModeProps) {\n  const {\n    engine,\n    engine: { useStore },\n    visualizationName,\n  } = props;\n  const vizEngine = engine.visualizations[visualizationName];\n  const controls = vizEngine.controls;\n  const textRenderer = useStore(controls.textRenderer.stateSelector);\n  const updateTextRnderer = vizEngine.controls.textRenderer.methods.update;\n\n  return (\n    <ControlPopover\n      title='Switch renderer'\n      anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n      anchor={({ onAnchorClick, opened }) => (\n        <Button\n          size='xSmall'\n          onClick={onAnchorClick}\n          className={classNames('Control__anchor', {\n            active: opened || !textRenderer.isInitial,\n            outlined: !opened && !textRenderer.isInitial,\n          })}\n        >\n          <Icon\n            name='text'\n            className={classNames('Control__anchor__icon', {\n              active: opened || !textRenderer.isInitial,\n            })}\n          />\n          <Text className='Control__anchor__label'>Text Renderer</Text>\n          <Icon\n            name='arrow-down-contained'\n            className={classNames('Control__anchor__arrow', { opened })}\n            fontSize={6}\n          />\n        </Button>\n      )}\n      component={\n        <TextRendererModePopover\n          update={updateTextRnderer}\n          textRenderer={textRenderer}\n        />\n      }\n    />\n  );\n}\n\nTextRendererMode.displayName = 'TextRendererMode';\n\nexport default React.memo<ITextRendererModeProps>(TextRendererMode);\n","import TextRendererMode from './TextRendererMode';\n\nexport * from './TextRendererMode.d';\n\nexport default TextRendererMode;\n","import * as React from 'react';\n\nimport ErrorBoundary from 'components/ErrorBoundary';\nimport FigureBox from 'components/FigureBox';\n\nimport { IBoxContentProps } from 'modules/BaseExplorer/types';\n\nfunction Figure(props: IBoxContentProps) {\n  return (\n    <ErrorBoundary>\n      <FigureBox\n        engine={{ blobURI: props.engine.blobURI }}\n        format={props.data.data.format}\n        name={props.data.sequence.name}\n        context={props.data.sequence.context}\n        step={props.data.record.step}\n        blobData={props.data.data.blobs.data}\n        isFullView={props.isFullView}\n      />\n    </ErrorBoundary>\n  );\n}\n\nexport default React.memo(Figure);\n","import * as React from 'react';\nimport Editor from 'rich-markdown-editor';\n\nimport { Text } from 'components/kit';\n\nimport { TEXT_RENDERER_MODES } from 'pages/Explorers/TextExplorer/config';\n\nimport './TextBox.scss';\n\nfunction TextBox(props: any) {\n  const {\n    engine,\n    engine: { useStore },\n    visualizationName,\n    data,\n  } = props;\n  const vizEngine = engine.visualizations[visualizationName];\n  const controls = vizEngine.controls;\n  const textRenderer = useStore(controls.textRenderer.stateSelector);\n\n  const text = data.data.data;\n\n  const content: Record<string, JSX.Element> = {\n    [TEXT_RENDERER_MODES.TEXT]: (\n      <Text color={props.data.style.color} style={{ whiteSpace: 'normal' }}>\n        {text}\n      </Text>\n    ),\n    [TEXT_RENDERER_MODES.MARKDOWN]: (\n      <Editor\n        ref={null}\n        value={text}\n        readOnly\n        className='TextBox__Markdown'\n        disableExtensions={['table', 'image', 'container_notice']}\n      />\n    ),\n    [TEXT_RENDERER_MODES.HTML]: (\n      <div dangerouslySetInnerHTML={{ __html: text }} />\n    ),\n    [TEXT_RENDERER_MODES.CODE]: (\n      <Text component='pre' color={props.data.style.color}>\n        {text}\n      </Text>\n    ),\n  };\n\n  return (\n    <div className='TextBox' style={{ color: props.data.style.color }}>\n      {content[textRenderer.type]}\n    </div>\n  );\n}\n\nexport default React.memo(TextBox);\n","import * as React from 'react';\nimport produce from 'immer';\n\nimport renderer from 'modules/BaseExplorer';\nimport { ExplorerConfiguration } from 'modules/BaseExplorer/types';\n\nimport { metricsExplorerConfig } from 'pages/Explorers/MetricsExplorer';\nimport { figuresExplorerConfig } from 'pages/Explorers/FiguresExplorer';\nimport { audiosExplorerConfig } from 'pages/Explorers/AudiosExplorer';\nimport { textExplorerConfig } from 'pages/Explorers/TextExplorer';\n\nfunction ExplorerVizElement(props: any) {\n  const state = {\n    query: {\n      form: {\n        advancedInput: props.options.query,\n        advancedModeOn: true,\n        simpleInput: '',\n        selections: [],\n      },\n      ranges: {\n        isApplyButtonDisabled: true,\n        isValid: true,\n      },\n    },\n  };\n\n  const Component = React.useMemo(() => {\n    const explorer = ExplorersMap[props.data?.toLowerCase()];\n    const appContainerNode = document.querySelector(\n      '.BoardVisualizer__main__components__viz',\n    );\n    return explorer ? explorer(state, appContainerNode) : null;\n  }, [props.data]);\n\n  Component?.setState(state);\n\n  return Component ? (\n    <div\n      className='VizComponentContainer'\n      style={{ display: 'block', padding: 0, overflow: 'hidden' }}\n    >\n      <Component />\n    </div>\n  ) : null;\n}\n\nconst getStaticConfig = (configuration: ExplorerConfiguration) => {\n  return produce(configuration, (draft) => {\n    draft.persist = false;\n    draft.hideExplorerBar = true;\n    draft.hideQueryForm = true;\n  });\n};\n\nconst ExplorersMap: Record<string, any> = {\n  metrics: (state: Record<string, any>, appContainerNode: HTMLDivElement) => {\n    const config = produce(getStaticConfig(metricsExplorerConfig), (draft) => {\n      draft.initialState = state;\n      draft.visualizations.vis1.widgets!.tooltip.props!.appContainerNode =\n        appContainerNode;\n    });\n    return renderer(config);\n  },\n  figures: (state: Record<string, any>, appContainerNode: HTMLDivElement) => {\n    const config = produce(getStaticConfig(figuresExplorerConfig), (draft) => {\n      draft.initialState = state;\n      draft.visualizations.vis1.widgets!.tooltip.props!.appContainerNode =\n        appContainerNode;\n    });\n    return renderer(config);\n  },\n  audios: (state: Record<string, any>, appContainerNode: HTMLDivElement) => {\n    const config = produce(getStaticConfig(audiosExplorerConfig), (draft) => {\n      draft.initialState = state;\n      draft.visualizations.vis1.widgets!.tooltip.props!.appContainerNode =\n        appContainerNode;\n    });\n    return renderer(config);\n  },\n  texts: (state: Record<string, any>, appContainerNode: HTMLDivElement) => {\n    const config = produce(getStaticConfig(textExplorerConfig), (draft) => {\n      draft.initialState = state;\n      draft.visualizations.vis1.widgets!.tooltip.props!.appContainerNode =\n        appContainerNode;\n    });\n    return renderer(config);\n  },\n};\n\nexport default ExplorerVizElement;\n","import React from 'react';\n\nimport ErrorBoundary from 'components/ErrorBoundary';\nimport AudioBox from 'components/AudioBox';\n\nimport { IBoxContentProps } from 'modules/BaseExplorer/types';\n\nfunction Audio(props: IBoxContentProps) {\n  return (\n    <ErrorBoundary>\n      <AudioBox\n        engine={{ events: props.engine.events, blobURI: props.engine.blobURI }}\n        format={props.data.data.format}\n        caption={props.data.data.caption}\n        name={props.data.sequence.name}\n        context={props.data.sequence.context}\n        step={props.data.record.step}\n        index={props.data.record.index}\n        blobData={props.data.data.blobs.data}\n        isFullView={props.isFullView}\n      />\n    </ErrorBoundary>\n  );\n}\n\nexport default React.memo(Audio);\n","import Audio from './Audio';\nexport default Audio;\n","import * as React from 'react';\n\nimport { DOCUMENTATIONS } from 'config/references';\n\nimport getBaseExplorerStaticContent, {\n  STATIC_CONTENT_TYPES,\n} from 'modules/BaseExplorer/utils/getBaseExplorerStaticContent';\nimport { StaticContentType } from 'modules/BaseExplorer/types';\n\nfunction getAudiosExplorerStaticContent(\n  type: StaticContentType,\n): React.ReactNode {\n  const illustrationContent = getAudiosExplorerIllustrationContent(type);\n  return getBaseExplorerStaticContent(type, illustrationContent);\n}\n\nfunction getAudiosExplorerIllustrationContent(\n  type: StaticContentType,\n): React.ReactNode {\n  const Never_Executed = (\n    <>\n      It’s super easy to search Aim experiments. Just start typing your query in\n      the search bar above.\n      <br />\n      Look up\n      <a\n        className='qlAnchor'\n        href={DOCUMENTATIONS.EXPLORERS.SEARCH}\n        target='_blank'\n        rel='noreferrer'\n      >\n        search docs\n      </a>\n      to learn more.\n    </>\n  );\n  const Failed = 'Incorrect Query';\n  const Insufficient_Resources = \"You don't have any tracked audios\";\n  const Empty = 'No Results';\n  const Empty_Bookmarks = \"You don't have any saved bookmark\";\n\n  const CONTENT = {\n    [STATIC_CONTENT_TYPES.Never_Executed]: Never_Executed,\n    [STATIC_CONTENT_TYPES.Failed]: Failed,\n    [STATIC_CONTENT_TYPES.Insufficient_Resources]: Insufficient_Resources,\n    [STATIC_CONTENT_TYPES.Empty]: Empty,\n    [STATIC_CONTENT_TYPES.Empty_Bookmarks]: Empty_Bookmarks,\n  };\n  return CONTENT[type] || null;\n}\n\nexport default getAudiosExplorerStaticContent;\n","import { isDEVModeOn } from 'config/config';\n\nimport renderer from 'modules/BaseExplorer';\nimport Audio from 'modules/BaseExplorer/components/Audio';\n\nimport { SequenceType } from 'types/core/enums';\n\nimport { getAudiosDefaultConfig } from './config';\n\nconst defaultConfig = getAudiosDefaultConfig();\n\nexport const audiosExplorerConfig = {\n  name: 'Audios Explorer',\n  sequenceType: SequenceType.Audio,\n  basePath: 'audios',\n  persist: true,\n  groupings: defaultConfig.groupings,\n  visualizations: {\n    vis1: {\n      component: defaultConfig.Visualizer,\n      controls: defaultConfig.controls,\n      box: {\n        ...defaultConfig.box,\n        component: Audio,\n      },\n    },\n  },\n  getStaticContent: defaultConfig.getStaticContent,\n};\n\nconst AudiosExplorer = renderer(audiosExplorerConfig, isDEVModeOn);\n\nexport default AudiosExplorer;\n","import produce from 'immer';\n\nimport { getDefaultHydration } from 'modules/BaseExplorer';\nimport { GroupType, Order } from 'modules/core/pipeline';\nimport { defaultHydration } from 'modules/BaseExplorer/getDefaultHydration';\nimport { CaptionProperties } from 'modules/BaseExplorer/components/Controls';\n\nimport { GetSequenceName, SequenceType } from 'types/core/enums';\n\nimport getAudiosExplorerStaticContent from './getStaticContent';\n\nexport const getAudiosDefaultConfig = (): typeof defaultHydration => {\n  const defaultConfig = getDefaultHydration();\n  const sequenceName = GetSequenceName(SequenceType.Audio);\n\n  const groupings = produce(defaultConfig.groupings, (draft: any) => {\n    draft[GroupType.COLUMN].defaultApplications.orders = [Order.ASC, Order.ASC];\n    draft[GroupType.COLUMN].defaultApplications.fields = [\n      'run.hash',\n      `${sequenceName}.name`,\n    ];\n    draft[GroupType.ROW].defaultApplications.orders = [Order.DESC];\n    draft[GroupType.ROW].defaultApplications.fields = ['record.step'];\n\n    draft[GroupType.GRID].defaultApplications.orders = [Order.ASC];\n    draft[GroupType.GRID].defaultApplications.fields = [`${sequenceName}.name`];\n  });\n\n  const controls = produce(defaultConfig.controls, (draft: any) => {\n    draft.captionProperties = {\n      component: CaptionProperties,\n      state: {\n        initialState: {\n          displayBoxCaption: true,\n          selectedFields: [\n            'run.name',\n            `${sequenceName}.name`,\n            `${sequenceName}.context`,\n          ],\n        },\n        persist: 'url',\n      },\n    };\n  });\n\n  const box = produce(defaultConfig.box, (draft: any) => {\n    draft.initialState.width = 350;\n    draft.initialState.height = 170;\n  });\n\n  return {\n    ...defaultConfig,\n    groupings,\n    controls,\n    box,\n    getStaticContent: getAudiosExplorerStaticContent,\n  };\n};\n","import Figure from './Figure';\n\nexport default Figure;\n","import * as React from 'react';\n\nimport { DOCUMENTATIONS } from 'config/references';\n\nimport getBaseExplorerStaticContent, {\n  STATIC_CONTENT_TYPES,\n} from 'modules/BaseExplorer/utils/getBaseExplorerStaticContent';\nimport { StaticContentType } from 'modules/BaseExplorer/types';\n\nfunction getFiguresExplorerStaticContent(\n  type: StaticContentType,\n): React.ReactNode {\n  const illustrationContent = getFiguresExplorerIllustrationContent(type);\n  return getBaseExplorerStaticContent(type, illustrationContent);\n}\n\nfunction getFiguresExplorerIllustrationContent(\n  type: StaticContentType,\n): React.ReactNode {\n  const Never_Executed = (\n    <>\n      It’s super easy to search Aim experiments. Just start typing your query in\n      the search bar above.\n      <br />\n      Look up\n      <a\n        className='qlAnchor'\n        href={DOCUMENTATIONS.EXPLORERS.SEARCH}\n        target='_blank'\n        rel='noreferrer'\n      >\n        search docs\n      </a>\n      to learn more.\n    </>\n  );\n  const Failed = 'Incorrect Query';\n  const Insufficient_Resources = \"You don't have any tracked figures\";\n  const Empty = 'No Results';\n  const Empty_Bookmarks = \"You don't have any saved bookmark\";\n\n  const CONTENT = {\n    [STATIC_CONTENT_TYPES.Never_Executed]: Never_Executed,\n    [STATIC_CONTENT_TYPES.Failed]: Failed,\n    [STATIC_CONTENT_TYPES.Insufficient_Resources]: Insufficient_Resources,\n    [STATIC_CONTENT_TYPES.Empty]: Empty,\n    [STATIC_CONTENT_TYPES.Empty_Bookmarks]: Empty_Bookmarks,\n  };\n  return CONTENT[type] || null;\n}\n\nexport default getFiguresExplorerStaticContent;\n","import { isDEVModeOn } from 'config/config';\n\nimport renderer from 'modules/BaseExplorer';\nimport Figure from 'modules/BaseExplorer/components/Figure';\n\nimport { SequenceType } from 'types/core/enums';\n\nimport { getFiguresDefaultConfig } from './config';\n\nconst defaultConfig = getFiguresDefaultConfig();\n\nexport const figuresExplorerConfig = {\n  name: 'Figures Explorer',\n  sequenceType: SequenceType.Figure,\n  basePath: 'figures',\n  persist: true,\n  groupings: defaultConfig.groupings,\n  visualizations: {\n    vis1: {\n      component: defaultConfig.Visualizer,\n      controls: defaultConfig.controls,\n      box: {\n        ...defaultConfig.box,\n        component: Figure,\n      },\n    },\n  },\n  getStaticContent: defaultConfig.getStaticContent,\n};\n\nconst FiguresExplorer = renderer(figuresExplorerConfig, isDEVModeOn);\n\nexport default FiguresExplorer;\n","import produce from 'immer';\n\nimport { getDefaultHydration } from 'modules/BaseExplorer';\nimport { GroupType, Order } from 'modules/core/pipeline';\nimport { defaultHydration } from 'modules/BaseExplorer/getDefaultHydration';\nimport { CaptionProperties } from 'modules/BaseExplorer/components/Controls';\n\nimport { GetSequenceName, SequenceType } from 'types/core/enums';\n\nimport getFiguresExplorerStaticContent from './getStaticContent';\n\nexport const getFiguresDefaultConfig = (): typeof defaultHydration => {\n  const defaultConfig = getDefaultHydration();\n  const sequenceName = GetSequenceName(SequenceType.Figure);\n\n  const groupings = produce(defaultConfig.groupings, (draft: any) => {\n    draft[GroupType.COLUMN].defaultApplications.orders = [Order.ASC, Order.ASC];\n    draft[GroupType.COLUMN].defaultApplications.fields = [\n      'run.hash',\n      `${sequenceName}.name`,\n    ];\n    draft[GroupType.ROW].defaultApplications.orders = [Order.DESC];\n    draft[GroupType.ROW].defaultApplications.fields = ['record.step'];\n\n    draft[GroupType.GRID].defaultApplications.orders = [Order.ASC];\n    draft[GroupType.GRID].defaultApplications.fields = [`${sequenceName}.name`];\n  });\n\n  const controls = produce(defaultConfig.controls, (draft: any) => {\n    draft.captionProperties = {\n      component: CaptionProperties,\n      state: {\n        initialState: {\n          displayBoxCaption: true,\n          selectedFields: [\n            'run.name',\n            `${sequenceName}.name`,\n            `${sequenceName}.context`,\n          ],\n        },\n        persist: 'url',\n      },\n    };\n  });\n\n  return {\n    ...defaultConfig,\n    groupings,\n    controls,\n    box: defaultConfig.box,\n    getStaticContent: getFiguresExplorerStaticContent,\n  };\n};\n","import * as React from 'react';\n\nimport { DOCUMENTATIONS } from 'config/references';\n\nimport getBaseExplorerStaticContent, {\n  STATIC_CONTENT_TYPES,\n} from 'modules/BaseExplorer/utils/getBaseExplorerStaticContent';\nimport { StaticContentType } from 'modules/BaseExplorer/types';\n\nfunction getTextExplorerStaticContent(\n  type: StaticContentType,\n): React.ReactNode {\n  const illustrationContent = getTextExplorerIllustrationContent(type);\n  return getBaseExplorerStaticContent(type, illustrationContent);\n}\n\nfunction getTextExplorerIllustrationContent(\n  type: StaticContentType,\n): React.ReactNode {\n  const Never_Executed = (\n    <>\n      It’s super easy to search Aim experiments. Just start typing your query in\n      the search bar above.\n      <br />\n      Look up\n      <a\n        className='qlAnchor'\n        href={DOCUMENTATIONS.EXPLORERS.SEARCH}\n        target='_blank'\n        rel='noreferrer'\n      >\n        search docs\n      </a>\n      to learn more.\n    </>\n  );\n  const Failed = 'Incorrect Query';\n  const Insufficient_Resources = \"You don't have any tracked text\";\n  const Empty = 'No Results';\n  const Empty_Bookmarks = \"You don't have any saved bookmark\";\n\n  const CONTENT = {\n    [STATIC_CONTENT_TYPES.Never_Executed]: Never_Executed,\n    [STATIC_CONTENT_TYPES.Failed]: Failed,\n    [STATIC_CONTENT_TYPES.Insufficient_Resources]: Insufficient_Resources,\n    [STATIC_CONTENT_TYPES.Empty]: Empty,\n    [STATIC_CONTENT_TYPES.Empty_Bookmarks]: Empty_Bookmarks,\n  };\n  return CONTENT[type] || null;\n}\n\nexport default getTextExplorerStaticContent;\n","import React, { memo } from 'react';\nimport produce from 'immer';\n\nimport COLORS from 'config/colors/colors';\n\nimport CaptionProperties from 'modules/BaseExplorer/components/Controls/CaptionProperties';\nimport TextRendererMode from 'modules/BaseExplorer/components/Controls/TextRendererMode';\nimport Legends from 'modules/BaseExplorer/components/Controls/Legends';\nimport { GroupingItem } from 'modules/BaseExplorer/components/Grouping';\nimport { getDefaultHydration } from 'modules/BaseExplorer';\nimport { GroupType, Order } from 'modules/core/pipeline';\nimport { defaultHydration } from 'modules/BaseExplorer/getDefaultHydration';\nimport { IBaseComponentProps } from 'modules/BaseExplorer/types';\nimport { PersistenceTypesEnum } from 'modules/core/engine/types';\nimport { StyleApplierCallbackArgs } from 'modules/core/engine/explorer/groupings';\n\nimport { GetSequenceName, SequenceType } from 'types/core/enums';\n\nimport { LegendsModeEnum } from 'utils/d3';\n\nimport getTextExplorerStaticContent from './getStaticContent';\n\nexport enum TEXT_RENDERER_MODES {\n  TEXT = 'text',\n  MARKDOWN = 'markdown',\n  HTML = 'html',\n  CODE = 'code',\n}\n\nexport const getTextDefaultConfig = (): typeof defaultHydration => {\n  const defaultConfig = getDefaultHydration();\n  const sequenceName = GetSequenceName(SequenceType.Text);\n\n  const groupings = produce(defaultConfig.groupings, (draft: any) => {\n    draft[GroupType.COLUMN].defaultApplications.orders = [Order.ASC, Order.ASC];\n    draft[GroupType.COLUMN].defaultApplications.fields = [\n      'run.hash',\n      `${sequenceName}.name`,\n    ];\n\n    draft[GroupType.GRID].defaultApplications.orders = [Order.ASC];\n    draft[GroupType.GRID].defaultApplications.fields = [`${sequenceName}.name`];\n\n    draft[GroupType.COLOR] = {\n      component: memo((props: IBaseComponentProps) => (\n        <GroupingItem groupName='color' iconName='coloring' {...props} />\n      )),\n\n      styleApplier: ({ groupInfo }: StyleApplierCallbackArgs<any>) => {\n        return {\n          color:\n            groupInfo[GroupType.COLOR]?.order !== undefined\n              ? COLORS[0][groupInfo[GroupType.COLOR].order % COLORS[0].length]\n              : null,\n        };\n      },\n      defaultApplications: {\n        fields: ['run.hash'],\n        orders: [Order.ASC],\n        isApplied: true,\n      },\n    };\n  });\n\n  return {\n    ...defaultConfig,\n    groupings,\n    controls: {\n      ...defaultConfig.controls,\n      captionProperties: {\n        component: CaptionProperties,\n        state: {\n          initialState: {\n            displayBoxCaption: true,\n            selectedFields: [\n              'run.name',\n              `${sequenceName}.name`,\n              `${sequenceName}.context`,\n            ],\n          },\n          persist: PersistenceTypesEnum.Url,\n        },\n      },\n      textRenderer: {\n        component: TextRendererMode,\n        state: {\n          initialState: {\n            type: 'text',\n          },\n          persist: PersistenceTypesEnum.Url,\n        },\n      },\n      legends: {\n        component: Legends,\n        state: {\n          initialState: {\n            display: false,\n            mode: LegendsModeEnum.PINNED,\n          },\n          persist: PersistenceTypesEnum.Url,\n        },\n      },\n    },\n    box: {\n      ...defaultConfig.box,\n    },\n    getStaticContent: getTextExplorerStaticContent,\n  };\n};\n","import type { FunctionComponent } from 'react';\n\nimport { isDEVModeOn } from 'config/config';\n\nimport renderer from 'modules/BaseExplorer';\nimport TextBox from 'modules/BaseExplorer/components/TextBox/TextBox';\nimport { VisualizerLegends } from 'modules/BaseExplorer/components/Widgets';\n\nimport { SequenceType } from 'types/core/enums';\n\nimport { getTextDefaultConfig } from './config';\n\nconst defaultConfig = getTextDefaultConfig();\n\nexport const textExplorerConfig = {\n  name: 'Text Explorer',\n  sequenceType: SequenceType.Text,\n  basePath: 'text',\n  persist: true,\n  groupings: defaultConfig.groupings,\n  visualizations: {\n    vis1: {\n      component: defaultConfig.Visualizer as FunctionComponent,\n      controls: defaultConfig.controls,\n      box: {\n        ...defaultConfig.box,\n        component: TextBox,\n        initialState: defaultConfig.box.initialState,\n      },\n      widgets: {\n        legends: {\n          component: VisualizerLegends,\n        },\n      },\n    },\n  },\n  getStaticContent: defaultConfig.getStaticContent,\n};\n\nconst TextExplorer = renderer(textExplorerConfig, isDEVModeOn);\n\nexport default TextExplorer;\n"],"names":["props","_useAudioBlobURI","useAudioBlobURI","audioRef","data","setIsPlaying","setProcessing","onPlay","onDownload","processing","isPlaying","readyToPlay","caption","_jsx","ErrorBoundary","children","style","AudioPlayer","src","onEnded","onCanPlay","onPause","_React$useState","React","_React$useState2","_slicedToArray","scale","setScale","_React$useState3","_React$useState4","visibility","setVisibility","containerRef","useFigureBlobURI","setContainerScale","container","current","plot","firstChild","parentElement","width","offsetWidth","height","offsetHeight","wK","hK","Math","min","onAutoSize","window","requestAnimationFrame","ref","display","transform","concat","Plot","layout","_objectSpread","frames","useResizeHandler","onInitialized","onUpdate","Spinner","size","thickness","TextRendererModePopover","update","textRenderer","className","Object","keys","TEXT_RENDERER_MODES","map","key","MenuItem","property","selected","toLowerCase","type","onClick","Text","displayName","TextRendererMode","engine","useStore","visualizationName","vizEngine","visualizations","controls","stateSelector","updateTextRnderer","methods","ControlPopover","title","anchorOrigin","vertical","horizontal","anchor","_ref","onAnchorClick","opened","_jsxs","Button","classNames","active","isInitial","outlined","Icon","name","fontSize","component","Figure","FigureBox","blobURI","format","sequence","context","step","record","blobData","blobs","isFullView","TextBox","_content","text","content","_defineProperty","TEXT","color","whiteSpace","MARKDOWN","Editor","value","readOnly","disableExtensions","HTML","dangerouslySetInnerHTML","__html","CODE","getStaticConfig","configuration","produce","draft","persist","hideExplorerBar","hideQueryForm","ExplorersMap","metrics","state","appContainerNode","config","metricsExplorerConfig","initialState","vis1","widgets","tooltip","renderer","figures","figuresExplorerConfig","audios","audiosExplorerConfig","texts","textExplorerConfig","query","form","advancedInput","options","advancedModeOn","simpleInput","selections","ranges","isApplyButtonDisabled","isValid","Component","_props$data","explorer","document","querySelector","setState","padding","overflow","Audio","AudioBox","events","index","illustrationContent","_CONTENT","Never_Executed","_Fragment","href","DOCUMENTATIONS","EXPLORERS","SEARCH","target","rel","Failed","Insufficient_Resources","Empty","Empty_Bookmarks","STATIC_CONTENT_TYPES","getAudiosExplorerIllustrationContent","getBaseExplorerStaticContent","defaultConfig","getDefaultHydration","sequenceName","GetSequenceName","SequenceType","groupings","GroupType","COLUMN","defaultApplications","orders","Order","ASC","fields","ROW","DESC","GRID","captionProperties","CaptionProperties","displayBoxCaption","selectedFields","box","getStaticContent","getAudiosExplorerStaticContent","getAudiosDefaultConfig","sequenceType","basePath","Visualizer","isDEVModeOn","getFiguresExplorerIllustrationContent","getFiguresExplorerStaticContent","getFiguresDefaultConfig","getTextExplorerIllustrationContent","getTextDefaultConfig","COLOR","memo","GroupingItem","groupName","iconName","styleApplier","_groupInfo$GroupType$","groupInfo","undefined","order","COLORS","length","isApplied","PersistenceTypesEnum","Url","legends","Legends","mode","LegendsModeEnum","PINNED","getTextExplorerStaticContent","VisualizerLegends","TextExplorer"],"sourceRoot":""}