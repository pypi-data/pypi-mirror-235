{"version":3,"file":"static/js/ScatterPlot.c2d623f4.chunk.js","mappings":"8JAoIA,UA3HA,SAA+BA,GAC7B,IAAMC,EAAaC,EAAAA,SAAc,WAC/B,IAAIC,EAAc,EAclB,MAAO,CACLC,KAdWJ,EAAMI,KAAKC,KAAI,SAACC,GAC3B,MAAO,CACLC,GAAID,EAAKE,KACTC,MAAOH,EAAKG,MACZL,KAAME,EAAKF,KAAKM,QAAQL,KAAI,SAACM,EAAkBC,GAE7C,OADAT,IAAgBG,EAAKF,KAAKS,QAAQC,OAC3B,CACLC,EAAGJ,EACHK,EAAGV,EAAKF,KAAKS,QAAQD,GAEzB,IAEJ,IAGET,YAAAA,EAEJ,GAAG,CAACH,EAAMI,OAEJa,EAAiBf,EAAAA,aAAkB,WACvC,IAAIgB,EAAmB,CACrBd,KAAMH,EAAWG,KACjBe,OAAQ,CAAEC,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAChDC,OAAQ,CAAEC,KAAM,SAAUC,SAAS,GACnCC,OAAQ,CAAEF,KAAM,SAAUC,SAAS,GACnCE,OAAQ,SAACC,GAAY,IAADC,EACdC,EAAQ9B,EAAWG,KAAK4B,MAAK,SAAC1B,GAAS,OAAKA,EAAKC,KAAOsB,EAAEI,OAAO,IACrE,OAAmB,QAAnBH,EAAY,OAALC,QAAK,IAALA,OAAK,EAALA,EAAOtB,aAAK,IAAAqB,EAAAA,EAAI,MACzB,EACAI,QAAS,SAAAC,GAAoB,IAAjBC,EAAID,EAAJC,KACV,OACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CAEFC,IAAK,CACHC,WAAY,QACZC,GAAI,KACJC,QAAS,QACTC,OAAQ,kBACRC,SAAA,EAEFC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,OAAO,KAAKC,GAAG,SAAQJ,SAC1BR,EAAKH,WAERI,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CAACC,IAAK,CAAEG,QAAS,SAAUE,SAAA,EAC7BC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACP,IAAK,CAAEU,GAAI,MAAOL,SAAC,QACzBC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACrC,MAAO2B,EAAK3B,MAAMmC,SAAER,EAAKrB,QAEjCsB,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CAACC,IAAK,CAAEG,QAAS,SAAUE,SAAA,EAC7BC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACP,IAAK,CAAEU,GAAI,MAAOL,SAAC,QACzBC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACrC,MAAO2B,EAAK3B,MAAMmC,SAAER,EAAKpB,SAjB5BoB,EAAK7B,GAqBhB,EACA2C,SAAU,EACVC,QAAS,KACTC,UAAW,KACXC,WAAY,CACVC,SAAU,EACVC,YAAa,EACbC,aAAc,EACdC,aAAc,GACdC,eAAgB,UAElBC,SAAU,CACRL,SAAU,EACVC,YAAa,EACbC,aAAc,EACdC,cAAe,GACfC,eAAgB,UAElBE,QAAS,CACP,CACEC,OAAQ,YACRC,UAAW,SACXC,SAAS,EACTC,WAAY,IACZC,WAAY,EACZC,aAAc,EACdC,cAAe,gBACfC,UAAW,GACXC,WAAY,GACZC,YAAa,IACbC,WAAY,EACZC,kBAAmB,oBACnBC,QAAS,CACP,CACEC,GAAI,QACJC,MAAO,CACLC,eAAgB,qBAChBN,YAAa,QAOzB,OAAIrE,EAAWE,YAAc,KACpB0C,EAAAA,EAAAA,KAACgC,EAAAA,IAA2BC,EAAAA,EAAAA,GAAA,GAAK5D,KAE1CA,EAAoB,OAAI,CACtB,OACA,OACA,UACA,OACA,UACA,cACA,SAEFA,EAAY6D,UAAY,UACjBlC,EAAAA,EAAAA,KAACmC,EAAAA,IAAqBF,EAAAA,EAAAA,GAAA,GAAK5D,IACpC,GAAG,CAACjB,IAEJ,OACE4C,EAAAA,EAAAA,KAAA,OAAKoC,UAAU,wBAAuBrC,UACpCC,EAAAA,EAAAA,KAAC5B,EAAc,KAGrB,C","sources":["pages/Board/components/VisualizationElements/ScatterPlotVizElement.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {\n  ResponsiveScatterPlot,\n  ResponsiveScatterPlotCanvas,\n} from '@nivo/scatterplot';\n\nimport { Box, Text } from 'components/kit_v2';\n\nfunction ScatterPlotVizElement(props: any) {\n  const parsedData = React.useMemo(() => {\n    let pointsCount = 0;\n    const data = props.data.map((item: any) => {\n      return {\n        id: item.name,\n        color: item.color,\n        data: item.data.xValues.map((dataItem: number, index: number) => {\n          pointsCount += +item.data.yValues.length;\n          return {\n            x: dataItem,\n            y: item.data.yValues[index],\n          };\n        }),\n      };\n    });\n    return {\n      data,\n      pointsCount,\n    };\n  }, [props.data]);\n\n  const ScatterElement = React.useCallback(() => {\n    let commonProps: any = {\n      data: parsedData.data,\n      margin: { top: 50, right: 90, bottom: 50, left: 60 },\n      xScale: { type: 'linear', reverse: false },\n      yScale: { type: 'linear', reverse: false },\n      colors: (d: any) => {\n        let point = parsedData.data.find((item: any) => item.id === d.serieId);\n        return point?.color ?? '#000';\n      },\n      tooltip: ({ node }: any) => {\n        return (\n          <Box\n            key={node.id}\n            css={{\n              background: 'white',\n              br: '$3',\n              padding: '$6 $8',\n              border: '1px solid #ccc',\n            }}\n          >\n            <Text weight='$4' as='strong'>\n              {node.serieId}\n            </Text>\n            <Box css={{ padding: '3px 0' }}>\n              <Text css={{ mr: '$5' }}>x:</Text>\n              <Text color={node.color}>{node.x}</Text>\n            </Box>\n            <Box css={{ padding: '3px 0' }}>\n              <Text css={{ mr: '$5' }}>y:</Text>\n              <Text color={node.color}>{node.y}</Text>\n            </Box>\n          </Box>\n        );\n      },\n      nodeSize: 8,\n      axisTop: null,\n      axisRight: null,\n      axisBottom: {\n        tickSize: 4,\n        tickPadding: 4,\n        tickRotation: 0,\n        legendOffset: 36,\n        legendPosition: 'middle',\n      },\n      axisLeft: {\n        tickSize: 4,\n        tickPadding: 4,\n        tickRotation: 0,\n        legendOffset: -55,\n        legendPosition: 'middle',\n      },\n      legends: [\n        {\n          anchor: 'top-right',\n          direction: 'column',\n          justify: false,\n          translateX: 110,\n          translateY: 0,\n          itemsSpacing: 0,\n          itemDirection: 'left-to-right',\n          itemWidth: 80,\n          itemHeight: 20,\n          itemOpacity: 0.75,\n          symbolSize: 8,\n          symbolBorderColor: 'rgba(0, 0, 0, .5)',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemBackground: 'rgba(0, 0, 0, .03)',\n                itemOpacity: 1,\n              },\n            },\n          ],\n        },\n      ],\n    };\n    if (parsedData.pointsCount > 600) {\n      return <ResponsiveScatterPlotCanvas {...commonProps} />;\n    }\n    commonProps['layers'] = [\n      'grid',\n      'axes',\n      'markers',\n      'mesh',\n      'legends',\n      'annotations',\n      'nodes',\n    ];\n    commonProps.blendMode = 'darken';\n    return <ResponsiveScatterPlot {...commonProps} />;\n  }, [parsedData]);\n\n  return (\n    <div className='VizComponentContainer'>\n      <ScatterElement />\n    </div>\n  );\n}\n\nexport default ScatterPlotVizElement;\n"],"names":["props","parsedData","React","pointsCount","data","map","item","id","name","color","xValues","dataItem","index","yValues","length","x","y","ScatterElement","commonProps","margin","top","right","bottom","left","xScale","type","reverse","yScale","colors","d","_point$color","point","find","serieId","tooltip","_ref","node","_jsxs","Box","css","background","br","padding","border","children","_jsx","Text","weight","as","mr","nodeSize","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legendOffset","legendPosition","axisLeft","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolBorderColor","effects","on","style","itemBackground","ResponsiveScatterPlotCanvas","_objectSpread","blendMode","ResponsiveScatterPlot","className"],"sourceRoot":""}