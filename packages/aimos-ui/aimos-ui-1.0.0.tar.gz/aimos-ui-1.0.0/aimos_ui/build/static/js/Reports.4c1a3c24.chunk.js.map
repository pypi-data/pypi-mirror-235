{"version":3,"file":"static/js/Reports.4c1a3c24.chunk.js","mappings":"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","sources":["components/Illustration/Illustration.tsx","components/Illustration/config.tsx","components/Illustration/index.ts","modules/core/api/reportsApi/index.ts","pages/Reports/ReportsStore.tsx","../node_modules/@tabler/icons-react/src/icons/IconPlus.js","pages/Reports/useReports.tsx","pages/Reports/Reports.style.ts","../node_modules/@tabler/icons-react/src/icons/IconEdit.js","../node_modules/@tabler/icons-react/src/icons/IconTrash.js","../node_modules/@tabler/icons-react/src/icons/IconCalendarEvent.js","pages/Reports/ReportCard/ReportCard.style.ts","pages/Reports/ReportCard/ReportCard.tsx","pages/Reports/Reports.tsx","pages/Reports/index.ts","../node_modules/@tabler/icons-react/src/icons/IconDotsVertical.js"],"sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nimport { Text } from 'components/kit';\nimport { ITextProps } from 'components/kit/Text';\n\nimport {\n  IIllustrationProps,\n  ILLUSTRATION_TYPES,\n  ILLUSTRATION_LIST,\n  getDefaultIllustrationContent,\n  IllustrationSizeType,\n} from '.';\n\nimport './Illustration.scss';\n\nconst CONTENT_PROPS: Record<IllustrationSizeType, ITextProps> = {\n  small: {\n    size: 12,\n  },\n  medium: {\n    size: 14,\n  },\n  large: {\n    size: 16,\n  },\n  xLarge: {\n    size: 18,\n  },\n};\n\nfunction Illustration({\n  type = ILLUSTRATION_TYPES.Never_Executed,\n  content = getDefaultIllustrationContent(type),\n  image,\n  className = '',\n  size = 'xLarge',\n  showImage = true,\n  children,\n}: IIllustrationProps): React.FunctionComponentElement<React.ReactNode> {\n  return (\n    <div className={classNames('Illustration', { [className]: !!className })}>\n      <div className='Illustration__container'>\n        {showImage ? (\n          <div\n            className={classNames('Illustration__container__img', {\n              [`Illustration__container__img__${size}`]: true,\n            })}\n          >\n            {image || ILLUSTRATION_LIST[type]}\n          </div>\n        ) : null}\n        <Text\n          component='p'\n          className='Illustration__container__content'\n          {...CONTENT_PROPS[size]}\n        >\n          {content}\n        </Text>\n        {children}\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(Illustration);\n","import * as React from 'react';\n\nimport { ReactComponent as EmptyBookmarks } from 'assets/illustrations/emptyBookmarks.svg';\nimport { ReactComponent as EmptySearch } from 'assets/illustrations/emptySearch.svg';\nimport { ReactComponent as ExploreData } from 'assets/illustrations/exploreData.svg';\nimport { ReactComponent as WrongSearch } from 'assets/illustrations/wrongSearch.svg';\n\nimport { DOCUMENTATIONS } from 'config/references';\n\nimport { PipelineStatusEnum } from 'modules/core/engine/types';\n\nimport { IllustrationType } from '.';\n\nconst ILLUSTRATION_TYPES: Record<string, IllustrationType> = {\n  Never_Executed: PipelineStatusEnum.Never_Executed,\n  Insufficient_Resources: PipelineStatusEnum.Insufficient_Resources,\n  Empty: PipelineStatusEnum.Empty,\n  Failed: PipelineStatusEnum.Failed,\n  Empty_Bookmarks: 'emptyBookmarks',\n  Empty_Boards: 'emptyBoards',\n  Empty_Reports: 'emptyReports',\n  Empty_Apps: 'emptyApps',\n};\n\nconst ILLUSTRATION_LIST: Record<IllustrationType, React.ReactNode> = {\n  [ILLUSTRATION_TYPES.Never_Executed]: <ExploreData />,\n  [ILLUSTRATION_TYPES.Insufficient_Resources]: <ExploreData />,\n  [ILLUSTRATION_TYPES.Empty]: <EmptySearch />,\n  [ILLUSTRATION_TYPES.Failed]: <WrongSearch />,\n  [ILLUSTRATION_TYPES.Empty_Bookmarks]: <EmptyBookmarks />,\n  [ILLUSTRATION_TYPES.Empty_Boards]: <EmptyBookmarks />,\n  [ILLUSTRATION_TYPES.Empty_Reports]: <EmptyBookmarks />,\n  [ILLUSTRATION_TYPES.Empty_Apps]: <EmptyBookmarks />,\n};\n\nfunction getDefaultIllustrationContent(\n  type: IllustrationType = ILLUSTRATION_TYPES.Never_Executed,\n): React.ReactNode {\n  const Never_Executed = (\n    <>\n      It’s super easy to search Aim experiments. Just start typing your query in\n      the search bar above.\n      <br />\n      Look up\n      <a\n        className='qlAnchor'\n        href={DOCUMENTATIONS.EXPLORERS.SEARCH}\n        target='_blank'\n        rel='noreferrer'\n      >\n        search docs\n      </a>\n      to learn more.\n    </>\n  );\n  const Failed = 'Incorrect Query';\n  const Insufficient_Resources = \"You don't have any tracked data\";\n  const Empty = 'No Results';\n  const Empty_Bookmarks = \"You don't have any saved bookmark\";\n  const Empty_Boards = \"You don't have any board created\";\n  const Empty_Reports = \"You don't have any report created\";\n  const Empty_Apps = \"You don't have any installed apps\";\n\n  const CONTENT = {\n    [ILLUSTRATION_TYPES.Never_Executed]: Never_Executed,\n    [ILLUSTRATION_TYPES.Failed]: Failed,\n    [ILLUSTRATION_TYPES.Insufficient_Resources]: Insufficient_Resources,\n    [ILLUSTRATION_TYPES.Empty]: Empty,\n    [ILLUSTRATION_TYPES.Empty_Bookmarks]: Empty_Bookmarks,\n    [ILLUSTRATION_TYPES.Empty_Boards]: Empty_Boards,\n    [ILLUSTRATION_TYPES.Empty_Reports]: Empty_Reports,\n    [ILLUSTRATION_TYPES.Empty_Apps]: Empty_Apps,\n  };\n  return CONTENT[type] || null;\n}\n\nexport { ILLUSTRATION_TYPES, ILLUSTRATION_LIST, getDefaultIllustrationContent };\n","import Illustration from './Illustration';\n\nexport * from './Illustration.d';\nexport * from './config';\n\nexport default Illustration;\n","import { getAPIHost } from 'config/config';\n\nimport ENDPOINTS from 'services/api/endpoints';\nimport NetworkService from 'services/NetworkService';\n\nimport { ReportsProps, ReportsRequestBodyProps } from './types.d';\n\nconst api = new NetworkService(`${getAPIHost()}${ENDPOINTS.REPORTS.BASE}`);\n\n/**\n * function fetchReportsList\n * this call is used for fetching reports list.\n * @returns {Promise<any[]>}\n */\n\nasync function fetchReportsList(): Promise<any[]> {\n  return (await api.makeAPIGetRequest(ENDPOINTS.REPORTS.GET)).body;\n}\n\n/**\n * function fetchReport\n * this call is used for fetching a report by id.\n * @param id - id of report\n * @returns {Promise<any>}\n */\nasync function fetchReport(id: string): Promise<ReportsProps> {\n  return (await api.makeAPIGetRequest(`${ENDPOINTS.REPORTS.GET}${id}`)).body;\n}\n\n/**\n * function createReport\n * this call is used for creating new report.\n * @param reqBody - query body params\n * @returns {Promise<any>}\n */\nasync function createReport(\n  reqBody: ReportsRequestBodyProps,\n): Promise<ReportsProps> {\n  return (\n    await api.makeAPIPostRequest(`${ENDPOINTS.REPORTS.CREATE}`, {\n      body: reqBody,\n    })\n  ).body;\n}\n\n/**\n * function updateReport\n * this call is used for updating a report by id.\n * @param id - id of report\n * @param reqBody - query body params\n * @returns {Promise<any>}\n */\nasync function updateReport(id: string, reqBody: any): Promise<any> {\n  return (\n    await api.makeAPIPutRequest(`${ENDPOINTS.REPORTS.UPDATE}${id}`, {\n      body: reqBody,\n    })\n  ).body;\n}\n\n/**\n * function deleteReport\n * this call is used for deleting a report by id.\n * @param id - id of report\n * @returns {Promise<any>}\n */\nasync function deleteReport(id: string): Promise<any> {\n  return (await api.makeAPIDeleteRequest(`${ENDPOINTS.REPORTS.DELETE}${id}`))\n    .body;\n}\n\nexport {\n  fetchReportsList,\n  fetchReport,\n  createReport,\n  updateReport,\n  deleteReport,\n};\n","import create from 'zustand';\n\nimport { IToastProps } from 'components/kit_v2/Toast';\nimport useNotificationServiceStore from 'components/NotificationServiceContainer/NotificationServiceStore';\n\nimport {\n  createReport,\n  deleteReport,\n  fetchReport,\n  fetchReportsList,\n  updateReport,\n} from 'modules/core/api/reportsApi';\nimport {\n  ReportsProps,\n  ReportsRequestBodyProps,\n} from 'modules/core/api/reportsApi/types.d';\n\n// Replace this with your actual IToastProps interface definition\n\ninterface ReportsStore {\n  isLoading: boolean;\n  listData: any[];\n  notifyData: IToastProps[];\n  report: ReportsProps | any;\n  editorValue: string;\n  setEditorValue: (value: string) => void;\n  getReportsData: () => Promise<void>;\n  addCatchError: (error: any) => void;\n  getReportData: (reportId: string) => Promise<void | ReportsProps>;\n  onReportDelete: (reportId: string) => Promise<void>;\n  onReportUpdate: (reportId: string, reportBody: any) => Promise<void>;\n  onReportCreate: (\n    reportBody: ReportsRequestBodyProps,\n  ) => Promise<ReportsProps | void>;\n  destroy: () => void;\n}\n\nconst useReportsStore = create<ReportsStore>((set, get) => ({\n  isLoading: true,\n  listData: [],\n  notifyData: [],\n  editorValue: '',\n  setEditorValue: (value: string) => {\n    set({ editorValue: value });\n  },\n  report: {\n    name: 'New Report',\n    description: '',\n    code: '',\n  },\n  addCatchError: (error: any) => {\n    set({ isLoading: false });\n    useNotificationServiceStore.getState().onNotificationAdd({\n      status: 'danger',\n      message: error.detail,\n    });\n  },\n  getReportsData: async () => {\n    set({ isLoading: true });\n    try {\n      const reportsData = await fetchReportsList();\n      set({ listData: reportsData, isLoading: false });\n    } catch (error: any) {\n      get().addCatchError(error);\n    }\n  },\n\n  getReportData: async (reportId: string) => {\n    set({ isLoading: true });\n    try {\n      const reportData = await fetchReport(reportId);\n      set({\n        report: reportData,\n        isLoading: false,\n        editorValue: reportData.code,\n      });\n    } catch (error: any) {\n      get().addCatchError(error);\n    }\n  },\n\n  onReportCreate: async (reqBody: ReportsRequestBodyProps) => {\n    try {\n      const report = await createReport(reqBody);\n      const listData = get().listData;\n      if (listData.length !== 0) {\n        set({\n          listData: [...listData, report],\n        });\n      }\n      set({\n        report: {\n          name: report.name,\n          description: report.description,\n          code: report.code,\n        },\n      });\n      useNotificationServiceStore.getState().onNotificationAdd({\n        status: 'success',\n        message: 'Report created successfully',\n      });\n      return report;\n    } catch (error: any) {\n      get().addCatchError(error);\n    }\n  },\n\n  onReportDelete: async (reportId: string) => {\n    try {\n      await deleteReport(reportId);\n      set({\n        listData: get().listData.filter((report) => report.id !== reportId),\n      });\n      useNotificationServiceStore.getState().onNotificationAdd({\n        status: 'success',\n        message: 'Report deleted successfully',\n      });\n    } catch (error: any) {\n      get().addCatchError(error);\n    }\n  },\n\n  onReportUpdate: async (reportId: string, reportBody: any) => {\n    try {\n      const reportData = await updateReport(reportId, reportBody);\n      set({\n        listData: get().listData.map((report) =>\n          report.id === reportId ? reportData : report,\n        ),\n        report: reportData,\n      });\n      useNotificationServiceStore.getState().onNotificationAdd({\n        status: 'success',\n        message: 'Report updated successfully',\n      });\n    } catch (error: any) {\n      get().addCatchError(error);\n    }\n  },\n\n  destroy: () => {\n    set({\n      listData: [],\n      report: {\n        name: 'New Report',\n        description: '',\n        code: '',\n      },\n    });\n  },\n}));\n\nexport default useReportsStore;\n","import createReactComponent from '../createReactComponent';\nexport default createReactComponent('plus', 'IconPlus', [\n  ['path', { d: 'M12 5l0 14', key: 'svg-0' }],\n  ['path', { d: 'M5 12l14 0', key: 'svg-1' }],\n]);\n","import React from 'react';\n\nimport { ANALYTICS_EVENT_KEYS_MAP } from 'config/analytics/analyticsKeysMap';\n\nimport * as analytics from 'services/analytics';\n\nimport useReportsStore from './ReportsStore';\n\nfunction useReports() {\n  const reportsList = useReportsStore((state) => state.listData);\n  const isLoading = useReportsStore((state) => state.isLoading);\n  const notifyData = useReportsStore((state) => state.notifyData);\n  const getReportsData = useReportsStore((state) => state.getReportsData);\n  const onReportDelete = useReportsStore((state) => state.onReportDelete);\n\n  React.useEffect(() => {\n    if (reportsList?.length === 0) {\n      getReportsData();\n    }\n    analytics.pageView(ANALYTICS_EVENT_KEYS_MAP.reports.pageView);\n  }, []);\n\n  const [searchValue, setSearchValue] = React.useState<string>('');\n\n  function handleSearchChange(e: React.ChangeEvent<HTMLInputElement>): void {\n    const { value } = e.target;\n    setSearchValue(value);\n  }\n\n  const filteredReports = React.useMemo(() => {\n    if (!searchValue) {\n      return reportsList;\n    }\n\n    return reportsList?.filter((report: any) => {\n      return report.name.toLowerCase().includes(searchValue.toLowerCase());\n    });\n  }, [reportsList, searchValue]);\n\n  return {\n    searchValue,\n    handleSearchChange,\n    reports: reportsList,\n    isLoading,\n    notifyData,\n    filteredReports,\n    onReportDelete,\n  };\n}\n\nexport default useReports;\n","import { styled } from 'config/stitches';\nimport { LayoutContainer } from 'config/stitches/foundations/layout';\n\nconst ReportsContainer = styled(LayoutContainer, {\n  $$space: '$space$15',\n  py: '$$space',\n  height: 'calc(100vh - $$space)',\n  overflowY: 'auto',\n});\n\nconst ReportsCardWrapper = styled('div', {\n  mt: '$9',\n  display: 'flex',\n  flexWrap: 'wrap',\n  gap: '$13',\n});\n\nconst BookmarksContainerStyled = styled(LayoutContainer, {\n  overflow: 'auto',\n  height: '100vh',\n  minWidth: '648px',\n  py: '$13',\n});\nconst ReportsListContainer = styled('div', {\n  mt: '$9',\n  bs: 'inset 0 0 0 1px #B5C4D3',\n  br: '$3',\n});\n\nconst ReportsNoResultsContainer = styled('div', {\n  textAlign: 'center',\n  bs: 'inset 0 -1px 0 0 #B5C4D3',\n  p: '$13',\n});\n\nexport {\n  ReportsContainer,\n  ReportsCardWrapper,\n  BookmarksContainerStyled,\n  ReportsListContainer,\n  ReportsNoResultsContainer,\n};\n","import createReactComponent from '../createReactComponent';\nexport default createReactComponent('edit', 'IconEdit', [\n  [\n    'path',\n    {\n      d: 'M7 7h-1a2 2 0 0 0 -2 2v9a2 2 0 0 0 2 2h9a2 2 0 0 0 2 -2v-1',\n      key: 'svg-0',\n    },\n  ],\n  [\n    'path',\n    {\n      d: 'M20.385 6.585a2.1 2.1 0 0 0 -2.97 -2.97l-8.415 8.385v3h3l8.385 -8.415z',\n      key: 'svg-1',\n    },\n  ],\n  ['path', { d: 'M16 5l3 3', key: 'svg-2' }],\n]);\n","import createReactComponent from '../createReactComponent';\nexport default createReactComponent('trash', 'IconTrash', [\n  ['path', { d: 'M4 7l16 0', key: 'svg-0' }],\n  ['path', { d: 'M10 11l0 6', key: 'svg-1' }],\n  ['path', { d: 'M14 11l0 6', key: 'svg-2' }],\n  [\n    'path',\n    { d: 'M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12', key: 'svg-3' },\n  ],\n  ['path', { d: 'M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3', key: 'svg-4' }],\n]);\n","import createReactComponent from '../createReactComponent';\nexport default createReactComponent('calendar-event', 'IconCalendarEvent', [\n  [\n    'path',\n    {\n      d: 'M4 5m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z',\n      key: 'svg-0',\n    },\n  ],\n  ['path', { d: 'M16 3l0 4', key: 'svg-1' }],\n  ['path', { d: 'M8 3l0 4', key: 'svg-2' }],\n  ['path', { d: 'M4 11l16 0', key: 'svg-3' }],\n  ['path', { d: 'M8 15h2v2h-2z', key: 'svg-4' }],\n]);\n","import { Box } from 'components/kit_v2';\n\nimport { styled } from 'config/stitches';\n\nconst ReportCardContainer = styled(Box, {\n  position: 'relative',\n  display: 'flex',\n  fd: 'column',\n  p: '$13',\n  bs: 'inset 0 -1px 0 0 #B5C4D3',\n  '&:last-child': { borderBottom: 'none' },\n});\n\nconst ReportCardHeader = styled('div', {\n  display: 'flex',\n  ai: 'center',\n});\n\nexport { ReportCardContainer, ReportCardHeader };\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport {\n  IconClipboard,\n  IconClipboardCheck,\n  IconDotsVertical,\n  IconEdit,\n  IconTrash,\n} from '@tabler/icons-react';\nimport { IconCalendarEvent } from '@tabler/icons-react';\n\nimport {\n  Box,\n  Dialog,\n  Icon,\n  IconButton,\n  Link,\n  ListItem,\n  Popover,\n  Separator,\n  Text,\n} from 'components/kit_v2';\n\nimport { PathEnum } from 'config/enums/routesEnum';\n\nimport { useCopy } from 'hooks/useCopy';\n\nimport { ReportCardContainer, ReportCardHeader } from './ReportCard.style';\n\nfunction ReportCard({\n  code,\n  name,\n  description,\n  id,\n  created_at,\n  onReportDelete,\n  ...props\n}: any) {\n  const { onCopy, copied } = useCopy(id);\n  return (\n    <ReportCardContainer key={id}>\n      <ReportCardHeader>\n        <Link\n          ellipsis\n          css={{ flex: 1 }}\n          fontWeight='$4'\n          fontSize='$6'\n          title={name}\n          to={PathEnum.Report.replace(':reportId', id)}\n        >\n          {name}\n        </Link>\n        <Popover\n          popperProps={{ align: 'end', css: { width: '108px', p: '$4 0' } }}\n          trigger={\n            <IconButton\n              variant='ghost'\n              color='secondary'\n              size='md'\n              icon={<IconDotsVertical />}\n            />\n          }\n          content={\n            <Box display='flex' fd='column'>\n              <Box p='0 $4'>\n                <NavLink\n                  style={{ textDecoration: 'none' }}\n                  to={`${PathEnum.Reports}/${id}/edit`}\n                >\n                  <ListItem\n                    size='lg'\n                    leftNode={<Icon size='md' icon={<IconEdit />} />}\n                  >\n                    Edit\n                  </ListItem>\n                </NavLink>\n                <ListItem\n                  size='lg'\n                  onClick={onCopy}\n                  leftNode={\n                    <Icon\n                      size='md'\n                      icon={copied ? <IconClipboardCheck /> : <IconClipboard />}\n                    />\n                  }\n                >\n                  {copied ? 'Copied' : 'Copy Url'}\n                </ListItem>\n              </Box>\n              <Separator margin={'$4'} />\n              <Dialog\n                title='Delete report'\n                titleIcon={<IconTrash />}\n                onConfirm={() => onReportDelete(id)}\n                description='Are you sure you want to delete this report?'\n                trigger={\n                  <ListItem\n                    size='lg'\n                    css={{ color: '$danger100', mx: '$4' }}\n                    leftNode={\n                      <Icon color='$danger100' size='md' icon={<IconTrash />} />\n                    }\n                  >\n                    Delete\n                  </ListItem>\n                }\n              />\n            </Box>\n          }\n        />\n      </ReportCardHeader>\n      <Box mb='$5' mt='$5' flex='1'>\n        <Text\n          ellipsis\n          color={description ? '$textPrimary' : '$textPrimary50'}\n          as='p'\n        >\n          {description || 'No description yet'}\n        </Text>\n      </Box>\n      <Box display='flex' ai='center'>\n        <Icon\n          size='md'\n          css={{ mr: '$3' }}\n          color='$secondary100'\n          icon={<IconCalendarEvent />}\n        />\n        <Text color='$secondary100' weight='$2'>\n          {new Date(created_at).toLocaleString()}\n        </Text>\n      </Box>\n    </ReportCardContainer>\n  );\n}\n\nReportCard.displayName = 'ReportCard';\nexport default React.memo(ReportCard);\n","import React from 'react';\n\nimport { IconPlus } from '@tabler/icons-react';\n\nimport BusyLoaderWrapper from 'components/BusyLoaderWrapper/BusyLoaderWrapper';\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\nimport { Box, Breadcrumb, Button, Input, Link, Text } from 'components/kit_v2';\nimport Illustration, { ILLUSTRATION_TYPES } from 'components/Illustration';\n\nimport { PathEnum } from 'config/enums/routesEnum';\nimport { TopBar } from 'config/stitches/foundations/layout';\n\nimport useReports from './useReports';\nimport {\n  ReportsContainer,\n  ReportsListContainer,\n  ReportsNoResultsContainer,\n} from './Reports.style';\nimport ReportCard from './ReportCard/ReportCard';\n\nfunction Reports(): React.FunctionComponentElement<React.ReactNode> {\n  const {\n    reports,\n    isLoading,\n    searchValue,\n    filteredReports,\n    onReportDelete,\n    handleSearchChange,\n  } = useReports();\n\n  return (\n    <ErrorBoundary>\n      <TopBar>\n        <Breadcrumb\n          items={[\n            {\n              name: 'Reports',\n              path: PathEnum.Reports,\n            },\n          ]}\n        />\n      </TopBar>\n      <ReportsContainer>\n        <BusyLoaderWrapper isLoading={isLoading} height='100%'>\n          {reports?.length > 0 ? (\n            <>\n              <Box display='flex' ai='center'>\n                <Box flex={1}>\n                  <Input\n                    inputSize='lg'\n                    value={searchValue}\n                    onChange={handleSearchChange}\n                    css={{ width: 380 }}\n                    placeholder='Search'\n                  />\n                </Box>\n                <Link\n                  underline={false}\n                  to={PathEnum.Report.replace(':reportId', 'new')}\n                >\n                  <Button\n                    size='lg'\n                    leftIcon={<IconPlus color='white' />}\n                    color='success'\n                  >\n                    New\n                  </Button>\n                </Link>\n              </Box>\n              <ReportsListContainer>\n                {filteredReports?.length > 0 ? (\n                  filteredReports.map((report: any) => (\n                    <ReportCard\n                      key={report?.id}\n                      onReportDelete={onReportDelete}\n                      {...report}\n                    />\n                  ))\n                ) : (\n                  <>\n                    <ReportsNoResultsContainer>\n                      <Text css={{ textAlign: 'center' }} size='$4'>\n                        No search results\n                      </Text>\n                    </ReportsNoResultsContainer>\n                    {reports.map((report: any) => (\n                      <ReportCard\n                        key={report.id}\n                        onReportDelete={onReportDelete}\n                        {...report}\n                      />\n                    ))}\n                  </>\n                )}\n              </ReportsListContainer>\n            </>\n          ) : (\n            <Illustration type={ILLUSTRATION_TYPES.Empty_Reports}>\n              <Box mt='$8' display='flex' ai='center' jc='center'>\n                <Link\n                  underline={false}\n                  to={PathEnum.Report.replace(':reportId', 'new')}\n                >\n                  <Button\n                    size='lg'\n                    leftIcon={<IconPlus color='white' />}\n                    color='success'\n                  >\n                    Create New Report\n                  </Button>\n                </Link>\n              </Box>\n            </Illustration>\n          )}\n        </BusyLoaderWrapper>\n      </ReportsContainer>\n    </ErrorBoundary>\n  );\n}\n\nexport default Reports;\n","import Reports from './Reports';\n\nexport default Reports;\n","import createReactComponent from '../createReactComponent';\nexport default createReactComponent('dots-vertical', 'IconDotsVertical', [\n  ['path', { d: 'M12 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0', key: 'svg-0' }],\n  ['path', { d: 'M12 19m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0', key: 'svg-1' }],\n  ['path', { d: 'M12 5m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0', key: 'svg-2' }],\n]);\n"],"names":["CONTENT_PROPS","small","size","medium","large","xLarge","Illustration","_ref","_ref$type","type","ILLUSTRATION_TYPES","Never_Executed","_ref$content","content","getDefaultIllustrationContent","image","_ref$className","className","_ref$size","_ref$showImage","showImage","children","_jsx","classNames","_defineProperty","_jsxs","concat","ILLUSTRATION_LIST","Text","_objectSpread","component","React","PipelineStatusEnum","Insufficient_Resources","Empty","Failed","Empty_Bookmarks","Empty_Boards","Empty_Reports","Empty_Apps","_ILLUSTRATION_LIST","ExploreData","EmptySearch","WrongSearch","EmptyBookmarks","_CONTENT","arguments","length","undefined","_Fragment","href","DOCUMENTATIONS","EXPLORERS","SEARCH","target","rel","api","NetworkService","getAPIHost","ENDPOINTS","REPORTS","BASE","fetchReportsList","_fetchReportsList","apply","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","makeAPIGetRequest","GET","abrupt","sent","body","stop","fetchReport","_x","_fetchReport","_callee2","id","_context2","createReport","_x2","_createReport","_callee3","reqBody","_context3","makeAPIPostRequest","CREATE","updateReport","_x3","_x4","_updateReport","_callee4","_context4","makeAPIPutRequest","UPDATE","deleteReport","_x5","_deleteReport","_callee5","_context5","makeAPIDeleteRequest","DELETE","useReportsStore","create","set","get","isLoading","listData","notifyData","editorValue","setEditorValue","value","report","name","description","code","addCatchError","error","useNotificationServiceStore","getState","onNotificationAdd","status","message","detail","getReportsData","_getReportsData","reportsData","t0","getReportData","_getReportData","reportId","reportData","onReportCreate","_onReportCreate","_toConsumableArray","onReportDelete","_onReportDelete","filter","onReportUpdate","_onReportUpdate","reportBody","map","destroy","IconPlus","createReactComponent","d","key","reportsList","state","analytics","ANALYTICS_EVENT_KEYS_MAP","reports","pageView","_React$useState","_React$useState2","_slicedToArray","searchValue","setSearchValue","filteredReports","toLowerCase","includes","handleSearchChange","e","ReportsContainer","styled","LayoutContainer","$$space","py","height","overflowY","ReportsListContainer","mt","display","flexWrap","gap","overflow","minWidth","bs","br","ReportsNoResultsContainer","textAlign","p","IconEdit","IconTrash","IconCalendarEvent","ReportCardContainer","Box","position","fd","borderBottom","ReportCardHeader","ai","ReportCard","created_at","_useCopy","_objectWithoutProperties","_excluded","useCopy","onCopy","copied","Link","ellipsis","css","flex","fontWeight","fontSize","title","to","PathEnum","Report","replace","Popover","popperProps","align","width","trigger","IconButton","variant","color","icon","IconDotsVertical","NavLink","style","textDecoration","Reports","ListItem","leftNode","Icon","onClick","IconClipboardCheck","IconClipboard","Separator","margin","Dialog","titleIcon","onConfirm","mx","mb","as","mr","weight","Date","toLocaleString","displayName","_useReports","useReports","ErrorBoundary","TopBar","Breadcrumb","items","path","BusyLoaderWrapper","Input","inputSize","onChange","placeholder","underline","Button","leftIcon","jc"],"sourceRoot":""}