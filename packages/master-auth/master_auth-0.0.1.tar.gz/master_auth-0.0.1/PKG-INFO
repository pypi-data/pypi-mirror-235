Metadata-Version: 2.1
Name: master_auth
Version: 0.0.1
Summary: check auth use mongodb
Project-URL: Documentation, https://asmitul.github.io/master_auth
Project-URL: Issues, https://github.com/asmitul/master_auth/issues
Project-URL: Source, https://github.com/asmitul/master_auth
Author: asmitul
License-Expression: MIT
License-File: LICENSE
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Classifier: Topic :: Internet
Classifier: Topic :: Software Development
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Libraries :: Application Frameworks
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: <3.12,>=3.8
Requires-Dist: bcrypt>=4.0.1
Requires-Dist: pymongo>=4.5.0
Provides-Extra: docs
Requires-Dist: mkdocs-git-revision-date-localized-plugin~=1.1.0; extra == 'docs'
Requires-Dist: mkdocs-material~=8.5.4; extra == 'docs'
Requires-Dist: mkdocstrings[python]~=0.19.0; extra == 'docs'
Requires-Dist: mkdocs~=1.4.0; extra == 'docs'
Provides-Extra: quality
Requires-Dist: black~=22.10.0; extra == 'quality'
Requires-Dist: mypy~=1.4.0; extra == 'quality'
Requires-Dist: pre-commit~=2.20.0; extra == 'quality'
Requires-Dist: ruff~=0.0.263; extra == 'quality'
Provides-Extra: tests
Requires-Dist: pytest-cov~=4.1; extra == 'tests'
Requires-Dist: pytest~=7.1.2; extra == 'tests'
Description-Content-Type: text/markdown

# master-auth

check auth use mongodb 

<!-- insert useage -->
## how to use
### save password to mongodb
```python
from master_auth import core

core.save_password(mongodb_username, mongodb_password, mongodb_host, mongodb_port, database_name,collection_name,username, password)
```

### check password from mongodb
```python
from master_auth import core

core.check_password(mongodb_username, mongodb_password, mongodb_host, mongodb_port, database_name,collection_name,username, password)
```

### update password to mongodb
```python
from master_auth import core

core.update_password(mongodb_username, mongodb_password, mongodb_host, mongodb_port, database_name,collection_name,username, password_old, password_new)
```

## v0.0.1
- [x] save password to mongodb , password is hashed
- [x] check password from mongodb , password is hashed
- [x] update password to mongodb , password is hashed