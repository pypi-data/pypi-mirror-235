<?xml version="1.0"?>
<!--
  Copyright 2023 NXP

  SPDX-License-Identifier: BSD-3-Clause
-->
<regs:peripheral xmlns:regs="http://swtools.freescale.net/XSD/registers/4.0/regsPeripheral.xsd"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://swtools.freescale.net/XSD/registers/4.0/regsPeripheral.xsd http://swtools.freescale.net/XSD/registers/4.0/regsPeripheral.xsd">
  <register offset="0" width="32" name="BOOT_CFG" description="Boot Configuration">
    <alias type="CMSIS" value="CMPA.BOOT_CFG"/>
    <reserved_bit_field offset="0" width="2" reset_value="0"/>
    <reserved_bit_field offset="2" width="2" reset_value="0"/>
    <bit_field offset="4" width="3" name="ISP_BOOT_IF" access="RO" reset_value="0" description="ISP boot interface">
      <alias type="CMSIS" value="ISP_BOOT_INTERFACE(x)"/>
      <bit_field_value name="AUTO_ISP" value="0b000" description="Auto ISP"/>
      <bit_field_value name="UART_ISP" value="0b001" description="UART ISP"/>
      <bit_field_value name="SPI_SLAVE" value="0b010" description="SPI Slave ISP"/>
      <bit_field_value name="I2C_SLAVE" value="0b011" description="I2C slave ISP"/>
      <bit_field_value name="USB0_HID" value="0b100" description="USB0_HID"/>
      <bit_field_value name="USB1_HID" value="0b101" description="USB1_HID"/>
      <bit_field_value name="CAN_ISP" value="0b110" description="CAN ISP"/>
      <bit_field_value name="RESERVED" value="0b111" description="Reserved"/>
    </bit_field>
    <reserved_bit_field offset="7" width="1" reset_value="0"/>
    <reserved_bit_field offset="8" width="2" reset_value="0"/>
    <reserved_bit_field offset="10" width="2" reset_value="0"/>
    <bit_field offset="12" width="2" name="BOOT_SPEED" access="RO" reset_value="0" description="Core Clock">
      <alias type="CMSIS" value="BOOT_SPEED(x)"/>
      <bit_field_value name="FRO_48_MHZ" value="0b00" description="48Mhz FRO @1v0"/>
      <bit_field_value name="FRO_96_MHZ" value="0b01" description="96MHz FRO @1v1"/>
      <bit_field_value name="RESERVED" value="0b10" description="Reserved @1v2"/>
      <bit_field_value name="FRO_12_MHZ" value="0b11" description="12MHz FRO @1v0"/>
    </bit_field>
    <bit_field offset="14" width="2" name="AGDET_EN" access="RO" reset_value="0" description="AGDET Enable">
      <alias type="CMSIS" value="AGDET_EN(x)"/>
      <bit_field_value name="ENABLED_0b00" value="0b00" description="Enable AGDET Reset"/>
      <bit_field_value name="ENABLED_0b01" value="0b01" description="Enable AGDET Reset"/>
      <bit_field_value name="ENABLED_0b10" value="0b10" description="Enable AGDET Reset"/>
      <bit_field_value name="DISABLED_0b11" value="0b11" description="Don't enable AGDET Reset"/>
    </bit_field>
    <bit_field offset="16" width="16" name="HEADER" access="RO" reset_value="0x5963" description="CMPA Header marker should be set to 0x5963">
      <alias type="CMSIS" value="0x5963"/>
    </bit_field>
  </register>
  <register offset="0x4" width="32" name="FLASH_CFG" description="Flash Configuration">
    <bit_field offset="0" width="5" name="FLASH_REMAP_SIZE" access="RO" reset_value="0" description="Flash remap size. &amp;#10;This field should be written to remap field in flash.">
      <alias type="CMSIS" value="FLASH_REMAP_SZ(x)"/>
    </bit_field>
    <reserved_bit_field offset="5" width="3" reset_value="0"/>
    <bit_field offset="8" width="2" name="ISP_FT_ENTRY" access="RO" reset_value="0" description="Authentication failure">
      <alias type="CMSIS" value="ISP_FT_ENTRY(x)"/>
      <bit_field_value name="ALLOWED_0b00" value="0b00" description="ISP entry allowed"/>
      <bit_field_value name="DISABLED_0b01" value="0b01" description="ISP entry disabled"/>
      <bit_field_value name="ALLOWED_0b10" value="0b10" description="ISP entry allowed"/>
      <bit_field_value name="ALLOWED_0b11" value="0b11" description="ISP entry allowed"/>
    </bit_field>
    <bit_field offset="10" width="2" name="ISP_PIN_ENTRY" access="RO" reset_value="0" description="Disable ISP mode entry  through pin assertion.">
      <alias type="CMSIS" value="ISP_PIN_ENTRY(x)"/>
      <bit_field_value name="ALLOWED_0b00" value="0b00" description="ISP entry allowed"/>
      <bit_field_value name="DISABLED_0b01" value="0b01" description="ISP entry disabled"/>
      <bit_field_value name="ALLOWED_0b10" value="0b10" description="ISP entry allowed"/>
      <bit_field_value name="ALLOWED_0b11" value="0b11" description="ISP entry allowed"/>
    </bit_field>
    <bit_field offset="12" width="2" name="ISP_DM_ENTRY" access="RO" reset_value="0" description="Disable ISP mode entry through debug mailbox command.">
      <alias type="CMSIS" value="ISP_DM_ENTRY(x)"/>
      <bit_field_value name="ALLOWED_0b00" value="0b00" description="ISP entry allowed"/>
      <bit_field_value name="DISABLED_0b01" value="0b01" description="ISP entry disabled"/>
      <bit_field_value name="ALLOWED_0b10" value="0b10" description="ISP entry allowed"/>
      <bit_field_value name="ALLOWED_0b11" value="0b11" description="ISP entry allowed"/>
    </bit_field>
    <bit_field offset="14" width="2" name="ISP_API_ENTRY" access="RO" reset_value="0" description="Disable ISP mode entry through ROM API call. ISP mode can be entered through ROM API invocation">
      <alias type="CMSIS" value="ISP_API_ENTRY(x)"/>
      <bit_field_value name="ALLOWED_0b00" value="0b00" description="ISP entry allowed"/>
      <bit_field_value name="DISABLED_0b01" value="0b01" description="ISP entry disabled"/>
      <bit_field_value name="ALLOWED_0b10" value="0b10" description="ISP entry allowed"/>
      <bit_field_value name="ALLOWED_0b11" value="0b11" description="ISP entry allowed"/>
    </bit_field>
    <bit_field offset="16" width="2" name="ACTIVE_IMG_PROT" access="RO" reset_value="0" description="Protection of active image. &amp;10;This field defines protection of flash area occupied by active image. Only applicable to internal flash.">
      <alias type="CMSIS" value="PROTECTION_OF_ACTIVE_IMAGE(x)"/>
      <bit_field_value name="NO_PROTECTION" value="0b00" description="No protection after from ACL list."/>
      <bit_field_value name="WITH_STICKY_LOCK" value="0b01" description="Write protect active image area with sticky lock."/>
      <bit_field_value name="NO_STICKY_LOCK" value="0b10" description="Write protect active image area without sticky lock."/>
      <bit_field_value name="XOM_PROTECTION" value="0b11" description="XOM protect active image area with sticky lock."/>
    </bit_field>
    <reserved_bit_field offset="18" width="14" reset_value="0"/>
  </register>
  <register offset="0x8" width="32" name="BOOT_LED_STATUS" description="BOOT_LED_STATUS">
    <reserved_bit_field offset="0" width="8" reset_value="0"/>
    <bit_field offset="8" width="8" name="ISP_BOOT_LED" access="RO" reset_value="0" description="Assert on ISP fall through. &amp;#10;ROM drives the GPIO pin identified by this field whenever primary boot fails and execution falls through to ISP mode. &amp;#10;[4:0] GPIO Pin number &amp;#10;[7:5] GPIO port number">
    </bit_field>
    <bit_field offset="16" width="8" name="BOOT_FAIL_LED" access="RO" reset_value="0" description="Assert on fatal errors during boot. &amp;#10;ROM toggles the GPIO pin identified by this field whenever primary boot fails due to fatal errors before locking-up/reset. &amp;#10;Note, use QUICK_SET_/CLR_GPIOx field to set the default level of pin. &amp;#10;[4:0] GPIO Pin number &amp;#10;[7:5] GPIO port number">
    </bit_field>
    <reserved_bit_field offset="24" width="8" reset_value="0"/>
  </register>
  <register offset="0xC" width="32" name="BOOT_TIMERS" description="BOOT_TIMERS">
    <alias type="CMSIS" value="BOOT_TIMERS"/>
    <bit_field offset="0" width="16" name="POWERDOWN_TIMEOUT_SECS" access="RO" reset_value="0" description="Powerdown timeout: &amp;#10;Timeout value in seconds. &amp;#10;When a non-zero value is programmed in this field ROM uses it as idle timeout value to enter power-down state to conserve power.">
    </bit_field>
    <bit_field offset="16" width="16" name="WDOG_TIMEOUT_COUNT" access="RO" reset_value="0" description="WDOG timeout: &amp;#10;Upper 16 bits of 24-bit count value in WWDT_TC register Timeout value in seconds. &amp;#10;When a non-zero value is programmed in this field ROM configures the watch dog timer to reset the device on timeout before passing execution control to user code.">
    </bit_field>
  </register>
  <register offset="0x10" width="32" name="ISP_UART_CFG" description="ISP_UART_CFG">
    <alias type="CMSIS" value="ISP_UART_CFG"/>
    <bit_field offset="0" width="8" name="UART_RX_PIN" access="RO" reset_value="0" description="Override default UART RX ISP pin. &amp;#10;Identifies the pin to be used as UART_RX pin. &amp;#10;[4:0] GPIO Pin number &amp;#10;[7:5] GPIO port number">
    </bit_field>
    <bit_field offset="8" width="4" name="UART_RX_FUNC_SLOT" access="RO" reset_value="0" description="Identifies the pin mux function slot.">
    </bit_field>
    <bit_field offset="12" width="4" name="UART_ISP_FLEXCOM" access="RO" reset_value="0" description="Identifies the FlexComm used for UART ISP mode.">
    </bit_field>
    <bit_field offset="16" width="8" name="UART_TX_PIN" access="RO" reset_value="0" description="Override default UART TX ISP pin. &amp;#10;Identifies the pin to be used as UART_TX pin. &amp;#10;[4:0] GPIO Pin number &amp;#10;[7:5] GPIO port number">
    </bit_field>
    <bit_field offset="24" width="4" name="UART_TX_FUNC_SLOT" access="RO" reset_value="0" description="Identifies the pin mux function slot.">
    </bit_field>
    <bit_field offset="28" width="4" name="UART_BAUD_RATE" access="RO" reset_value="0" description="UART baud rate. &amp;#10;Baud rate configured during UART ISP mode. &amp;#10;default: Auto baud detection.">
      <alias type="CMSIS" value="UART_BAUD_RATE(x)"/>
      <bit_field_value name="AUTO_DETECT" value="0b0000" description="Auto baud detection."/>
    </bit_field>
  </register>
  <register offset="0x14" width="32" name="ISP_I2C_CFG" description="ISP_I2C_CFG">
    <alias type="CMSIS" value="ISP_I2C_CFG"/>
    <bit_field offset="0" width="8" name="I2C_SCL_PIN" access="RO" reset_value="0" description="Override default I2C SCL ISP pin. &amp;#10;Identifies the pin to be used as I2C_SCL pin. &amp;#10;[4:0] GPIO Pin number &amp;#10;[7:5] GPIO port number">
    </bit_field>
    <bit_field offset="8" width="4" name="I2C_SCL_FUNC_SLOT" access="RO" reset_value="0" description="Identifies the pin mux function slot.">
    </bit_field>
    <bit_field offset="12" width="4" name="I2C_ISP_FLEXCOM" access="RO" reset_value="0" description="Identifies the FlexComm used for I2C ISP mode.">
    </bit_field>
    <bit_field offset="16" width="8" name="I2C_SDA_PIN" access="RO" reset_value="0" description="Override default I2C SDA ISP pin. &amp;#10;Identifies the pin to be used as I2C_SDA pin. &amp;#10;[4:0] GPIO Pin number &amp;#10;[7:5] GPIO port number">
    </bit_field>
    <bit_field offset="24" width="4" name="I2C_SDA_FUNC_SLOT" access="RO" reset_value="0" description="Identifies the pin mux function slot.">
    </bit_field>
    <reserved_bit_field offset="28" width="4" reset_value="0"/>
  </register>
  <register offset="0x18" width="32" name="ISP_CAN_CFG" description="ISP_CAN_CFG">
    <alias type="CMSIS" value="ISP_CAN_CFG"/>
    <bit_field offset="0" width="8" name="CAN_RX_PIN" access="RO" reset_value="0" description="Override default CAN RX ISP pin. &amp;#10;Identifies the pin to be used as CAN_RX pin. &amp;#10;[4:0] GPIO Pin number &amp;#10;[7:5] GPIO port number">
    </bit_field>
    <bit_field offset="8" width="4" name="CAN_RX_FUNC_SLOT" access="RO" reset_value="0" description="Identifies the pin mux function slot.">
    </bit_field>
    <bit_field offset="12" width="4" name="CAN_ISP_FLEXCOM" access="RO" reset_value="0" description="Identifies the FlexComm used for CAN ISP mode.">
    </bit_field>
    <bit_field offset="16" width="8" name="CAN_TX_PIN" access="RO" reset_value="0" description="Override default CAN TX ISP pin. &amp;#10;Identifies the pin to be used as CAN_TX pin. &amp;#10;[4:0] GPIO Pin number &amp;#10;[7:5] GPIO port number">
    </bit_field>
    <bit_field offset="24" width="4" name="CAN_TX_FUNC_SLOT" access="RO" reset_value="0" description="Identifies the pin mux function slot.">
    </bit_field>
    <bit_field offset="28" width="4" name="CAN_BAUD_RATE" access="RO" reset_value="0" description="CAN baud rate. &amp;#10;Baud rate configured during CAN ISP mode. &amp;#10;Default: Auto baud detection.">
      <alias type="CMSIS" value="CAN_BAUD_RATE(x)"/>
      <bit_field_value name="AUTO_DETECT" value="0b0000" description="Auto baud detection (125K, 250K, 500K, 1M)"/>
      <bit_field_value name="KBPS_10" value="0b0001" description="10 kbps"/>
      <bit_field_value name="KBPS_20" value="0b0010" description="20 kbps"/>
      <bit_field_value name="KBPS_50" value="0b0011" description="50 kbps"/>
      <bit_field_value name="KBPS_125" value="0b0100" description="125 kbps"/>
      <bit_field_value name="KBPS_250" value="0b0101" description="250 kbps"/>
      <bit_field_value name="KBPS_500" value="0b0110" description="500 kbps"/>
      <bit_field_value name="KBPS_800" value="0b0111" description="800 kbps"/>
      <bit_field_value name="KBPS_1000" value="0b1000" description="1,000 kbps"/>
    </bit_field>
  </register>
  <register offset="0x1C" width="32" name="ISP_SPI_CFG0" description="ISP_SPI_CFG0">
    <alias type="CMSIS" value="ISP_SPI_CFG0"/>
    <bit_field offset="0" width="8" name="SPI_SCK_PIN" access="RO" reset_value="0" description="Override default SPI SCK ISP pin. &amp;#10;Identifies the pin to be used as SPI_SCK pin. &amp;#10;[4:0] GPIO Pin number &amp;#10;[7:5] GPIO port number">
    </bit_field>
    <bit_field offset="8" width="4" name="SPI_SCK_FUNC_SLOT" access="RO" reset_value="0" description="Identifies the pin mux function slot.">
    </bit_field>
    <bit_field offset="12" width="4" name="SPI_ISP_FLEXCOM" access="RO" reset_value="0" description="Identifies the FlexComm used for SPI ISP mode">
    </bit_field>
    <bit_field offset="16" width="8" name="SPI_MOSI_PIN" access="RO" reset_value="0" description="Override default SPI MOSI ISP pin. &amp;#10;Identifies the pin to be used as SPI_MOSI pin. &amp;#10;[4:0] GPIO Pin number &amp;#10;[7:5] GPIO port number">
    </bit_field>
    <bit_field offset="24" width="4" name="SPI_MOSI_FUNC_SLOT" access="RO" reset_value="0" description="Identifies the pin mux function slot.">
    </bit_field>
    <reserved_bit_field offset="28" width="4" reset_value="0"/>
  </register>
  <register offset="0x20" width="32" name="ISP_SPI_CFG1" description="ISP_SPI_CFG1">
    <alias type="CMSIS" value="ISP_SPI_CFG1"/>
    <bit_field offset="0" width="8" name="SPI_MISO_PIN" access="RO" reset_value="0" description="Override default SPI MISO ISP pin. &amp;#10;Identifies the pin to be used as SPI_MISO pin. &amp;#10;[4:0] GPIO Pin number &amp;#10;[7:5] GPIO port number">
    </bit_field>
    <bit_field offset="8" width="4" name="SPI_MISO_FUNC_SLOT" access="RO" reset_value="0" description="Identifies the pin mux function slot.">
    </bit_field>
    <reserved_bit_field offset="12" width="4" reset_value="0"/>
    <bit_field offset="16" width="8" name="SPI_SSEL_PIN" access="RO" reset_value="0" description="Override default SPI SSEL ISP pin. &amp;#10;Identifies the pin to be used as SPI_SSEL pin. &amp;#10;[4:0] GPIO Pin number &amp;#10;[7:5] GPIO port number">
    </bit_field>
    <bit_field offset="24" width="4" name="SPI_SSEL_FUNC_SLOT" access="RO" reset_value="0" description="Identifies the pin mux function slot.">
    </bit_field>
    <bit_field offset="28" width="2" name="ISP_SPI_SSEL_X" access="RO" reset_value="0" description="SPI chip select number. &amp;#10;FlexComm SPI interfaces supports up to four chip selects.">
    </bit_field>
    <reserved_bit_field offset="30" width="2" reset_value="0"/>
  </register>
  <register offset="0x24" width="32" name="ISP_USB_ID" description="ISP_USB_ID">
    <alias type="CMSIS" value="ISP_USB_ID"/>
    <bit_field offset="0" width="16" name="USB_Vendor_ID" access="RO" reset_value="0" description="USB Vendor ID">
    </bit_field>
    <bit_field offset="16" width="16" name="USB_Product_ID" access="RO" reset_value="0" description="USB Product ID">
    </bit_field>
  </register>
  <register offset="0x28" width="32" name="ISP_USB_CFG" description="ISP_USB_CFG">
    <alias type="CMSIS" value="ISP_USB_CFG"/>
    <bit_field offset="0" width="8" name="USB0_VBUS_PIN" access="RO" reset_value="0" description="Override default USB0_VBUS_DETECT ISP pin. &amp;#10;Identifies the pin to be used as USB0_VBUS detect pin. &amp;#10;[4:0] GPIO Pin number &amp;#10;[7:5] GPIO port number">
    </bit_field>
    <bit_field offset="8" width="4" name="USB0_VBUS_FUNC_SLOT" access="RO" reset_value="0" description="Identifies the pin mux function slot.">
    </bit_field>
    <reserved_bit_field offset="12" width="4" reset_value="0"/>
    <bit_field offset="16" width="3" name="EXT_XTAL_CLK" access="RO" reset_value="0" description="USB PHY input clock frequency. &amp;#10;For USB high speed PHY external XTAL input is needed. This field specifies the frequency of XTAL used on board.">
      <alias type="CMSIS" value="EXT_XTAL_CLK(x)"/>
      <bit_field_value name="XTAL_32MHZ" value="0b000" description="32MHz input clock (Divide by 15)"/>
      <bit_field_value name="XTAL_30MHZ" value="0b001" description="30MHz input clock (Divide by 16)"/>
      <bit_field_value name="RESERVED" value="0b010" description="Reserved"/>
      <bit_field_value name="XTAL_20MHZ" value="0b100" description="20MHz input clock (Divide by 24)"/>
      <bit_field_value name="XTAL_19_2MHZ" value="0b101" description="19.2MHz input clock (Divide by 25)"/>
      <bit_field_value name="XTAL_16MHZ" value="0b110" description="16MHz input clock (Divide by 30)"/>
      <bit_field_value name="XTAL_12MHZ" value="0b111" description="12MHz input clock (Divide by 40) "/>
    </bit_field>
    <bit_field offset="19" width="1" name="PRE_DIV" access="RO" reset_value="0" description="Enable Pre-divider. &amp;#10;Needed to support 48MHz and other high speed crystals.">
    </bit_field>
    <reserved_bit_field offset="20" width="12" reset_value="0"/>
  </register>
  <register offset="0x2C" width="32" name="ISP_MISC_CFG" description="ISP_MISC_CFG">
    <alias type="CMSIS" value="ISP_MISC_CFG"/>
    <bit_field offset="0" width="8" name="I2C_SLAVE_ADDR" access="RO" reset_value="0" description="I2C slave addres. &amp;#10;A 7-bit Address used for selecting our device on shared I2C bus system. &amp;#10;By default ROM uses 0x10 as slave address.">
    </bit_field>
    <reserved_bit_field offset="8" width="14" reset_value="0"/>
    <bit_field offset="22" width="2" name="ISP_USB_CUST" access="RO" reset_value="0" description="Use customer defined GPIO for USB VBUS detect function during ISP mode.">
      <alias type="CMSIS" value="ISP_USB_CUST(x)"/>
      <bit_field_value name="DEDICATED" value="0b00" description="Use dedicated VBUS pins."/>
      <bit_field_value name="USB0_VBUS" value="0b01" description="Customer defined GPIO for USB0_VBUS detect."/>
      <bit_field_value name="USB1_VBUS" value="0b10" description="Customer defined GPIO for USB1_VBUS detect."/>
      <bit_field_value name="VDD_USB" value="0b11" description="Use VDD_USB for VBUS presence. On board regulator should generate VDD_USB voltage using 5V input fo VBUS pin on connector."/>
    </bit_field>
    <bit_field offset="24" width="2" name="ISP_CAN_CUST" access="RO" reset_value="0" description="Use customer defined CAN ISP pins.">
      <alias type="CMSIS" value="ISP_CAN_CUST(x)"/>
      <bit_field_value name="DEFAULT_0b00" value="0b00" description="Default ROM defined pins."/>
      <bit_field_value name="CUST_DEF_0b01" value="0b01" description="Customer defined."/>
      <bit_field_value name="DEFAULT_0b10" value="0b10" description="Default ROM defined pins."/>
      <bit_field_value name="DEFAULT_0b11" value="0b11" description="Default ROM defined pins."/>
    </bit_field>
    <bit_field offset="26" width="2" name="ISP_SPI_CUST" access="RO" reset_value="0" description="Use customer defined SPI ISP pins.">
      <alias type="CMSIS" value="ISP_SPI_CUST(x)"/>
      <bit_field_value name="DEFAULT_0b00" value="0b00" description="Default ROM defined pins."/>
      <bit_field_value name="CUST_DEF_0b01" value="0b01" description="Customer defined."/>
      <bit_field_value name="DEFAULT_0b10" value="0b10" description="Default ROM defined pins."/>
      <bit_field_value name="DEFAULT_0b11" value="0b11" description="Default ROM defined pins."/>
    </bit_field>
    <bit_field offset="28" width="2" name="ISP_I2C_CUST" access="RO" reset_value="0" description="Use customer defined I2C ISP pins.">
      <alias type="CMSIS" value="ISP_I2C_CUST(x)"/>
      <bit_field_value name="DEFAULT_0b00" value="0b00" description="Default ROM defined pins."/>
      <bit_field_value name="CUST_DEF_0b01" value="0b01" description="Customer defined."/>
      <bit_field_value name="DEFAULT_0b10" value="0b10" description="Default ROM defined pins."/>
      <bit_field_value name="DEFAULT_0b11" value="0b11" description="Default ROM defined pins."/>
    </bit_field>
    <bit_field offset="30" width="2" name="ISP_UART_CUST" access="RO" reset_value="0" description="Use customer defined UART ISP pins.">
      <alias type="CMSIS" value="ISP_UART_CUST(x)"/>
      <bit_field_value name="DEFAULT_0b00" value="0b00" description="Default ROM defined pins."/>
      <bit_field_value name="CUST_DEF_0b01" value="0b01" description="Customer defined."/>
      <bit_field_value name="DEFAULT_0b10" value="0b10" description="Default ROM defined pins."/>
      <bit_field_value name="DEFAULT_0b11" value="0b11" description="Default ROM defined pins."/>
    </bit_field>
  </register>
  <register offset="0x30" width="32" name="CC_SOCU_PIN" description="Credential Constraints for SoC specific Use Pinned">
    <alias type="CMSIS" value="CC_SOCU_PIN"/>
    <bit_field offset="0" width="1" name="NIDEN" access="RW" reset_value="0" description="Non-secure Non-invasive Debug Enable">
      <alias type="CMSIS" value="FLASH_CMPA_CC_SOCU_PIN_NIDEN(x)"/>
      <bit_field_value name="USE_DAP" value="0b0" description="Use DAP to enable"/>
      <bit_field_value name="FIXED_STATE" value="0b1" description="Fixed state"/>
    </bit_field>
    <bit_field offset="1" width="1" name="DBGEN" access="RW" reset_value="0" description="Non-secure Debug Enable">
      <alias type="CMSIS" value="FLASH_CMPA_CC_SOCU_PIN_DBGEN(x)"/>
      <bit_field_value name="USE_DAP" value="0b0" description="Use DAP to enable"/>
      <bit_field_value name="FIXED_STATE" value="0b1" description="Fixed state"/>
    </bit_field>
    <reserved_bit_field offset="2" width="4" reset_value="0"/>
    <bit_field offset="6" width="1" name="ISP_CMD_EN" access="RW" reset_value="0" description="ISP Boot Command Enable">
      <alias type="CMSIS" value="FLASH_CMPA_CC_SOCU_PIN_ISP_CMD_EN(x)"/>
      <bit_field_value name="USE_DAP" value="0b0" description="Use DAP to enable"/>
      <bit_field_value name="FIXED_STATE" value="0b1" description="Fixed state"/>
    </bit_field>
    <bit_field offset="7" width="1" name="FA_CMD_EN" access="RW" reset_value="0" description="FA Command Enable">
      <alias type="CMSIS" value="FLASH_CMPA_CC_SOCU_PIN_FA_CMD_EN(x)"/>
      <bit_field_value name="USE_DAP" value="0b0" description="Use DAP to enable"/>
      <bit_field_value name="FIXED_STATE" value="0b1" description="Fixed state"/>
    </bit_field>
    <bit_field offset="8" width="1" name="ME_CMD_EN" access="RW" reset_value="0" description="Flash Mass Erase Command Enable">
      <alias type="CMSIS" value="FLASH_CMPA_CC_SOCU_PIN_ME_CMD_EN(x)"/>
      <bit_field_value name="USE_DAP" value="0b0" description="Use DAP to enable"/>
      <bit_field_value name="FIXED_STATE" value="0b1" description="Fixed state"/>
    </bit_field>
    <bit_field offset="16" width="16" name="INVERSE_VALUE" access="RW" reset_value="0" description="Inverse Value">
      <alias type="CMSIS" value="FLASH_CMPA_CC_SOCU_PIN_INVERSE_VALUE(x)"/>
    </bit_field>
  </register>
  <register offset="0x34" width="32" name="CC_SOCU_DFLT" description="Credential Constraints for SoC specific Use Debug Filter">
    <alias type="CMSIS" value="CMPA.DCFG_CC_SOCU_DFLT"/>
    <bit_field offset="0" width="1" name="NIDEN" access="RW" reset_value="0" description="Non Secure Non-invasive Debug Fixed State">
      <alias type="CMSIS" value="FLASH_CMPA_DCFG_CC_SOCU_DFLT_NIDEN(x)"/>
      <bit_field_value name="DISABLED" value="0b0" description="Disabled"/>
      <bit_field_value name="ENABLED" value="0b1" description="Enabled"/>
    </bit_field>
    <bit_field offset="1" width="1" name="DBGEN" access="RW" reset_value="0" description="Non-secure Debug Fixed State">
      <alias type="CMSIS" value="FLASH_CMPA_DCFG_CC_SOCU_DFLT_DBGEN(x)"/>
      <bit_field_value name="DISABLED" value="0b0" description="Disabled"/>
      <bit_field_value name="ENABLED" value="0b1" description="Enabled"/>
    </bit_field>
    <reserved_bit_field offset="2" width="4" reset_value="0"/>
    <bit_field offset="6" width="1" name="ISP_CMD_EN" access="RW" reset_value="0" description="ISP Command Fixed State">
      <alias type="CMSIS" value="FLASH_CMPA_DCFG_CC_SOCU_DFLT_ISP_CMD_EN(x)"/>
      <bit_field_value name="DISABLED" value="0b0" description="Disabled"/>
      <bit_field_value name="ENABLED" value="0b1" description="Enabled"/>
    </bit_field>
    <bit_field offset="7" width="1" name="FA_CMD_EN" access="RW" reset_value="0" description="FA Command Fixed State">
      <alias type="CMSIS" value="FLASH_CMPA_DCFG_CC_SOCU_DFLT_FA_CMD_EN(x)"/>
      <bit_field_value name="DISABLED" value="0b0" description="Disabled"/>
      <bit_field_value name="ENABLED" value="0b1" description="Enabled"/>
    </bit_field>
    <bit_field offset="8" width="1" name="ME_CMD_EN" access="RW" reset_value="0" description="Flash Mass Erase Command Fixed State">
      <alias type="CMSIS" value="FLASH_CMPA_DCFG_CC_SOCU_DFLT_ME_CMD_EN(x)"/>
      <bit_field_value name="DISABLED" value="0b0" description="Disabled"/>
      <bit_field_value name="ENABLED" value="0b1" description="Enabled"/>
    </bit_field>
    <reserved_bit_field offset="9" width="7" reset_value="0"/>
    <bit_field offset="16" width="16" name="INVERSE_VALUE" access="RW" reset_value="0" description="Inverse Value">
      <alias type="CMSIS" value="FLASH_CMPA_DCFG_CC_SOCU_DFLT_INVERSE_VALUE(x)"/>
    </bit_field>
  </register>
  <register offset="0x38" width="32" name="LP_VECTOR_ADDR" description="Low-Power Vector Address.">
    <alias type="CMSIS" value="CMPA.LP_VECTOR_ADDR"/>
    <bit_field offset="0" width="32" name="LP_VECTOR_ADDR" access="RO" reset_value="0" description="Vector address when waking from power-down and deep power down states.">
      <alias type="CMSIS" value="LP_VECTOR_ADDR(x)"/>
    </bit_field>
  </register>
  <register offset="0x40" width="32" name="FLASH_ACL_0_7" description="Access control for flash sector 0-7.">
    <bit_field offset="0" width="3" name="ACL_SEC_0" access="RO" reset_value="4" description="Access control for flash sector.">
      <alias type="CMSIS" value="ACL_SEC_0"/>
    </bit_field>
    <reserved_bit_field offset="3" width="1" reset_value="0"/>
    <bit_field offset="4" width="3" name="ACL_SEC_1" access="RO" reset_value="4" description="Access control for flash sector.">
      <alias type="CMSIS" value="ACL_SEC_1"/>
    </bit_field>
    <reserved_bit_field offset="7" width="1" reset_value="0"/>
    <bit_field offset="8" width="3" name="ACL_SEC_2" access="RO" reset_value="4" description="Access control for flash sector.">
      <alias type="CMSIS" value="ACL_SEC_2"/>
    </bit_field>
    <reserved_bit_field offset="11" width="1" reset_value="0"/>
    <bit_field offset="12" width="3" name="ACL_SEC_3" access="RO" reset_value="4" description="Access control for flash sector.">
      <alias type="CMSIS" value="ACL_SEC_3"/>
    </bit_field>
    <reserved_bit_field offset="15" width="1" reset_value="0"/>
    <bit_field offset="16" width="3" name="ACL_SEC_4" access="RO" reset_value="4" description="Access control for flash sector.">
      <alias type="CMSIS" value="ACL_SEC_4"/>
    </bit_field>
    <reserved_bit_field offset="19" width="1" reset_value="0"/>
    <bit_field offset="20" width="3" name="ACL_SEC_5" access="RO" reset_value="4" description="Access control for flash sector.">
      <alias type="CMSIS" value="ACL_SEC_5"/>
    </bit_field>
    <reserved_bit_field offset="23" width="1" reset_value="0"/>
    <bit_field offset="24" width="3" name="ACL_SEC_6" access="RO" reset_value="4" description="Access control for flash sector.">
      <alias type="CMSIS" value="ACL_SEC_6"/>
    </bit_field>
    <reserved_bit_field offset="27" width="1" reset_value="0"/>
    <bit_field offset="28" width="3" name="ACL_SEC_7" access="RO" reset_value="4" description="Access control for flash sector.">
      <alias type="CMSIS" value="ACL_SEC_7"/>
    </bit_field>
    <reserved_bit_field offset="31" width="1" reset_value="0"/>
  </register>
  <register offset="0x44" width="32" name="FLASH_ACL_8_15" description="Access control for flash sector 8-15.">
    <bit_field offset="0" width="3" name="ACL_SEC_8" access="RO" reset_value="4" description="Access control for flash sector.">
      <alias type="CMSIS" value="ACL_SEC_8"/>
    </bit_field>
    <reserved_bit_field offset="3" width="1" reset_value="0"/>
    <bit_field offset="4" width="3" name="ACL_SEC_9" access="RO" reset_value="4" description="Access control for flash sector.">
      <alias type="CMSIS" value="ACL_SEC_9"/>
    </bit_field>
    <reserved_bit_field offset="7" width="1" reset_value="0"/>
    <bit_field offset="8" width="3" name="ACL_SEC_10" access="RO" reset_value="4" description="Access control for flash sector.">
      <alias type="CMSIS" value="ACL_SEC_10"/>
    </bit_field>
    <reserved_bit_field offset="11" width="1" reset_value="0"/>
    <bit_field offset="12" width="3" name="ACL_SEC_11" access="RO" reset_value="4" description="Access control for flash sector.">
      <alias type="CMSIS" value="ACL_SEC_11"/>
    </bit_field>
    <reserved_bit_field offset="15" width="1" reset_value="0"/>
    <bit_field offset="16" width="3" name="ACL_SEC_12" access="RO" reset_value="4" description="Access control for flash sector.">
      <alias type="CMSIS" value="ACL_SEC_12"/>
    </bit_field>
    <reserved_bit_field offset="19" width="1" reset_value="0"/>
    <bit_field offset="20" width="3" name="ACL_SEC_13" access="RO" reset_value="4" description="Access control for flash sector.">
      <alias type="CMSIS" value="ACL_SEC_14"/>
    </bit_field>
    <reserved_bit_field offset="23" width="1" reset_value="0"/>
    <bit_field offset="24" width="3" name="ACL_SEC_14" access="RO" reset_value="4" description="Access control for flash sector.">
      <alias type="CMSIS" value="ACL_SEC_14"/>
    </bit_field>
    <reserved_bit_field offset="27" width="1" reset_value="0"/>
    <bit_field offset="28" width="3" name="ACL_SEC_15" access="RO" reset_value="4" description="Access control for flash sector.">
      <alias type="CMSIS" value="ACL_SEC_15"/>
    </bit_field>
    <reserved_bit_field offset="31" width="1" reset_value="0"/>
  </register>
  <register offset="0x60" width="32" name="QUICK_SET_GPIO_0" description="Quick Set to Drive GPIO 0 port [31:0] pins high after reset. &amp;#10;Each bit corresponds to the pin in GPIO port 0. When set ROM drives the corresponding pin high as soon as possible. By default most pins come-up as tri-stated inputs. &amp;#10;This feature allows customer to specify active drive pins soon after reset instead of waiting till complete boot.">
    <alias type="CMSIS" value="CMPA.QUICK_SET_GPIO_0"/>
    <bit_field offset="0" width="32" name="QUICK_SET_GPIO_0" access="RO" reset_value="0" description="QUICK_SET_GPIO_0[31:0]">
      <alias type="CMSIS" value="FLASH_CMPA_QUICK_SET_GPIO_0_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x64" width="32" name="QUICK_CLR_GPIO_0" description="Quick Clear to Drive GPIO 0 port [31:0] pins low after reset. &amp;#10;Each bit corresponds to the pin in GPIO port 0. When set ROM drives the corresponding pin high as soon as possible. By default most pins come-up as tri-stated inputs. &amp;#10;This feature allows customer to specify active drive pins soon after reset instead of waiting till complete boot.">
    <alias type="CMSIS" value="CMPA.QUICK_CLR_GPIO_0"/>
    <bit_field offset="0" width="32" name="QUICK_CLR_GPIO_0" access="RO" reset_value="0" description="QUICK_CLR_GPIO_0[31:0]">
      <alias type="CMSIS" value="FLASH_CMPA_QUICK_CLR_GPIO_0_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x68" width="32" name="QUICK_SET_GPIO_1" description="Quick Set to Drive GPIO 1 port [31:0] pins high after reset. &amp;#10;Each bit corresponds to the pin in GPIO port 1. When set ROM drives the corresponding pin high as soon as possible. By default most pins come-up as tri-stated inputs. &amp;#10;This feature allows customer to specify active drive pins soon after reset instead of waiting till complete boot.">
    <alias type="CMSIS" value="CMPA.QUICK_SET_GPIO_1"/>
    <bit_field offset="0" width="32" name="QUICK_SET_GPIO_1" access="RO" reset_value="0" description="QUICK_SET_GPIO_1[31:0]">
      <alias type="CMSIS" value="FLASH_CMPA_QUICK_SET_GPIO_1_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x6C" width="32" name="QUICK_CLR_GPIO_1" description="Quick Clear to Drive GPIO 1 port [31:0] pins low after reset. &amp;#10;Each bit corresponds to the pin in GPIO port 1. When set ROM drives the corresponding pin high as soon as possible. By default most pins come-up as tri-stated inputs. &amp;#10;This feature allows customer to specify active drive pins soon after reset instead of waiting till complete boot.">
    <alias type="CMSIS" value="CMPA.QUICK_CLR_GPIO_1"/>
    <bit_field offset="0" width="32" name="QUICK_CLR_GPIO_1" access="RO" reset_value="0" description="QUICK_CLR_GPIO_1[31:0]">
      <alias type="CMSIS" value="FLASH_CMPA_QUICK_CLR_GPIO_1_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x70" width="32" name="QUICK_SET_GPIO_2" description="Quick Set to Drive GPIO 2 port [31:0] pins high after reset. &amp;#10;Each bit corresponds to the pin in GPIO port 2. When set ROM drives the corresponding pin high as soon as possible. By default most pins come-up as tri-stated inputs. &amp;#10;This feature allows customer to specify active drive pins soon after reset instead of waiting till complete boot.">
    <alias type="CMSIS" value="CMPA.QUICK_SET_GPIO_2"/>
    <bit_field offset="0" width="32" name="QUICK_SET_GPIO_2" access="RO" reset_value="0" description="QUICK_SET_GPIO_2[31:0]">
      <alias type="CMSIS" value="FLASH_CMPA_QUICK_SET_GPIO_2_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x74" width="32" name="QUICK_CLR_GPIO_2" description="Quick Clear to Drive GPIO 2 port [31:0] pins low after reset. &amp;#10;Each bit corresponds to the pin in GPIO port 2. When set ROM drives the corresponding pin high as soon as possible. By default most pins come-up as tri-stated inputs. &amp;#10;This feature allows customer to specify active drive pins soon after reset instead of waiting till complete boot.">
    <alias type="CMSIS" value="CMPA.QUICK_CLR_GPIO_2"/>
    <bit_field offset="0" width="32" name="QUICK_CLR_GPIO_2" access="RO" reset_value="0" description="QUICK_CLR_GPIO_2[31:0]">
      <alias type="CMSIS" value="FLASH_CMPA_QUICK_CLR_GPIO_2_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x78" width="32" name="QUICK_SET_GPIO_3" description="Quick Set to Drive GPIO 3 port [31:0] pins high after reset. &amp;#10;Each bit corresponds to the pin in GPIO port 3. When set ROM drives the corresponding pin high as soon as possible. By default most pins come-up as tri-stated inputs. &amp;#10;This feature allows customer to specify active drive pins soon after reset instead of waiting till complete boot.">
    <alias type="CMSIS" value="CMPA.QUICK_SET_GPIO_3"/>
    <bit_field offset="0" width="32" name="QUICK_SET_GPIO_3" access="RO" reset_value="0" description="QUICK_SET_GPIO_3[31:0]">
      <alias type="CMSIS" value="FLASH_CMPA_QUICK_SET_GPIO_3_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x7C" width="32" name="QUICK_CLR_GPIO_3" description="Quick Clear to Drive GPIO 3 port [31:0] pins low after reset. &amp;#10;Each bit corresponds to the pin in GPIO port 3. When set ROM drives the corresponding pin high as soon as possible. By default most pins come-up as tri-stated inputs. &amp;#10;This feature allows customer to specify active drive pins soon after reset instead of waiting till complete boot.">
    <alias type="CMSIS" value="CMPA.QUICK_CLR_GPIO_3"/>
    <bit_field offset="0" width="32" name="QUICK_CLR_GPIO_3" access="RO" reset_value="0" description="QUICK_CLR_GPIO_3[31:0]">
      <alias type="CMSIS" value="FLASH_CMPA_QUICK_CLR_GPIO_3_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x90" width="32" name="ROP_STATE" description="ROP_STATE. &amp;#10;2'b00 Disable CRC check &amp;#10;All other value enable CRC">
    <alias type="CMSIS" value="CMPA.ROP_STATE"/>
    <bit_field offset="0" width="32" name="ROP_STATE" access="RO" reset_value="0xFFFFFFFF" description="ROP_STATE[31:0]">
      <alias type="CMSIS" value="ROP_STATE(x)"/>
    </bit_field>
  </register>
  <register offset="0xA0" width="32" name="ROP_STATE_DP" description="ROP_STATE_DP. &amp;#10;2'b00 Disable CRC check &amp;#10;All other value enable CRC">
    <alias type="CMSIS" value="CMPA.ROP_STATE"/>
    <bit_field offset="0" width="32" name="ROP_STATE_DP" access="RO" reset_value="0xFFFFFFFF" description="ROP_STATE_DP[31:0]">
      <alias type="CMSIS" value="ROP_STATE(x)"/>
    </bit_field>
  </register>
  <register offset="0xB0" width="32" name="CMPA_CRC32" description="CRC32 of CMPA page data offset from 0x00 to 0x8C">
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="CRC32 of CMPA page data offset from 0x00 to 0x8C">
    </bit_field>
  </register>
</regs:peripheral>
