[tool.poetry]
name = "benchling-cli"
version = "0.8.3a0"   # NOTE: This version number is ignored and does not correspond to releases (see README)
description = "CLI for assistance in developing with the Benchling Platform."
authors = ["Benchling Support <support@benchling.com>"]
packages = [{include = "benchling_cli"}]
include = [
    "LICENSE", "benchling_cli/py.typed"
]
license = "Apache-2.0"
readme = "README.md"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests",
]

[tool.poetry.dependencies]
black = "^22.3.0"
python = "^3.8"
benchling_sdk = "^1.8.0"
typer = "^0.6.1"
Jinja2 = "^3.1.2"
autoflake = "^1.7"

[tool.poetry.dev-dependencies]
isort = "^5.10.1"
pre-commit = "^2.6.0"
ipython = "^7.16.1"
mypy = "^0.960"
flake8 = "^3.8.3"
taskipy = "^1.6.0"
coverage = "^5.5"
flake8-docstrings = "^1.6.0"
pytest = "^7.1.1"
ddt = "1.4.4"
parameterized = "^0.8.1"
pyfakefs = "^4.6.0"
respx = "^0.20.1"

[tool.poetry.scripts]
benchling-cli = 'benchling_cli.cli:cli'

[tool.taskipy.tasks]
unit = "python3 -m pytest -s tests/unit/"
integration = "python3 -m pytest -s tests/integration/"
# To be manually run to regenerate test files when updating code gen
regen_int_test_files = "benchling-cli app dependencies -m tests/integration/apps/artifacts/comprehensive_manifest.yaml --dependencies-file-path tests/integration/apps/artifacts/dependencies.py --model-directory-path tests/integration/apps/artifacts/generated_models"
regen_unit_test_files = "benchling-cli app dependencies -m tests/unit/apps/codegen/artifacts/manifest.yaml --dependencies-file-path tests/unit/apps/codegen/artifacts/dependencies.py --model-directory-path tests/unit/apps/codegen/artifacts/generated_models"

[tool.black]
line-length=110

[tool.isort]
combine_as_imports=true
default_section="THIRDPARTY"
force_alphabetical_sort_within_sections=true
force_sort_within_sections=true
include_trailing_comma=true
known_first_party=["benchling_cli"]
known_third_party=["attr", "autoflake", "backoff", "black", "dataclasses_json", "ddt", "httpx", "jinja2", "parameterized", "pyfakefs", "respx", "typer", "typing_extensions", "yaml"]
line_length=110
multi_line_output=3
order_by_type=false
skip=["tests/unit/apps/codegen/artifacts"]

[build-system]
requires = ["poetry>=1.2"]
build-backend = "poetry.masonry.api"