# Nome do workflow no repositório
name: Integração continua em Python 

# Eventos de execução do workflow
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
jobs:
  # Jobs do ambientes de desenvolvimento
  build-dev:  
    # Runner com uma instância da matriz
    runs-on: ${{ matrix.os }}    
    # Nome do Job no workflow
    name: build-dev - SO ${{ matrix.os }} e python ${{matrix.python-version}}... 
    environment: 
      name: dev
    # Prepara diversas versões do SO e do Python
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]  
        python-version:  ['3.9','3.10','3.11']
    # Passos do job
    steps:
    # Utiliza a action checkout para fazer o git clone no runner    
    - name : Realiza o checkout do repositório
      uses : actions/checkout@v4
    # Utiliza a action setup-java para configurar a versão necessária do JDK  
    - name: Configura o Python ${{matrix.python-version}}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64    
    # Instala o cache  
    - name: Instala o cache
      uses: actions/cache@v2
      with:
          path: ~/.cache/pip
          key: ${{ hashFiles('setup.py') }}-${{ hashFiles('requirements.txt') }}
    # Instala as dependências
    - name: Instala as dependências
      run: |
        pip install --upgrade pip
        pip install --upgrade --upgrade-strategy eager -r requirements.txt -e .
        pip install --upgrade numpy
    # Executa os testes no runner   
    - name : Executa os testes 
      run :  python -m unittest discover -s "./testes" -p "test_*.py"