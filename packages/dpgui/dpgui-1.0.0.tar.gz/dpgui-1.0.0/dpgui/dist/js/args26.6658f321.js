"use strict";(self["webpackChunkdpgui"]=self["webpackChunkdpgui"]||[]).push([[508],{4686:function(e){e.exports=JSON.parse('{"object":"Argument","name":"simplify_jdata","type":["dict"],"optional":false,"alias":[],"doc":"Parameters for simplify.json, the first argument of `dpgen simplify`.","repeat":false,"sub_fields":{"type_map":{"object":"Argument","name":"type_map","type":["list"],"optional":false,"alias":[],"doc":"Atom types. Reminder: The elements in param.json, type.raw and data.lmp(when using lammps) should be in the same order.","repeat":false,"sub_fields":{},"sub_variants":{}},"mass_map":{"object":"Argument","name":"mass_map","type":["list","str"],"optional":true,"alias":[],"doc":"Standard atomic weights (default: \\"auto\\"). if one want to use isotopes, or non-standard element names, chemical symbols, or atomic number in the type_map list, please customize the mass_map list instead of using \\"auto\\".","repeat":false,"sub_fields":{},"sub_variants":{},"default":"auto"},"use_ele_temp":{"object":"Argument","name":"use_ele_temp","type":["int"],"optional":true,"alias":[],"doc":"Currently only support fp_style vasp. \\n\\n- 0: no electron temperature. \\n\\n- 1: eletron temperature as frame parameter. \\n\\n- 2: electron temperature as atom parameter.","repeat":false,"sub_fields":{},"sub_variants":{},"default":0},"init_data_prefix":{"object":"Argument","name":"init_data_prefix","type":["str"],"optional":true,"alias":[],"doc":"Prefix of initial data directories.","repeat":false,"sub_fields":{},"sub_variants":{}},"init_data_sys":{"object":"Argument","name":"init_data_sys","type":["list"],"optional":false,"alias":[],"doc":"Paths of initial data. The path can be either a system diretory containing NumPy files or an HDF5 file. You may use either absolute or relative path here. Systems will be detected recursively in the directories or the HDF5 file.","repeat":false,"sub_fields":{},"sub_variants":{}},"sys_format":{"object":"Argument","name":"sys_format","type":["str"],"optional":true,"alias":[],"doc":"Format of sys_configs.","repeat":false,"sub_fields":{},"sub_variants":{},"default":"vasp/poscar"},"init_batch_size":{"object":"Argument","name":"init_batch_size","type":["list","str"],"optional":true,"alias":[],"doc":"Each number is the batch_size of corresponding system for training in init_data_sys. One recommended rule for setting the sys_batch_size and init_batch_size is that batch_size mutiply number of atoms ot the stucture should be larger than 32. If set to auto, batch size will be 32 divided by number of atoms.","repeat":false,"sub_fields":{},"sub_variants":{}},"sys_configs_prefix":{"object":"Argument","name":"sys_configs_prefix","type":["str"],"optional":true,"alias":[],"doc":"Prefix of sys_configs.","repeat":false,"sub_fields":{},"sub_variants":{}},"sys_configs":{"object":"Argument","name":"sys_configs","type":["list"],"optional":false,"alias":[],"doc":"Containing directories of structures to be explored in iterations.Wildcard characters are supported here.","repeat":false,"sub_fields":{},"sub_variants":{}},"sys_batch_size":{"object":"Argument","name":"sys_batch_size","type":["list"],"optional":true,"alias":[],"doc":"Each number is the batch_size for training of corresponding system in sys_configs. If set to auto, batch size will be 32 divided by number of atoms.","repeat":false,"sub_fields":{},"sub_variants":{}},"labeled":{"object":"Argument","name":"labeled","type":["bool"],"optional":true,"alias":[],"doc":"If true, the initial data is labeled.","repeat":false,"sub_fields":{},"sub_variants":{},"default":false},"pick_data":{"object":"Argument","name":"pick_data","type":["list","str"],"optional":false,"alias":[],"doc":"(List of) Path to the directory with the pick data with the deepmd/npy or the HDF5 file with deepmd/hdf5 format. Systems are detected recursively.","repeat":false,"sub_fields":{},"sub_variants":{}},"init_pick_number":{"object":"Argument","name":"init_pick_number","type":["int"],"optional":false,"alias":[],"doc":"The number of initial pick data.","repeat":false,"sub_fields":{},"sub_variants":{}},"iter_pick_number":{"object":"Argument","name":"iter_pick_number","type":["int"],"optional":false,"alias":[],"doc":"The number of pick data in each iteration.","repeat":false,"sub_fields":{},"sub_variants":{}},"model_devi_f_trust_lo":{"object":"Argument","name":"model_devi_f_trust_lo","type":["float"],"optional":false,"alias":[],"doc":"The lower bound of forces for the selection for the model deviation.","repeat":false,"sub_fields":{},"sub_variants":{}},"model_devi_f_trust_hi":{"object":"Argument","name":"model_devi_f_trust_hi","type":["float"],"optional":false,"alias":[],"doc":"The higher bound of forces for the selection for the model deviation.","repeat":false,"sub_fields":{},"sub_variants":{}},"numb_models":{"object":"Argument","name":"numb_models","type":["int"],"optional":false,"alias":[],"doc":"Number of models to be trained in 00.train. 4 is recommend.","repeat":false,"sub_fields":{},"sub_variants":{}},"training_iter0_model_path":{"object":"Argument","name":"training_iter0_model_path","type":["list"],"optional":true,"alias":[],"doc":"The model used to init the first iter training. Number of element should be equal to numb_models.","repeat":false,"sub_fields":{},"sub_variants":{}},"training_init_model":{"object":"Argument","name":"training_init_model","type":["bool"],"optional":true,"alias":[],"doc":"Iteration > 0, the model parameters will be initilized from the model trained at the previous iteration. Iteration == 0, the model parameters will be initialized from training_iter0_model_path.","repeat":false,"sub_fields":{},"sub_variants":{}},"default_training_param":{"object":"Argument","name":"default_training_param","type":["dict"],"optional":false,"alias":[],"doc":"Training parameters for deepmd-kit in 00.train. You can find instructions from here: (https://github.com/deepmodeling/deepmd-kit).","repeat":false,"sub_fields":{},"sub_variants":{}},"dp_compress":{"object":"Argument","name":"dp_compress","type":["bool"],"optional":true,"alias":[],"doc":"Use dp compress to compress the model.","repeat":false,"sub_fields":{},"sub_variants":{},"default":false},"training_reuse_iter":{"object":"Argument","name":"training_reuse_iter","type":["int","NoneType"],"optional":true,"alias":[],"doc":"The minimal index of iteration that continues training models from old models of last iteration.","repeat":false,"sub_fields":{},"sub_variants":{}},"training_reuse_old_ratio":{"object":"Argument","name":"training_reuse_old_ratio","type":["NoneType","float"],"optional":true,"alias":[],"doc":"The probability proportion of old data during training. This option is only adopted when continuing training models from old models. This option will override default parameters.","repeat":false,"sub_fields":{},"sub_variants":{}},"training_reuse_numb_steps":{"object":"Argument","name":"training_reuse_numb_steps","type":["int","NoneType"],"optional":true,"alias":["training_reuse_stop_batch"],"doc":"Number of training batch. This option is only adopted when continuing training models from old models. This option will override default parameters.","repeat":false,"sub_fields":{},"sub_variants":{},"default":400000},"training_reuse_start_lr":{"object":"Argument","name":"training_reuse_start_lr","type":["NoneType","float"],"optional":true,"alias":[],"doc":"The learning rate the start of the training. This option is only adopted when continuing training models from old models. This option will override default parameters.","repeat":false,"sub_fields":{},"sub_variants":{},"default":0.0001},"training_reuse_start_pref_e":{"object":"Argument","name":"training_reuse_start_pref_e","type":["int","NoneType","float"],"optional":true,"alias":[],"doc":"The prefactor of energy loss at the start of the training. This option is only adopted when continuing training models from old models. This option will override default parameters.","repeat":false,"sub_fields":{},"sub_variants":{},"default":0.1},"training_reuse_start_pref_f":{"object":"Argument","name":"training_reuse_start_pref_f","type":["int","NoneType","float"],"optional":true,"alias":[],"doc":"The prefactor of force loss at the start of the training. This option is only adopted when continuing training models from old models. This option will override default parameters.","repeat":false,"sub_fields":{},"sub_variants":{},"default":100},"model_devi_activation_func":{"object":"Argument","name":"model_devi_activation_func","type":["list","NoneType"],"optional":true,"alias":[],"doc":"The activation function in the model. The shape of list should be (N_models, 2), where 2 represents the embedding and fitting network. This option will override default parameters.","repeat":false,"sub_fields":{},"sub_variants":{}},"srtab_file_path":{"object":"Argument","name":"srtab_file_path","type":["str"],"optional":true,"alias":[],"doc":"The path of the table for the short-range pairwise interaction which is needed when using DP-ZBL potential","repeat":false,"sub_fields":{},"sub_variants":{}},"one_h5":{"object":"Argument","name":"one_h5","type":["bool"],"optional":true,"alias":[],"doc":"Before training, all of the training data will be merged into one HDF5 file.","repeat":false,"sub_fields":{},"sub_variants":{},"default":false},"fp_task_max":{"object":"Argument","name":"fp_task_max","type":["int"],"optional":true,"alias":[],"doc":"Maximum of structures to be calculated in 02.fp of each iteration.","repeat":false,"sub_fields":{},"sub_variants":{}},"fp_task_min":{"object":"Argument","name":"fp_task_min","type":["int"],"optional":true,"alias":[],"doc":"Minimum of structures to be calculated in 02.fp of each iteration.","repeat":false,"sub_fields":{},"sub_variants":{}},"fp_accurate_threshold":{"object":"Argument","name":"fp_accurate_threshold","type":["float"],"optional":true,"alias":[],"doc":"If the accurate ratio is larger than this number, no fp calculation will be performed, i.e. fp_task_max = 0.","repeat":false,"sub_fields":{},"sub_variants":{}},"fp_accurate_soft_threshold":{"object":"Argument","name":"fp_accurate_soft_threshold","type":["float"],"optional":true,"alias":[],"doc":"If the accurate ratio is between this number and fp_accurate_threshold, the fp_task_max linearly decays to zero.","repeat":false,"sub_fields":{},"sub_variants":{}}},"sub_variants":{"fp_style":{"object":"Variant","flag_name":"fp_style","optional":true,"default_tag":"none","choice_dict":{"none":{"object":"Argument","name":"none","type":["dict"],"optional":false,"alias":[],"doc":"No fp.","repeat":false,"sub_fields":{},"sub_variants":{}},"vasp":{"object":"Argument","name":"vasp","type":["dict"],"optional":false,"alias":[],"doc":"VASP.","repeat":false,"sub_fields":{"fp_pp_path":{"object":"Argument","name":"fp_pp_path","type":["str"],"optional":false,"alias":[],"doc":"Directory of psuedo-potential file to be used for 02.fp exists.","repeat":false,"sub_fields":{},"sub_variants":{}},"fp_pp_files":{"object":"Argument","name":"fp_pp_files","type":["list"],"optional":false,"alias":[],"doc":"Psuedo-potential file to be used for 02.fp. Note that the order of elements should correspond to the order in type_map.","repeat":false,"sub_fields":{},"sub_variants":{}},"fp_incar":{"object":"Argument","name":"fp_incar","type":["str"],"optional":false,"alias":[],"doc":"Input file for VASP. INCAR must specify KSPACING and KGAMMA.","repeat":false,"sub_fields":{},"sub_variants":{}},"fp_aniso_kspacing":{"object":"Argument","name":"fp_aniso_kspacing","type":["list"],"optional":true,"alias":[],"doc":"Set anisotropic kspacing. Usually useful for 1-D or 2-D materials. Only support VASP. If it is setting the KSPACING key in INCAR will be ignored.","repeat":false,"sub_fields":{},"sub_variants":{}},"cvasp":{"object":"Argument","name":"cvasp","type":["bool"],"optional":true,"alias":[],"doc":"If cvasp is true, DP-GEN will use Custodian to help control VASP calculation.","repeat":false,"sub_fields":{},"sub_variants":{}},"ratio_failed":{"object":"Argument","name":"ratio_failed","type":["float"],"optional":true,"alias":[],"doc":"Check the ratio of unsuccessfully terminated jobs. If too many FP tasks are not converged, RuntimeError will be raised.","repeat":false,"sub_fields":{},"sub_variants":{}},"fp_skip_bad_box":{"object":"Argument","name":"fp_skip_bad_box","type":["str"],"optional":true,"alias":[],"doc":"Skip the configurations that are obviously unreasonable before 02.fp","repeat":false,"sub_fields":{},"sub_variants":{}}},"sub_variants":{}},"gaussian":{"object":"Argument","name":"gaussian","type":["dict"],"optional":false,"alias":[],"doc":"Gaussian. The command should be set as `g16 < input`.","repeat":false,"sub_fields":{"use_clusters":{"object":"Argument","name":"use_clusters","type":["bool"],"optional":true,"alias":[],"doc":"If set to true, clusters will be taken instead of the whole system.","repeat":false,"sub_fields":{},"sub_variants":{},"default":false},"cluster_cutoff":{"object":"Argument","name":"cluster_cutoff","type":["float"],"optional":true,"alias":[],"doc":"The soft cutoff radius of clusters if `use_clusters` is set to true. Molecules will be taken as whole even if part of atoms is out of the cluster. Use `cluster_cutoff_hard` to only take atoms within the hard cutoff radius.","repeat":false,"sub_fields":{},"sub_variants":{}},"cluster_cutoff_hard":{"object":"Argument","name":"cluster_cutoff_hard","type":["float"],"optional":true,"alias":[],"doc":"The hard cutoff radius of clusters if `use_clusters` is set to true. Outside the hard cutoff radius, atoms will not be taken even if they are in a molecule where some atoms are within the cutoff radius.","repeat":false,"sub_fields":{},"sub_variants":{}},"cluster_minify":{"object":"Argument","name":"cluster_minify","type":["bool"],"optional":true,"alias":[],"doc":"If enabled, when an atom within the soft cutoff radius connects a single bond with a non-hydrogen atom out of the soft cutoff radius, the outer atom will be replaced by a hydrogen atom. When the outer atom is a hydrogen atom, the outer atom will be kept. In this case, other atoms out of the soft cutoff radius will be removed.","repeat":false,"sub_fields":{},"sub_variants":{},"default":false},"fp_params":{"object":"Argument","name":"fp_params","type":["dict"],"optional":false,"alias":[],"doc":"Parameters for Gaussian calculation.","repeat":false,"sub_fields":{"keywords":{"object":"Argument","name":"keywords","type":["list","str"],"optional":false,"alias":[],"doc":"Keywords for Gaussian input, e.g. force b3lyp/6-31g**. If a list, run multiple steps.","repeat":false,"sub_fields":{},"sub_variants":{}},"multiplicity":{"object":"Argument","name":"multiplicity","type":["int","str"],"optional":true,"alias":[],"doc":"Spin multiplicity for Gaussian input. If `auto`, multiplicity will be detected automatically, with the following rules: when fragment_guesses=True, multiplicity will +1 for each radical, and +2 for each oxygen molecule; when fragment_guesses=False, multiplicity will be 1 or 2, but +2 for each oxygen molecule.","repeat":false,"sub_fields":{},"sub_variants":{},"default":"auto"},"nproc":{"object":"Argument","name":"nproc","type":["int"],"optional":false,"alias":[],"doc":"The number of processors for Gaussian input.","repeat":false,"sub_fields":{},"sub_variants":{}},"charge":{"object":"Argument","name":"charge","type":["int"],"optional":true,"alias":[],"doc":"Molecule charge. Only used when charge is not provided by the system.","repeat":false,"sub_fields":{},"sub_variants":{},"default":0},"fragment_guesses":{"object":"Argument","name":"fragment_guesses","type":["bool"],"optional":true,"alias":[],"doc":"Initial guess generated from fragment guesses. If True, `multiplicity` should be `auto`.","repeat":false,"sub_fields":{},"sub_variants":{},"default":false},"basis_set":{"object":"Argument","name":"basis_set","type":["str"],"optional":true,"alias":[],"doc":"Custom basis set.","repeat":false,"sub_fields":{},"sub_variants":{}},"keywords_high_multiplicity":{"object":"Argument","name":"keywords_high_multiplicity","type":["str"],"optional":true,"alias":[],"doc":"Keywords for points with multiple raicals. `multiplicity` should be `auto`. If not set, fallback to normal keywords.","repeat":false,"sub_fields":{},"sub_variants":{}}},"sub_variants":{}},"ratio_failed":{"object":"Argument","name":"ratio_failed","type":["float"],"optional":true,"alias":[],"doc":"Check the ratio of unsuccessfully terminated jobs. If too many FP tasks are not converged, RuntimeError will be raised.","repeat":false,"sub_fields":{},"sub_variants":{}}},"sub_variants":{}}},"choice_alias":{},"doc":"Software for First Principles, if `labeled` is false. Options include “vasp”, “gaussian” up to now."}}}')}}]);