[build-system]
requires = ["flit_core>=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "nncli"
authors = [
	{name = "Daniel Moch", email = "daniel@danielmoch.com"},
]
readme = "README.rst"
requires-python = ">=3"
classifiers = [
	"License :: OSI Approved :: MIT License",
	"Development Status :: 4 - Beta",
	"Environment :: Console :: Curses",
	"Intended Audience :: End Users/Desktop",
	"License :: OSI Approved :: MIT License",
	"Programming Language :: Python :: 3 :: Only",
]
dependencies = [
	"appdirs",
	"click",
	"requests",
	"urwid",
]

dynamic = [ "version", "description" ]

[project.urls]
Homepage = "https://nncli.org"
"Source Code" = "https://git.danielmoch.com/nncli"

[project.optional-dependencies]
dev = [
	"flit",
	"mock",
	"pathlib2; python_version < '3.5'",
	"pip-tools",
	"pylint",
	"pytest-cov",
	"pytest-mock",
	"pytest>=6.2.5",
	"scandir; python_version < '3.5'",
	"sphinx",
	"sphinx-material",
	"sphinx-sitemap",
	"vulture",
]
doc = [
	"sphinx",
	"sphinx-material",
	"sphinx-sitemap",
]

[project.scripts]
nncli = "nncli.cli:main"

[tool.coverage.run]
branch = true
omit = "nncli/__main__.py"

[tool.coverage.report]
show_missing = true

[tool.pytest.ini_options]
mock_use_standalone_module = true

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py37, py38, py39, py310, pylint, coverage
skipsdist = True

[testenv:pylint]
deps = -rrequirements-dev.txt
allowlist_externals = make
commands =
    make lint

[testenv:coverage]
deps = -rrequirements-dev.txt
allowlist_externals = make
commands =
    make coverage

[testenv]
deps = -rrequirements-dev.txt
allowlist_externals = make
commands =
    make install
    python -m pytest
"""
