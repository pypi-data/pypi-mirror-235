!function(){var e,n;e=this,n=function(e){"use strict";function n(e,n,s){n in e?Object.defineProperty(e,n,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[n]=s}var s;let o=Spina.spina((n(s=class extends Spina.BaseModel{initialize(){this.hooks=[]}},"defaults",{id:null,name:null,settings:{}}),s=s))||s,t=Spina.spina({prototypeAttrs:["each","hookPoint"]})((n(s=class extends Spina.BaseModel{static each(e){var n=1<arguments.length&&void 0!==arguments[1]?arguments[1]:null;for(const s of this.prototype.hookPoint.hooks)e.call(n,s)}initialize(){var e=this.get("extension");console.assert(!!this.hookPoint,"This ExtensionHook subclass must define hookPoint"),console.assert(!!e,"An Extension instance must be passed to ExtensionHook"),e.hooks.push(this),this.hookPoint.addHook(this),this.setUpHook()}setUpHook(){}},"hookPoint",null),n(s,"defaults",{extension:null}),s=s))||s,a=Spina.spina(s=class extends Spina.BaseModel{initialize(){this.hooks=[]}addHook(e){this.hooks.push(e)}})||s,i=Spina.spina((n(s=class extends Spina.BaseModel{enable(){return new Promise((e,s)=>{this.save({enabled:!0},{wait:!0,error:(e,n)=>{this.set({canEnable:!n.errorRsp.needs_reload,loadError:n.errorRsp.load_error,loadable:!1}),s(new Error(n.errorText))},success:()=>e()})})}disable(){return new Promise((e,n)=>{this.save({enabled:!1},{wait:!0,error:e=>n(new Error(e.errorText)),success:()=>e()})})}toJSON(){return{enabled:this.get("enabled")}}parse(e){var n=(e=void 0!==e.stat?e.extension:e).class_name,s=e.links["admin-configure"],o=e.links["admin-database"];return this.url=""+this.collection.url+n+"/",{author:e.author,authorURL:e.author_url,canDisable:e.can_disable,canEnable:e.can_enable,configURL:s?s.href:null,dbURL:o?o.href:null,enabled:e.enabled,id:n,loadError:e.load_error,loadable:e.loadable,name:e.name,summary:e.summary,version:e.version}}sync(e,n,a){return Backbone.sync.call(this,e,n,_.defaults({contentType:"application/x-www-form-urlencoded",data:n.toJSON(),processData:!0,error:(n,e,s)=>{let o,t;try{o=$.parseJSON(n.responseText),t=o.err.msg}catch(e){t="HTTP "+n.status+" "+n.statusText,o={canEnable:!1,loadError:t}}_.isFunction(a.error)&&(n.errorText=t,n.errorRsp=o,a.error(n,e,s))}},a))}},"defaults",{author:null,authorURL:null,configURL:null,dbURL:null,enabled:!1,loadError:null,loadable:!0,name:null,summary:null,version:null}),s=s))||s,l=Spina.spina((n(s=class extends Spina.BaseCollection{parse(e){return e.extensions}},"model",i),s=s))||s,r=Spina.spina((n(s=class extends Spina.BaseModel{initialize(){this.installedExtensions=new l,this.installedExtensions.url=this.get("apiRoot")}load(){this.trigger("loading"),this.installedExtensions.fetch({success:()=>this.trigger("loaded")})}},"defaults",{apiRoot:null}),s=s))||s;e.Extension=o,e.ExtensionHook=t,e.ExtensionHookPoint=a,e.ExtensionManager=r},"object"==typeof exports&&"undefined"!=typeof module?n(exports):"function"==typeof define&&define.amd?define(["exports"],n):n((e="undefined"!=typeof globalThis?globalThis:e||self).Djblets=e.Djblets||{})}.call(this);
