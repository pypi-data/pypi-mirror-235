{"version":3,"file":"avatarSettingsFormView.js","names":["readyPromise","resolve","Promise","withResolver","Djblets","Avatars","SettingsFormView","Backbone","View","extend","events","initialize","console","assert","instance","_configForms","Map","_$config","$","listenTo","model","_showHideForms","_onSubmit","e","serviceID","get","currentForm","validate","preventDefault","renderForms","form","values","render","change","previousID","previous","previousForm","undefined","$el","hide","show","_onServiceChanged","$target","target","set","val","addConfigForm","formClass","el","ready"],"sources":["../../../../../../static/djblets/js/avatars/views/avatarSettingsFormView.es6.js"],"sourcesContent":["(function() {\n\n\nconst [readyPromise, resolve] = Promise.withResolver();\n\n\n/**\n * A form for managing the settings of avatar services.\n *\n * This form lets you select the avatar service you wish to use, as well as\n * configure the settings for that avatar service.\n */\nDjblets.Avatars.SettingsFormView = Backbone.View.extend({\n    events: {\n        'change #id_avatar_service_id': '_onServiceChanged',\n        'submit': '_onSubmit',\n    },\n\n    /**\n     * Initialize the form.\n     */\n    initialize() {\n        console.assert(Djblets.Avatars.SettingsFormView.instance === null);\n        Djblets.Avatars.SettingsFormView.instance = this;\n        this._configForms = new Map();\n\n        this._$config = this.$('.avatar-service-configuration');\n\n        this.listenTo(this.model, 'change:serviceID',\n                      () => this._showHideForms());\n\n        /*\n         * The promise continuations will only be executed once the stack is\n         * unwound.\n         */\n        resolve();\n    },\n\n    /**\n     * Validate the current form upon submission.\n     *\n     * Args:\n     *     e (Event):\n     *         The form submission event.\n     */\n    _onSubmit(e) {\n        const serviceID = this.model.get('serviceID');\n        const currentForm = this._configForms.get(serviceID);\n\n        if (currentForm && !currentForm.validate()) {\n            e.preventDefault();\n        }\n    },\n\n    /**\n     * Render the child forms.\n     *\n     * This will show the for the currently selected service if it has one.\n     *\n     * Returns:\n     *     Djblets.Avatars.SettingsFormView:\n     *     This view (for chaining).\n     */\n    renderForms() {\n        for (const form of this._configForms.values()) {\n            form.render();\n        }\n\n        /*\n         * Ensure that if the browser sets the value of the <select> upon\n         * refresh that we update the model accordingly.\n         */\n        this.$('#id_avatar_service_id').change();\n        this._showHideForms(true);\n\n        return this;\n    },\n\n    /**\n     * Show or hide the configuration form.\n     */\n    _showHideForms() {\n        const serviceID = this.model.get('serviceID');\n        const currentForm = this._configForms.get(serviceID);\n        const previousID = this.model.previous('serviceID');\n        const previousForm = previousID\n            ? this._configForms.get(previousID)\n            : undefined;\n\n        if (previousForm && currentForm) {\n            previousForm.$el.hide();\n            currentForm.$el.show();\n        } else if (previousForm) {\n            previousForm.$el.hide();\n            this._$config.hide();\n        } else if (currentForm) {\n            currentForm.$el.show();\n            this._$config.show();\n        }\n\n    },\n\n    /**\n     * Handle the service being changed.\n     *\n     * Args:\n     *     e (Event):\n     *         The change event.\n     */\n    _onServiceChanged(e) {\n        const $target = $(e.target);\n        this.model.set('serviceID', $target.val());\n    },\n}, {\n    /**\n     * The form instance.\n     */\n    instance: null,\n\n    /**\n     * Add a configuration form to the instance.\n     *\n     * Args:\n     *     serviceID (string):\n     *         The unique ID for the avatar service.\n     *\n     *     formClass (constructor):\n     *         The view to use for the form.\n     */\n    addConfigForm(serviceID, formClass) {\n        Djblets.Avatars.SettingsFormView.instance._configForms.set(\n            serviceID,\n            new formClass({\n                el: $(`[data-avatar-service-id=\"${serviceID}\"]`),\n                model: Djblets.Avatars.SettingsFormView.instance.model,\n            }));\n    },\n\n    /**\n     * A promise that is resolved when the avatar services form has been\n     * initialized.\n     */\n    ready: readyPromise,\n});\n\n\n})();\n"],"mappings":"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"}