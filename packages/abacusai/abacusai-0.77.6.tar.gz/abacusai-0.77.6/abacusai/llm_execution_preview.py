from .return_class import AbstractApiClass


class LlmExecutionPreview(AbstractApiClass):
    """
        Preview of executing queries using LLM.

        Args:
            client (ApiClient): An authenticated API Client instance
            error (str): The error message if the preview failed.
            sql (str): Preview of SQL query generated by LLM.
    """

    def __init__(self, client, error=None, sql=None):
        super().__init__(client, None)
        self.error = error
        self.sql = sql

    def __repr__(self):
        return f"LlmExecutionPreview(error={repr(self.error)},\n  sql={repr(self.sql)})"

    def to_dict(self):
        """
        Get a dict representation of the parameters in this class

        Returns:
            dict: The dict value representation of the class parameters
        """
        resp = {'error': self.error, 'sql': self.sql}
        return {key: value for key, value in resp.items() if value is not None}
