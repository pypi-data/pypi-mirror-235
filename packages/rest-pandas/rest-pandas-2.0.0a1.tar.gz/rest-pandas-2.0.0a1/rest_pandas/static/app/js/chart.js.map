{"version":3,"file":"chart.js","sources":["django-rest-pandas/packages/chart/src/config.js","django-rest-pandas/node_modules/react-plotly.js/factory.js","django-rest-pandas/packages/chart/src/hooks.js","django-rest-pandas/packages/chart/src/charts/Series.jsx","django-rest-pandas/packages/chart/src/charts/Scatter.jsx","django-rest-pandas/packages/chart/src/charts/Boxplot.jsx","django-rest-pandas/packages/chart/src/index.js"],"sourcesContent":["const config = {\n    plotly: \"https://cdn.plot.ly/plotly-2.26.2.min.js\",\n};\n\nexport default config;\n","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = plotComponentFactory;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n// The naming convention is:\n//   - events are attached as `'plotly_' + eventName.toLowerCase()`\n//   - react props are `'on' + eventName`\nvar eventNames = ['AfterExport', 'AfterPlot', 'Animated', 'AnimatingFrame', 'AnimationInterrupted', 'AutoSize', 'BeforeExport', 'BeforeHover', 'ButtonClicked', 'Click', 'ClickAnnotation', 'Deselect', 'DoubleClick', 'Framework', 'Hover', 'LegendClick', 'LegendDoubleClick', 'Relayout', 'Relayouting', 'Restyle', 'Redraw', 'Selected', 'Selecting', 'SliderChange', 'SliderEnd', 'SliderStart', 'SunburstClick', 'Transitioning', 'TransitionInterrupted', 'Unhover', 'WebGlContextLost'];\nvar updateEvents = ['plotly_restyle', 'plotly_redraw', 'plotly_relayout', 'plotly_relayouting', 'plotly_doubleclick', 'plotly_animated', 'plotly_sunburstclick']; // Check if a window is available since SSR (server-side rendering)\n// breaks unnecessarily if you try to use it server-side.\n\nvar isBrowser = typeof window !== 'undefined';\n\nfunction plotComponentFactory(Plotly) {\n  var PlotlyComponent = /*#__PURE__*/function (_Component) {\n    _inherits(PlotlyComponent, _Component);\n\n    var _super = _createSuper(PlotlyComponent);\n\n    function PlotlyComponent(props) {\n      var _this;\n\n      _classCallCheck(this, PlotlyComponent);\n\n      _this = _super.call(this, props);\n      _this.p = Promise.resolve();\n      _this.resizeHandler = null;\n      _this.handlers = {};\n      _this.syncWindowResize = _this.syncWindowResize.bind(_assertThisInitialized(_this));\n      _this.syncEventHandlers = _this.syncEventHandlers.bind(_assertThisInitialized(_this));\n      _this.attachUpdateEvents = _this.attachUpdateEvents.bind(_assertThisInitialized(_this));\n      _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n      _this.handleUpdate = _this.handleUpdate.bind(_assertThisInitialized(_this));\n      _this.figureCallback = _this.figureCallback.bind(_assertThisInitialized(_this));\n      _this.updatePlotly = _this.updatePlotly.bind(_assertThisInitialized(_this));\n      return _this;\n    }\n\n    _createClass(PlotlyComponent, [{\n      key: \"updatePlotly\",\n      value: function updatePlotly(shouldInvokeResizeHandler, figureCallbackFunction, shouldAttachUpdateEvents) {\n        var _this2 = this;\n\n        this.p = this.p.then(function () {\n          if (_this2.unmounting) {\n            return;\n          }\n\n          if (!_this2.el) {\n            throw new Error('Missing element reference');\n          } // eslint-disable-next-line consistent-return\n\n\n          return Plotly.react(_this2.el, {\n            data: _this2.props.data,\n            layout: _this2.props.layout,\n            config: _this2.props.config,\n            frames: _this2.props.frames\n          });\n        }).then(function () {\n          if (_this2.unmounting) {\n            return;\n          }\n\n          _this2.syncWindowResize(shouldInvokeResizeHandler);\n\n          _this2.syncEventHandlers();\n\n          _this2.figureCallback(figureCallbackFunction);\n\n          if (shouldAttachUpdateEvents) {\n            _this2.attachUpdateEvents();\n          }\n        })[\"catch\"](function (err) {\n          if (_this2.props.onError) {\n            _this2.props.onError(err);\n          }\n        });\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this.unmounting = false;\n        this.updatePlotly(true, this.props.onInitialized, true);\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        this.unmounting = false; // frames *always* changes identity so fall back to check length only :(\n\n        var numPrevFrames = prevProps.frames && prevProps.frames.length ? prevProps.frames.length : 0;\n        var numNextFrames = this.props.frames && this.props.frames.length ? this.props.frames.length : 0;\n        var figureChanged = !(prevProps.layout === this.props.layout && prevProps.data === this.props.data && prevProps.config === this.props.config && numNextFrames === numPrevFrames);\n        var revisionDefined = prevProps.revision !== void 0;\n        var revisionChanged = prevProps.revision !== this.props.revision;\n\n        if (!figureChanged && (!revisionDefined || revisionDefined && !revisionChanged)) {\n          return;\n        }\n\n        this.updatePlotly(false, this.props.onUpdate, false);\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this.unmounting = true;\n        this.figureCallback(this.props.onPurge);\n\n        if (this.resizeHandler && isBrowser) {\n          window.removeEventListener('resize', this.resizeHandler);\n          this.resizeHandler = null;\n        }\n\n        this.removeUpdateEvents();\n        Plotly.purge(this.el);\n      }\n    }, {\n      key: \"attachUpdateEvents\",\n      value: function attachUpdateEvents() {\n        var _this3 = this;\n\n        if (!this.el || !this.el.removeListener) {\n          return;\n        }\n\n        updateEvents.forEach(function (updateEvent) {\n          _this3.el.on(updateEvent, _this3.handleUpdate);\n        });\n      }\n    }, {\n      key: \"removeUpdateEvents\",\n      value: function removeUpdateEvents() {\n        var _this4 = this;\n\n        if (!this.el || !this.el.removeListener) {\n          return;\n        }\n\n        updateEvents.forEach(function (updateEvent) {\n          _this4.el.removeListener(updateEvent, _this4.handleUpdate);\n        });\n      }\n    }, {\n      key: \"handleUpdate\",\n      value: function handleUpdate() {\n        this.figureCallback(this.props.onUpdate);\n      }\n    }, {\n      key: \"figureCallback\",\n      value: function figureCallback(callback) {\n        if (typeof callback === 'function') {\n          var _this$el = this.el,\n              data = _this$el.data,\n              layout = _this$el.layout;\n          var frames = this.el._transitionData ? this.el._transitionData._frames : null;\n          var figure = {\n            data: data,\n            layout: layout,\n            frames: frames\n          };\n          callback(figure, this.el);\n        }\n      }\n    }, {\n      key: \"syncWindowResize\",\n      value: function syncWindowResize(invoke) {\n        var _this5 = this;\n\n        if (!isBrowser) {\n          return;\n        }\n\n        if (this.props.useResizeHandler && !this.resizeHandler) {\n          this.resizeHandler = function () {\n            return Plotly.Plots.resize(_this5.el);\n          };\n\n          window.addEventListener('resize', this.resizeHandler);\n\n          if (invoke) {\n            this.resizeHandler();\n          }\n        } else if (!this.props.useResizeHandler && this.resizeHandler) {\n          window.removeEventListener('resize', this.resizeHandler);\n          this.resizeHandler = null;\n        }\n      }\n    }, {\n      key: \"getRef\",\n      value: function getRef(el) {\n        this.el = el;\n\n        if (this.props.debug && isBrowser) {\n          window.gd = this.el;\n        }\n      } // Attach and remove event handlers as they're added or removed from props:\n\n    }, {\n      key: \"syncEventHandlers\",\n      value: function syncEventHandlers() {\n        var _this6 = this;\n\n        eventNames.forEach(function (eventName) {\n          var prop = _this6.props['on' + eventName];\n          var handler = _this6.handlers[eventName];\n          var hasHandler = Boolean(handler);\n\n          if (prop && !hasHandler) {\n            _this6.addEventHandler(eventName, prop);\n          } else if (!prop && hasHandler) {\n            // Needs to be removed:\n            _this6.removeEventHandler(eventName);\n          } else if (prop && hasHandler && prop !== handler) {\n            // replace the handler\n            _this6.removeEventHandler(eventName);\n\n            _this6.addEventHandler(eventName, prop);\n          }\n        });\n      }\n    }, {\n      key: \"addEventHandler\",\n      value: function addEventHandler(eventName, prop) {\n        this.handlers[eventName] = prop;\n        this.el.on(this.getPlotlyEventName(eventName), this.handlers[eventName]);\n      }\n    }, {\n      key: \"removeEventHandler\",\n      value: function removeEventHandler(eventName) {\n        this.el.removeListener(this.getPlotlyEventName(eventName), this.handlers[eventName]);\n        delete this.handlers[eventName];\n      }\n    }, {\n      key: \"getPlotlyEventName\",\n      value: function getPlotlyEventName(eventName) {\n        return 'plotly_' + eventName.toLowerCase();\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n          id: this.props.divId,\n          style: this.props.style,\n          ref: this.getRef,\n          className: this.props.className\n        });\n      }\n    }]);\n\n    return PlotlyComponent;\n  }(_react.Component);\n\n  PlotlyComponent.propTypes = {\n    data: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].object),\n    config: _propTypes[\"default\"].object,\n    layout: _propTypes[\"default\"].object,\n    frames: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].object),\n    revision: _propTypes[\"default\"].number,\n    onInitialized: _propTypes[\"default\"].func,\n    onPurge: _propTypes[\"default\"].func,\n    onError: _propTypes[\"default\"].func,\n    onUpdate: _propTypes[\"default\"].func,\n    debug: _propTypes[\"default\"].bool,\n    style: _propTypes[\"default\"].object,\n    className: _propTypes[\"default\"].string,\n    useResizeHandler: _propTypes[\"default\"].bool,\n    divId: _propTypes[\"default\"].string\n  };\n  eventNames.forEach(function (eventName) {\n    PlotlyComponent.propTypes['on' + eventName] = _propTypes[\"default\"].func;\n  });\n  PlotlyComponent.defaultProps = {\n    debug: false,\n    useResizeHandler: false,\n    data: [],\n    style: {\n      position: 'relative',\n      display: 'inline-block'\n    }\n  };\n  return PlotlyComponent;\n}\n//# sourceMappingURL=factory.js.map","import { useState, useEffect, useMemo } from \"react\";\nimport config from \"./config.js\";\nimport createPlotlyComponent from \"react-plotly.js/factory\";\n\nconst plotlyRef = {},\n    defaultLayout = { autosize: true };\n\nexport function usePlotly() {\n    const [Plot, setPlot] = useState(() => plotlyRef.current);\n\n    useEffect(() => {\n        if (plotlyRef.current) {\n            return;\n        }\n        loadPlotly();\n        async function loadPlotly() {\n            try {\n                await import(config.plotly);\n                const Plot = createPlotlyComponent(window.Plotly);\n                plotlyRef.current = Plot;\n                setPlot(() => Plot);\n            } catch {\n                setPlot(() => ErrorPlot);\n            }\n        }\n    });\n\n    return Plot || LoadingPlot;\n}\n\nfunction LoadingPlot() {\n    return \"Loading...\";\n}\n\nfunction ErrorPlot() {\n    return \"Error loading Plotly.\";\n}\n\nexport function usePlotLayout({ type, x, y, layout }) {\n    return useMemo(\n        () => ({\n            ...defaultLayout,\n            boxmode: type === \"box\" ? \"group\" : null,\n            ...layout,\n            xaxis: { title: x, ...(layout || {}).xaxis },\n            yaxis: { title: y, ...(layout || {}).yaxis },\n        }),\n        [type, x, y, layout],\n    );\n}\n\nexport function usePlotData({ type, mode, datasets, x, y, label, group }) {\n    return useMemo(() => {\n        const data = (datasets || []).map((dataset) => {\n            const trace = {\n                type,\n                mode,\n                name: getLabel(dataset),\n                x: [],\n                y: [],\n                text: [],\n            };\n            for (const row of dataset.data.slice().sort(valueSort(x))) {\n                const [xVal, xNote] = getX(row, x, type, group),\n                    [yVal, yNote] = getY(row, y),\n                    labelVal = row[label];\n                if (xVal !== undefined && yVal !== undefined) {\n                    trace.x.push(xVal);\n                    trace.y.push(yVal);\n                    trace.text.push(\n                        [labelVal, xNote, yNote].filter(Boolean).join(\"<br>\") ||\n                            null,\n                    );\n                }\n            }\n            if (type === \"box\") {\n                trace.boxpoints = \"outliers\";\n            }\n            return trace;\n        });\n        return data;\n    }, [datasets, x, y, type, mode, group, label]);\n}\n\nfunction getX(row, x, type, group) {\n    const [xVal, xNote] = getVal(row, x);\n    if (type === \"box\") {\n        if (group === \"year\") {\n            return [xVal.split(\"-\")[0], xNote];\n        } else if (group === \"month\") {\n            return [xVal.split(\"-\").slice(0, 2).join(\"-\"), xNote];\n        } else {\n            return [\"\", xNote];\n        }\n    } else {\n        return [xVal, xNote];\n    }\n}\n\nfunction getY(row, y) {\n    return getVal(row, y);\n}\n\nfunction getVal(row, key) {\n    const val = row[key];\n    if (\n        typeof val === \"string\" &&\n        (val[0] === \">\" || val[0] === \"<\") &&\n        !isNaN(+val.slice(1))\n    ) {\n        return [+val.slice(1), `Note: ${key} ${val}`];\n    } else {\n        return [val, null];\n    }\n}\n\nfunction getLabel(dataset) {\n    const label = [];\n    for (const [key, val] of Object.entries(dataset)) {\n        if (key === \"data\") {\n            continue;\n        }\n        label.push(val);\n    }\n    return label.join(\" \");\n}\n\nfunction valueSort(field) {\n    return (row1, row2) => {\n        const value1 = row1[field],\n            value2 = row2[field];\n        if (value1 > value2) {\n            return 1;\n        } else if (value1 < value2) {\n            return -1;\n        } else {\n            return 0;\n        }\n    };\n}\n","import React from \"react\";\nimport { usePlotly, usePlotData, usePlotLayout } from \"../hooks.js\";\nimport PropTypes from \"prop-types\";\n\nexport default function Series({ datasets, x, y, layout, style }) {\n    const Plot = usePlotly(),\n        data = usePlotData({\n            datasets,\n            x,\n            y,\n            type: \"scatter\",\n            mode: \"lines+markers\",\n        }),\n        _layout = usePlotLayout({ x, y, layout });\n    return (\n        <Plot\n            data={data}\n            layout={_layout}\n            useResizeHandler\n            style={{ flex: 1, ...style }}\n        />\n    );\n}\n\nSeries.propTypes = {\n    datasets: PropTypes.arrayOf(PropTypes.object),\n    x: PropTypes.string,\n    y: PropTypes.string,\n    layout: PropTypes.object,\n    style: PropTypes.object,\n};\n","import React from \"react\";\nimport { usePlotly, usePlotData, usePlotLayout } from \"../hooks.js\";\nimport PropTypes from \"prop-types\";\n\nexport default function Scatter({ datasets, x, y, label, layout, style }) {\n    const Plot = usePlotly(),\n        data = usePlotData({\n            datasets,\n            x,\n            y,\n            type: \"scatter\",\n            mode: \"markers\",\n            label,\n        }),\n        _layout = usePlotLayout({ x, y, layout });\n    return (\n        <Plot\n            data={data}\n            layout={_layout}\n            useResizeHandler\n            style={{ flex: 1, ...style }}\n        />\n    );\n}\n\nScatter.propTypes = {\n    datasets: PropTypes.arrayOf(PropTypes.object),\n    x: PropTypes.string,\n    y: PropTypes.string,\n    label: PropTypes.string,\n    layout: PropTypes.object,\n    style: PropTypes.object,\n};\n","import React from \"react\";\nimport { usePlotly, usePlotData, usePlotLayout } from \"../hooks.js\";\nimport PropTypes from \"prop-types\";\n\nexport default function Boxplot({ datasets, x, y, group, layout, style }) {\n    const Plot = usePlotly(),\n        data = usePlotData({ datasets, x, y, type: \"box\", group, label: x }),\n        _layout = usePlotLayout({ x, y, type: \"box\", layout });\n    return (\n        <Plot\n            data={data}\n            layout={_layout}\n            useResizeHandler\n            style={{ flex: 1, ...style }}\n        />\n    );\n}\n\nBoxplot.propTypes = {\n    datasets: PropTypes.arrayOf(PropTypes.object),\n    x: PropTypes.string,\n    y: PropTypes.string,\n    group: PropTypes.string,\n    layout: PropTypes.object,\n    style: PropTypes.object,\n};\n","import config from \"./config.js\";\n\nconst chart = {\n    name: \"chart\",\n    config,\n    init(config) {\n        Object.assign(this.config, config);\n    },\n};\n\nexport default chart;\nexport * from \"./charts/index.js\";\nexport * from \"./hooks.js\";\n"],"names":["config","plotly","Plotly","PlotlyComponent","_Component","_inherits","_super","props","_this","_classCallCheck","call","p","Promise","resolve","resizeHandler","handlers","syncWindowResize","bind","_assertThisInitialized","syncEventHandlers","attachUpdateEvents","getRef","handleUpdate","figureCallback","updatePlotly","_createClass","key","value","shouldInvokeResizeHandler","figureCallbackFunction","shouldAttachUpdateEvents","_this2","this","then","unmounting","el","Error","react","data","layout","frames","err","onError","onInitialized","prevProps","numPrevFrames","length","numNextFrames","figureChanged","revisionDefined","revision","revisionChanged","onUpdate","onPurge","isBrowser","window","removeEventListener","removeUpdateEvents","purge","_this3","removeListener","updateEvents","forEach","updateEvent","on","_this4","callback","_this$el","_transitionData","_frames","invoke","_this5","useResizeHandler","Plots","resize","addEventListener","debug","gd","_this6","eventNames","eventName","prop","handler","hasHandler","Boolean","addEventHandler","removeEventHandler","getPlotlyEventName","toLowerCase","_react","createElement","id","divId","style","ref","className","Component","propTypes","_propTypes","arrayOf","object","number","func","bool","string","defaultProps","position","display","_interopRequireWildcard","require","plotlyRef","defaultLayout","autosize","usePlotly","Plot","setPlot","useState","current","useEffect","async","import","createPlotlyComponent","ErrorPlot","loadPlotly","LoadingPlot","usePlotLayout","type","x","y","useMemo","boxmode","xaxis","title","yaxis","usePlotData","mode","datasets","label","group","map","dataset","trace","name","getLabel","text","row","slice","sort","field","row1","row2","value1","value2","valueSort","xVal","xNote","getX","yVal","yNote","getY","labelVal","undefined","push","filter","join","boxpoints","getVal","split","val","isNaN","Object","entries","Series","_layout","React","flex","Scatter","Boxplot","PropTypes","chart","init","assign"],"mappings":"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","x_google_ignoreList":[1]}