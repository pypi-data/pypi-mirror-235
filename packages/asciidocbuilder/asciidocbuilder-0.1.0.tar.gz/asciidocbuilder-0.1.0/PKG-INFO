Metadata-Version: 2.1
Name: asciidocbuilder
Version: 0.1.0
Summary: 
Author: Pedro Vidigal
Author-email: vidigal.pedro@gmail.com
Requires-Python: >=3.9,<4.0
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Dist: black (>=23.9.1,<24.0.0)
Requires-Dist: pendulum (>=2.1.2,<3.0.0)
Requires-Dist: pip-tools (>=7.3.0,<8.0.0)
Requires-Dist: pytest (>=7.4.2,<8.0.0)
Description-Content-Type: text/markdown

# AsciiDocBuilder

**AsciiDocBuilder** is a Python library designed to make it easy to construct AsciiDoc documents programmatically. Through its object-oriented interface, users can seamlessly design and structure AsciiDoc elements, thus providing a modular and extensible approach to generating detailed documentation.

## Features

- **Object-Oriented Approach**: Create and manage AsciiDoc content with intuitive Python objects.
- **Modular Design**: Different modules for various AsciiDoc elements, such as `text`, `structure`, `admonition`, etc.
- **Easy Extendability**: The architecture supports the creation of new custom elements and behaviors with ease.

## Installation

```bash
pip install asciidocbuilder
```

_Note: This installation instruction assumes the presence of the package on PyPi. If not available, ensure to provide accurate installation steps._

## Quick Start

Here's a simple example:

```python
from asciidocbuilder import AsciiDocBuilder, TextElement, Section

doc = AsciiDocBuilder("output.adoc")
section = Section("Introduction", 1)
section.add_element(TextElement("Welcome to the AsciiDoc world via AsciiDocBuilder!"))
doc.root.add_element(section)
doc.save()
```

The script above will generate an AsciiDoc file named `output.adoc` with your content.

## Comprehensive Documentation

Detailed documentation, including API references and advanced usage, is available [here](#). (Replace with an actual link when available)

## Examples

Explore the `examples` directory in the repository for various use-case scripts, demonstrating the vast capabilities of AsciiDocBuilder.

## Running Tests

Our test suite utilizes `pytest`. To execute tests, simply navigate to the project's root directory and run:

```bash
pytest
```

## Contribute to AsciiDocBuilder

We're open to contributions! Whether it's feature enhancements, bug fixes, or documentation improvements, your efforts are welcome. Kindly open an issue or submit a pull request.

## License

AsciiDocBuilder is licensed under the MIT License.

---

Remember, the best READMEs often include more visual content, like screenshots or diagrams, especially if the library/tool has any UI or visual output components. It's also beneficial to have links to detailed documentation, API references, and usage tutorials. As your project evolves, make sure to keep the README updated to reflect those changes.
